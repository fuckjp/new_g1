<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="jp" xml:lang="ja" xmlns:fb="http://ogp.me/ns/fb#"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta http-equiv="Content-Script-Type" content="text/javascript" /><meta http-equiv="Content-Style-Type" content="text/css" /><meta name="author" content="ファイテン株式会社" /><meta name="description" content="[metatags_description]" /><meta name="keywords" content="[metatags_keywords]" /><meta property="og:title" content="RAKUWA磁気チタンネックレス" /><meta property="og:type" content="website" /><meta property="og:url" content="http://www.phiten-store.com/products/detail223-2601.html" /><meta property="og:site_name" content="ファイテンオフィシャルストア" /><meta property="og:description" content="" /><meta property="og:image" content="http://www.phiten-store.com/upload/save_image/M_TG529052.jpg" /><link rel="stylesheet" href="/user_data/css/common.css" type="text/css" media="all" /><link rel="stylesheet" type="text/css" href="/user_data/packages/default/css/print.css" media="print" /><!--[if IE5]><link href="css/ie5win.css" rel="stylesheet" tye="text/css" media="screen" /><![endif]--><!--[if IE6]><link href="css/ie6win.css" rel="stylesheet" type="text/css" media="screen" /><![endif]--><!--[if IE7]><link href="css/ie7win.css" rel="stylesheet" type="text/css" media="screen" /><![endif]--><!-- ▼SETレコメンドエンジンPC用CSS --><link rel="stylesheet" href="/user_data/css/default_silveregg_pc.css" type="text/css" media="all"/><!-- ▲SETレコメンドエンジンPC用CSS --><link rel="alternate" type="application/rss+xml" title="RSS" href="http://www.phiten-store.com/rss/index.php" /><script type="text/javascript" src="/user_data/packages/default/js/navi.js"></script><script type="text/javascript" src="/user_data/packages/default/js/win_op.js"></script><script type="text/javascript" src="/user_data/packages/default/js/site.js"></script><script type="text/javascript" src="/user_data/packages/default/js/prototype.js"></script><script type="text/javascript" src="/user_data/packages/default/js/effects.js"></script><script type="text/javascript" src="/user_data/packages/default/js/accordion.js"></script><script type="text/javascript" src="/user_data/packages/default/js/rollover.js"></script><script type="text/javascript" src="/user_data/packages/default/js/heightLine.js"></script><script type="text/javascript" src="/user_data/packages/default/js/alphafilter.js"></script><script type="text/javascript" src="/user_data/packages/default/js/swfobject.js"></script><script type="text/javascript"><!--	list0 = new Array('選択してください');	list1 = new Array('選択してください', 'ブラック', 'ピンク', 'ブルー', 'イエロー');	list2 = new Array('選択してください', 'ブラック');	lists = new Array(list0,list1,list2);	val0 = new Array('');	val1 = new Array('', '630', '772', '961', '916');	val2 = new Array('', '630');	vals = new Array(val0,val1,val2);//--></script><noscript>  <p>JavaScript を有効にしてご利用下さい.</p></noscript><title>[metatags_titlex]</title></head><!-- ▼BODY部 スタート --><body onload="lnSetSelect('form1', 'combo_1', 'combo_2', '');"><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-52H9PB"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-52H9PB');</script><!-- End Google Tag Manager --><div id="fb-root"></div><script>(function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0];  if (d.getElementById(id)) return;  js = d.createElement(s); js.id = id;  js.src = "//connect.facebook.net/ja_JP/all.js#xfbml=1";  fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));</script><div id="wrapper"><a name="pageTop"></a><!--head --><p class="header-top fs10">「ファイテンオフィシャルストア」は、ファイテンの公式通販サイトです。</p><div id="header-area" class="clearfix">  <p id="cmo-logo" class="alphafilter">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>  <!--head-navi -->  <ul id="headerNav-area">    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="headerNav-size-l">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>  </ul>  <!--/head-navi --></div><!--search-area --><div id="search-area" class="clearfix">  <p id="search-ti">商品検索</p>  <!--検索フォーム-->  <div id="search-form">    <form name="search_form" id="search_form" method="get" action="/products/list.php">      <input type="hidden" name="mode" value="search" />      <select name="category_id" class="search-select">        <option value="">商品カテゴリを選択</option>        <option label="■新商品・再入荷商品" value="25">■新商品・再入荷商品</option><option label="　　新商品" value="225">　　新商品</option><option label="　　再入荷商品" value="224">　　再入荷商品</option><option label="■RAKUWAネック" value="6">■RAKUWAネック</option><option label="　　X100" value="143">　　X100</option><option label="　　X50" value="142">　　X50</option><option label="　　X1" value="17">　　X1</option><option label="　　磁気ネックレス" value="223">　　磁気ネックレス</option><option label="　　シリコーン" value="144">　　シリコーン</option><option label="　　ワイヤー" value="148">　　ワイヤー</option><option label="■ブレス・アンクレット" value="7">■ブレス・アンクレット</option><option label="　　RAKUWAブレス" value="39">　　RAKUWAブレス</option><option label="　　　X100" value="230">　　　X100</option><option label="　　　X50" value="229">　　　X50</option><option label="　　　シリコーン" value="226">　　　シリコーン</option><option label="　　RAKUWAアンクレット" value="192">　　RAKUWAアンクレット</option><option label="　　RAKUWAリング" value="38">　　RAKUWAリング</option><option label="■ボディケア" value="8">■ボディケア</option><option label="　　貼るボディケア" value="28">　　貼るボディケア</option><option label="　　塗るボディケア" value="40">　　塗るボディケア</option><option label="　　その他" value="101">　　その他</option><option label="■サポーター" value="9">■サポーター</option><option label="　　腕・肘・手首用" value="44">　　腕・肘・手首用</option><option label="　　脚・膝・足首用" value="43">　　脚・膝・足首用</option><option label="　　腰用" value="42">　　腰用</option><option label="　　スポーツ用サポーター" value="206">　　スポーツ用サポーター</option><option label="　　　スポーツスリーブ" value="216">　　　スポーツスリーブ</option><option label="　　　バレーボールサポーター" value="215">　　　バレーボールサポーター</option><option label="　　　スポーツサポーター" value="214">　　　スポーツサポーター</option><option label="　　ファイテンサポーター" value="213">　　ファイテンサポーター</option><option label="■アパレル" value="10">■アパレル</option><option label="　　Tシャツ" value="46">　　Tシャツ</option><option label="　　トップス" value="231">　　トップス</option><option label="　　　メンズ" value="234">　　　メンズ</option><option label="　　　レディース" value="235">　　　レディース</option><option label="　　ボトムス" value="232">　　ボトムス</option><option label="　　　メンズ" value="236">　　　メンズ</option><option label="　　　レディース" value="237">　　　レディース</option><option label="　　スポーツウエア" value="233">　　スポーツウエア</option><option label="　　インナー" value="96">　　インナー</option><option label="　　　メンズ" value="97">　　　メンズ</option><option label="　　　レディース" value="98">　　　レディース</option><option label="　　ソックス" value="93">　　ソックス</option><option label="　　　メンズ" value="129">　　　メンズ</option><option label="　　　レディース" value="130">　　　レディース</option><option label="　　　スポーツソックス" value="246">　　　スポーツソックス</option><option label="　　シューズ・インソール" value="88">　　シューズ・インソール</option><option label="　　小物" value="124">　　小物</option><option label="■アクセサリー" value="11">■アクセサリー</option><option label="　　チタン" value="110">　　チタン</option><option label="　　水晶・天然石" value="99">　　水晶・天然石</option><option label="　　ネックレス" value="187">　　ネックレス</option><option label="　　ブレス・ピアス" value="193">　　ブレス・ピアス</option><option label="■寝具・日用品" value="12">■寝具・日用品</option><option label="　　寝具" value="31">　　寝具</option><option label="　　　ピロー" value="238">　　　ピロー</option><option label="　　　掛けふとん・毛布" value="239">　　　掛けふとん・毛布</option><option label="　　　マットレス・敷きパッド" value="240">　　　マットレス・敷きパッド</option><option label="　　　その他" value="241">　　　その他</option><option label="　　日用品" value="55">　　日用品</option><option label="　　ヘアケア" value="54">　　ヘアケア</option><option label="　　　シャンプー" value="242">　　　シャンプー</option><option label="　　　トリートメント" value="243">　　　トリートメント</option><option label="　　　スタイリング" value="244">　　　スタイリング</option><option label="　　　その他" value="245">　　　その他</option><option label="　　機器類" value="57">　　機器類</option><option label="　　ギフト" value="52">　　ギフト</option><option label="■レディース" value="149">■レディース</option><option label="　　新着商品" value="178">　　新着商品</option><option label="　　スキンケア・コスメ" value="150">　　スキンケア・コスメ</option><option label="　　　基礎化粧品" value="157">　　　基礎化粧品</option><option label="　　　ファンデーション" value="158">　　　ファンデーション</option><option label="　　　簡易基礎化粧品" value="159">　　　簡易基礎化粧品</option><option label="　　　原液シリーズ" value="160">　　　原液シリーズ</option><option label="　　　その他" value="161">　　　その他</option><option label="　　アパレル" value="151">　　アパレル</option><option label="　　　Tシャツ" value="162">　　　Tシャツ</option><option label="　　　トップス" value="197">　　　トップス</option><option label="　　　ボトムス" value="198">　　　ボトムス</option><option label="　　　スポーツウエア" value="163">　　　スポーツウエア</option><option label="　　　インナー" value="196">　　　インナー</option><option label="　　　ソックス" value="164">　　　ソックス</option><option label="　　　シューズ・インソール" value="194">　　　シューズ・インソール</option><option label="　　ジュエリー" value="154">　　ジュエリー</option><option label="■健康食品" value="15">■健康食品</option><option label="　　新着商品" value="137">　　新着商品</option><option label="　　桑葉青汁" value="138">　　桑葉青汁</option><option label="　　サプリメント" value="14">　　サプリメント</option><option label="　　水・ドリンク" value="64">　　水・ドリンク</option><option label="　　その他" value="60">　　その他</option><option label="■スポーツで選ぶ" value="13">■スポーツで選ぶ</option><option label="　　ランニング" value="59">　　ランニング</option><option label="　　ウォーキング" value="58">　　ウォーキング</option><option label="　　ゴルフ" value="182">　　ゴルフ</option><option label="　　野球" value="183">　　野球</option><option label="　　　広島東洋カープ" value="251">　　　広島東洋カープ</option><option label="　　　阪神タイガース" value="250">　　　阪神タイガース</option><option label="　　ウォータースポーツ" value="248">　　ウォータースポーツ</option><option label="　　バレーボール" value="184">　　バレーボール</option><option label="■シリーズで選ぶ" value="16">■シリーズで選ぶ</option><option label="　　Ultimate Performance Gear" value="221">　　Ultimate Performance Gear</option><option label="　　スポーツ専用特別商品" value="211">　　スポーツ専用特別商品</option><option label="　　コラボレーション商品" value="200">　　コラボレーション商品</option><option label="　　　ファイテン×ドロン" value="212">　　　ファイテン×ドロン</option><option label="　　　その他" value="220">　　　その他</option><option label="　　アスリート使用モデル" value="199">　　アスリート使用モデル</option><option label="　　USAモデル" value="209">　　USAモデル</option><option label="　　ペット用品" value="116">　　ペット用品</option><option label="　　アウトレット" value="222">　　アウトレット</option>      </select>      <input type="text" name="name" size="30" class="search-key" />      <input type="submit" value="" class="search-img" />    </form>  </div></div><!--▲検索条件ここまで--><!--/search-area --><!--/head --><div id="contents-area" class="clearfix">      <div id="main-contents-area">                      <div id="fb-root"></div><script type="text/javascript"><!--(function(d, s, id) {  var js, fjs = d.getElementsByTagName(s)[0];  if (d.getElementById(id)) return;  js = d.createElement(s);  js.id = id;  js.src = "//connect.facebook.net/ja_JP/all.js#xfbml=1";  fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));//--></script><!--main-contents -->      <ul id="link-path" class="clearfix">        <li>[hrefx]</li>                        <li class="link-path-anchor">[hrefx]</li>                        <li class="link-path-anchor">[hrefx]</li>                <li class="link-path-def">RAKUWA磁気チタンネックレス</li>      </ul>      <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>      <div class="main-contents-inner-bg">                <!--product-freeSpace -->          <div id="pro-freeSpace" class="clearfix">          <img src="/product_data/product_2601/img/top.jpg" alt="RAKUWA磁気チタンネックレス" />          </div>        <!--/product-freeSpace -->                <!--product-spec -->        <div class="pro-detail-wrap clearfix">          <div class="pro-detail-l">          <p>                                                              <a href="javascript:void(win01('/products/detail_image.php?product_id=2601&amp;image=main_large_image','detail_image','520', '425'))">            <img src="/upload/save_image/M_TG529052.jpg" width="360" alt="RAKUWA磁気チタンネックレス" /></a>            <ul>              <li>                <a href="javascript:void(win01('/products/detail_image.php?product_id=2601&amp;image=main_large_image','detail_image','520', '425'))">                <img src="/user_data/packages/default/img/products/pro_btn_scale_up.gif" alt="拡大画像を見る" width="154" height="30" border="0" /></a>              </li>            </ul>                                                                                  <a href="javascript:void(win01('/products/detail_image.php?product_id=2601&amp;image=main_large_image2','detail_image','520', '425'))">            <img src="/upload/save_image/M_TG529052_2.jpg" width="360" alt="RAKUWA磁気チタンネックレス" /></a>                        <ul>              <li>                <a href="javascript:void(win01('/products/detail_image.php?product_id=2601&amp;image=main_large_image2','detail_image','520', '425'))">                <img src="/user_data/packages/default/img/products/pro_btn_scale_up.gif" alt="拡大画像を見る" width="154" height="30" border="0" /></a>              </li>            </ul>                    </p>                    </div>          <div class="pro-detail-r">            <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>            <ul id="pro-icon" class="clearfix">                                                                                                              <li><img src="/user_data/packages/default/img/right_product/pro_icon_gift.gif" width="47" height="15" alt="ギフト" id="icon2" /></li>                                                                                <li><img src="/user_data/packages/default/img/right_product/pro_icon_mail.gif" width="47" height="15" alt="メール便" id="icon3" /></li>                                                                                                                <li><img src="/user_data/packages/default/img/right_product/pro_icon_osusume.gif" width="47" height="15" alt="オススメ" id="icon5" /></li>                                                                                                                                                                                                                <li><img src="/user_data/packages/default/img/right_product/pro_icon_simple_package.gif" width="47" height="15" alt="袋包装" id="icon10" /></li>                                                          </ul>                                                             <p class="pro-leadTxt">                                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                     </p>                                                                       <p class="pro-leadTxt"><font color="#FF6347" size="3"><b>オシャレに肩コリ改善へ</b></font><br>現代病とも呼ばれる肩コリを、磁気のチカラで改善!紐の中芯に着磁した磁気が首・肩に浸透し血行を改善。固くなった筋肉のコリをほぐします。ワンタッチで着脱できるラグジュアリーな留め具で、日常使いはもちろん、ビジネスシーンにも着けやすいアイテムです。</p>                        <div class="fb-like" data-href="http://www.phiten-store.com/products/detail223-2601.html" data-send="false" data-layout="button_count" data-width="200" data-show-faces="false" style="margin-top:5px;"></div>                        <div id="nav-bnr-wrap" style="margin: 10px 0px 0px 0px; text-align: left; width: 100%">                                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </div>            <div>            <form name="form1" id="pro-price-box02" method="post" action="/products/detail223-2601.html">            <input type="hidden" name="mode" value="cart" />            <input type="hidden" name="product_id" value="2601" />            <input type="hidden" name="classcategory_id1" value="">            <input type="hidden" name="classcategory_id2" value="">            <table id="detailbox" width="282">              <tr>                              <td colspan="2">価格（税込）：                  <span class="fs14">                                                      2,700</span>円</td>                              </tr>                                                                                                                <tr>                <td colspan="2"><span class="font-col-orange"></span>              </tr>              <tr>                <td colspan="2">                  <div id="tableWrap">                  <table cellspacing="0" cellpadding="0" border="0" class="tableLayout-dotBg02">                                          <tr class="head">                                                <th>                                                <img src="/user_data/packages/default/img/common/_.gif" border="0" width="80" height="20"/>                                                                                          </th>                                                <th>                                                45cm                                                                                          </th>                                                <th>                                                50cm                                                                                          </th>                                              </tr>                                          <tr class="middle">                                                <th class="title">ブラック                                                                  </th>                                                <td nowrap><input type="radio" name="classcategory" value="18,630"  style="">                                                                                          </td>                                                <td nowrap><input type="radio" name="classcategory" value="1150,630"  style="">                                                                                          </td>                                              </tr>                                          <tr class="middle">                                                <th class="title">ピンク                                                                  </th>                                                <td nowrap><input type="radio" name="classcategory" value="18,772"  style="">                                                                                          </td>                                                <td nowrap>-<br/>                                                                                          </td>                                              </tr>                                          <tr class="middle">                                                <th class="title">ブルー                                                                  </th>                                                <td nowrap><input type="radio" name="classcategory" value="18,961"  style="">                                                                                          </td>                                                <td nowrap>-<br/>                                                                                          </td>                                              </tr>                                          <tr class="middle">                                                <th class="title">イエロー                                                                  </th>                                                <td nowrap><input type="radio" name="classcategory" value="18,916"  style="">                                                                                          </td>                                                <td nowrap>-<br/>                                                                                          </td>                                              </tr>                                      </table>                  </div>                </td>              </tr>                                                        <tr>                <td colspan="2"><span class="font-col-orange"></span></td>              </tr>              <tr>                <td class="number">個数：　<input name="quantity" type="text" value="1" style="" size="3" /></td>                                <td class="right">                                  </td>              </tr>                                        </table>            <ul>                                            <div align="left" class="font-col-orange"></div>                                  <li>                    <a href="javascript:;" onclick="document.form1.submit(); return false;" onmouseout="MM_swapImgRestore()" onmouseover="MM_swapImage('btn-cart-in','','/user_data/packages/default/img/products/pro_btn_cart_on.gif',1)">                    <img src="/user_data/packages/default/img/products/pro_btn_cart.gif" alt="カゴに入れる" width="188" height="46" border="0" id="btn-cart-in" />                    </a>                  </li>                                          </ul>            </form>            </div>                                  </div>          <table border="0" cellspacing="0" cellpadding="0" width="100%" id="pro-spec">            <tr>              <th class="pro-spec-top">内容量・サイズ</th>              <td class="pro-spec-top">45cm、50cm<br>ブラック、ピンク、ブルー、イエロー<br>※50cmはブラックのみの販売となります。</td>            </tr>            <tr>              <th>成分・素材</th>              <td>本体生地:ポリエステル<br>中芯:フェライト<br>留め具:ステンレス、ポリアセタール<br>技術:アクアチタンX10、ミクロチタンボール</td>            </tr>            <tr>[metatags_descriptionx]          </table>        </div>        <!--/product-spec -->        <!--product-freeSpace -->                <div style="text-align:center;">  <img src="/product_data/product_2601/img/01.jpg" width="670" height="530" alt="RAKUWAC`^lbNX" /><br />  <img src="/product_data/product_2601/img/02.jpg" width="670" height="601" alt="RAKUWAC`^lbNX" /><br />  <img src="/product_data/product_2601/img/03.jpg" width="670" height="456" alt="RAKUWAC`^lbNX" /><br />  <img src="/product_data/product_2601/img/04.jpg" width="670" height="194" alt="RAKUWAC`^lbNX" /><br />  <img src="/product_data/product_2601/img/05.jpg" width="670" height="697" alt="RAKUWAC`^lbNX" /><br /></div>                <!--/product-freeSpace -->        <div class="pro-detail-wrap clearfix">    <!-- ▼この商品を見ている人はこんな商品も見ています（同アイテムカテゴリ） -->        <div id="recommender_pc11"></div>    <!-- ▲この商品を見ている人はこんな商品も見ています（同アイテムカテゴリ） -->    <!-- ▼この商品を見ている人はこんな商品も見ています（別アイテムカテゴリ） -->        <div id="recommender_pc12"></div>    <!-- ▲この商品を見ている人はこんな商品も見ています（別アイテムカテゴリ） -->    <!-- ▼SETレコメンドエンジンPC用CSS -->           <link rel="stylesheet" href="/user_data/css/default_silveregg_pc.css" type="text/css" media="all"/>        <!-- ▲SETレコメンドエンジンPC用CSS -->        </div>      <div id="pro-voice">         <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>     <ul class="pro-voice-ti">            <li><a href="" onclick="win03('./review.php?product_id=2601','review','800','600'); return false;" ><img src="/user_data/packages/default/img/products/pro_voice_btn.gif" alt="新規コメントを書き込む" width="149" height="24" border="0"  /></a></li>         </ul>                   <div class="pro-voice-box">           <table width="100%" border="0" cellpadding="0" cellspacing="0">             <tr>               <td class="font-col-blue"><img src="/user_data/packages/default/img/products/pro_voice_icon_doc.gif" alt="お客様のコメント" width="20" height="15" />2017/03/11</td>               <td>投稿者：<span class="font-col-blue">K-S</span>                              </td>               <td class="pro-voice-level">おすすめレベル：<span class="font-col-blue">★★★★★</span></td>             </tr>           </table>           <p>普段は40cmのミラーボールやスリムタイプをつけてるのですが、スポーツ観戦など普段しない事をして首がとても凝ったので、これを重ね付けしたらすぐに楽になりました。やはり磁気には磁気の効果があるということを実感しました。</p>         </div>              <div class="pro-voice-box">           <table width="100%" border="0" cellpadding="0" cellspacing="0">             <tr>               <td class="font-col-blue"><img src="/user_data/packages/default/img/products/pro_voice_icon_doc.gif" alt="お客様のコメント" width="20" height="15" />2017/02/22</td>               <td>投稿者：<span class="font-col-blue">むっちゃん</span>               <img src="/user_data/packages/default/img/products/pro_ico_buyer.gif" alt="購入者" width="42" height="18" />               </td>               <td class="pro-voice-level">おすすめレベル：<span class="font-col-blue">★★★★★</span></td>             </tr>           </table>           <p>昔から肩こりと偏頭痛に悩まされてたのがこれを付けてから楽になりました。<br>今ではこれなしでは過ごせません。</p>         </div>              <div class="pro-voice-box">           <table width="100%" border="0" cellpadding="0" cellspacing="0">             <tr>               <td class="font-col-blue"><img src="/user_data/packages/default/img/products/pro_voice_icon_doc.gif" alt="お客様のコメント" width="20" height="15" />2016/08/17</td>               <td>投稿者：<span class="font-col-blue">シゲマツ</span>                              </td>               <td class="pro-voice-level">おすすめレベル：<span class="font-col-blue">★★★★★</span></td>             </tr>           </table>           <p>肩こり、首こりがかなり改善されました。<br>しかも私は強迫神経症を患っているのですが、<br>なぜか見る見る良くなっています。<br>磁気の力はすごいですね。</p>         </div>              <div class="pro-voice-box">           <table width="100%" border="0" cellpadding="0" cellspacing="0">             <tr>               <td class="font-col-blue"><img src="/user_data/packages/default/img/products/pro_voice_icon_doc.gif" alt="お客様のコメント" width="20" height="15" />2016/08/05</td>               <td>投稿者：<span class="font-col-blue">わらび</span>                              </td>               <td class="pro-voice-level">おすすめレベル：<span class="font-col-blue">★★★★★</span></td>             </tr>           </table>           <p>最高</p>         </div>                  </div>      </div>            <script type="text/javascript" src="//static.criteo.net/js/ld/ld.js" async="true"></script><script type="text/javascript">window.criteo_q= window.criteo_q || [];window.criteo_q.push({ event: "setAccount", account: 19853 },{ event: "setSiteType", type: "d" },{ event: "viewItem", item: "2601" });</script><!-- ▼SETレコメンドエンジン --><script>document.write("<script src='//phiten.silveregg.net/suite/page?m=phiten&p=pc_pddt&cookie=ADZihHLyLN1WFxMGj85eBGYiVezm!FlxbeP&t="+(new Date()).getTime()+"&r="+escape(document.referrer)+"'><\/script>");</script><!-- ▲SETレコメンドエンジン --><!--/main-contents -->                  </div>          <div id="navigation-area">                  <!-- ▼新規会員登録 ここから-->                                       <ul class="cmo-registration">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>                          <!-- ▲新規会員登録 ここまで-->              <!-- ▼メルマガ登録 ここから-->                      <ul class="cmo-registration">    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul>                  <!-- ▲メルマガ登録 ここまで-->              <!-- ▼ログイン ここから-->                      <div id="cmo-login">  <dl>    <dt class="cmo-login-user"><span class="fs12">ようこそ </span><span class="fs14">ゲスト様</span></dt>    <dd class="cmo-login-message"><span class="fs10">すでに登録がお済みの場合はこちらからログインしてください。</span></dd>    <dd>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dd>  </dl></div>                  <!-- ▲ログイン ここまで-->              <!-- ▼かごの中 ここから-->                      <div id="nav-bnr-wrap">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]    </div>                  <!-- ▲かごの中 ここまで-->              <!-- ▼カテゴリ ここから-->                      <script type="text/javascript" >// Set up all accordionsEvent.observe(window, 'load', loadAccordions, false);function loadAccordions() {  var bottomAccordion = new accordion('vertical_container');  var nestedVerticalAccordion = new accordion('vertical_container', {    classNames : {      toggle : 'vertical_accordion_toggle',      toggleActive : 'vertical_accordion_toggle_active',      content : 'vertical_accordion_content'    }  });  // Open first one  }var verticalAccordions = $$('.accordion_toggle');verticalAccordions.each(function(accordion) {  $(accordion.next(0)).setStyle({    height: '0px'  });});</script><div id="navigation-wrap"><div id="accordianNav-area">    <p><img src="/user_data/packages/default/img/common/cmo_cate_nav_ti.gif" alt="商品カテゴリ" width="200" height="30" /></p>    <dl id="vertical_container" >                                                            <dt class="vertical_container-top">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                                                                                                                                                                                                                                                <dt class="accordion_toggle"><a id="nav-neck">RAKUWAネック</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-ring">ブレス・アンクレット</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-body">ボディケア</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-supporter">サポーター</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-fashion">アパレル</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-jewelry">アクセサリー</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-life">寝具・日用品</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-ladies">レディース</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-food">健康食品</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-hair">スポーツで選ぶ</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                                                                        <dt class="accordion_toggle"><a id="nav-series">シリーズで選ぶ</a></dt>                                    <dd class="accordion_content" style="display:none;">              <ul>                <li class="nav-suvNav-top">[hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>        </dd>                  </dl></div></div>                  <!-- ▲カテゴリ ここまで-->              <!-- ▼お買い物を楽しもう ここから-->                            <dl id="nav-user-wrap">        <dt><img width="200" height="30" src="/user_data/packages/default/img/common/cmo_user_ti.gif"></dt>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>      </dl>      <dl id="nav-user-wrap">        <dt><img src="/user_data/packages/default/img/common/cmo_rule_nav_ti.gif" alt="インフォメーション" width="200" height="30" /></dt>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx][hrefx]</dd>      </dl>                  <!-- ▲お買い物を楽しもう ここまで-->              <!-- ▼利用ガイド ここから-->                            <!-- ▼利用ガイド ここから-->      <dl id="nav-guide-wrap">        <dt><img src="/user_data/packages/default/img/common/cmo_guide_ti.gif" alt="ご利用ガイド" width="200" height="30" /></dt>        <dd class="fs10">[hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx]</dd>        <dd class="fs10">[hrefx][hrefx][hrefx]</dd>        <dd>[hrefx][hrefx][hrefx]</dd>      </dl>      <!-- ▲利用ガイド ここまで-->                  <!-- ▲利用ガイド ここまで-->              <!-- ▼追加バナー2 ここから-->                      <div id="nav-bnr-wrap">  <ul>    <li class="bnr">[hrefx][hrefx][hrefx]</li>    <li class="bnr">[hrefx][hrefx][hrefx]</li>    <li class="bnr">[hrefx][hrefx][hrefx]</li>  </ul></div>                  <!-- ▲追加バナー2 ここまで-->              <!-- ▼サイト内バナー集2 ここから-->                      <!-- ▼バナー ここから-->      <div id="nav-bnr-wrap">        <ul>          <li class="bnr">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li class="bnr">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li class="bnr">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>      </div>      <!-- ▲バナー ここまで-->                  <!-- ▲サイト内バナー集2 ここまで-->              <!-- ▼カタログ請求 ここから-->                            <!-- ▼カタログ請求 ここから-->      <div id="nav-catalog-wrap"> <img src="/user_data/packages/default/img/common/cmo_catalog_ti.gif" alt="カタログ" width="200" height="30" border="0" />        <div class="catalog-img">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>      </div>      <!-- ▲カタログ請求 ここまで-->                  <!-- ▲カタログ請求 ここまで-->              <!-- ▼サイト内バナー集3 ここから-->                            <!-- ▼バナー ここから-->      <div id="nav-bnr-wrap">        <ul>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li class="bnr">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>      </div>      <!-- ▲バナー ここまで-->                  <!-- ▲サイト内バナー集3 ここまで-->              <!-- ▼グローバルサイン ここから-->                            <!-- ▼globalsign ここから-->      <div id="globalsign">        <div id="globalsign-seal"><span id="ss_gmo_img_wrapper_100-50_image_ja"><a href="https://jp.globalsign.com/" target="_blank" rel="nofollow"><img alt="SSL　GMOグローバルサインのサイトシール" border="0" id="ss_img" src="//seal.globalsign.com/SiteSeal/images/gs_noscript_100-50_ja.gif"></a></span><script type="text/javascript" src="//seal.globalsign.com/SiteSeal/gmogs_image_100-50_ja.js" defer="defer"></script>          <img src="/user_data/packages/default/img/common/cmo_globalsign_txt.gif" alt="" height="64" width="174"></div>      </div>      <!-- ▲globalsign ここまで-->                  <!-- ▲グローバルサイン ここまで-->              <!-- ▼お電話でのお問い合わせ ここから-->                      <div id="nav-mobile-wrap"><img src="/user_data/packages/default/img/common/cmo_telno.gif" alt="お電話でのお問い合わせ" /></div>                  <!-- ▲お電話でのお問い合わせ ここまで-->              <!-- ▼タブ ここから-->                      <!-- タブ --><link type="text/css" rel="stylesheet" href="/user_data/packages/default/css/tab.css" /><div id="tabs">  <a class="footcare1707" href="/products/index-57.html">フットケア</a>  <a class="teiki17ss" href="/cp/aboutTeiki.php">定期宅配</a>  <a class="user_voice2" href="/cp/user_review.php">お客様の声</a></div><!-- /タブ -->                  <!-- ▲タブ ここまで-->            </div>            </div><!--foot --><div id="footer-area-wrap" class="clearfix">  <p class="link-pageTop">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>  <div id="footerNav">    <ul>      <li class="fs10">[hrefx][hrefx][hrefx][hrefx]</li>      <li class="fs10">[hrefx][hrefx][hrefx][hrefx]</li>      <li class="fs10">[hrefx][hrefx][hrefx][hrefx]</li>      <li class="fs10">[hrefx][hrefx][hrefx][hrefx]</li>      <li class="fs10">[hrefx][hrefx][hrefx][hrefx]</li>    </ul>    <div class="copy_area">      <p class="footerNav-copyrights">COPYRIGHT (C) PHITEN CO., LTD. ALL RIGHTS RESERVED.</p>      <p class="fs10h">許可無く当ページの内容を複製・使用することを禁じます。</p>    </div>    <div class="bnr_area">      [hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <div class=" clearfix"></div>  </div></div><!--/foot --></div><!-- Google Analytics tag start --><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-10158530-1']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script><!-- Google Analytics tag end --><!-- Tag EBiS version1.00 start --><script type= "text/javascript">     // EBIS用変数    var pid='detail223-2601';    var m1id='';    var a1id='';    var o1id='';    var o2id='';    var o3id='';    var o4id='';    var o5id='';            // MicroAd用変数    var blade_group_id='';    </script><script type="text/javascript"><!--strServerName = location.protocol + '//ot.ebis.ne.jp';argument = '4UEubPxe'; otid = '1';document.write("<scr" + "ipt type=\"text\/javascript\" src=\"" + strServerName + "\/one_tag.php?argument=" + argument + "&otid=" + otid + "\"><\/scr" + "ipt>");// --></script><!-- Tag EBiS end --></body><!-- ▲BODY部 エンド --></html>