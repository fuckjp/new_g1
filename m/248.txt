<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html lang="jp"><head><meta http-equiv="Content-Type" content="text/html; charset=Shift_JIS"><meta http-equiv="Content-Style-Type" content="text/css"><meta http-equiv="Content-Type" charset="UTF-8" /><meta http-equiv="Content-Script-Type" content="text/javascript"><meta name="GENERATOR" content="Windows"><meta name="Keywords" content="[metatags_keywords]"><meta name="Description" content="[metatags_description]"><title>[metatags_title]</title><link rel="stylesheet" href="other/css/hpbparts.css" type="text/css" id="hpbparts"><link rel="stylesheet" href="other/css/container_1Aa_2c_left.css" type="text/css" id="hpbcontainer"><link rel="stylesheet" href="other/css/main_1Aa_2c.css" type="text/css" id="hpbmain"><link rel="stylesheet" href="other/css/user.css" type="text/css" id="hpbuser"><link rel="stylesheet" type="text/css" href="other/style/table.css" id="HPB_TABLE_CSS_ID_"><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-29326151-1']);  _gaq.push(['_setDomainName', 'takai-foods.co.jp']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script><script type="text/javascript" language="JavaScript"><!--HPB_SCRIPT_ROV_50////  //// HpbImgPreload://function HpbImgPreload(){  var appVer=parseInt(navigator.appVersion);  var isNC=false,isN6=false,isIE=false;  if (document.all && appVer >= 4) isIE=true; else    if (document.getElementById && appVer > 4) isN6=true; else      if (document.layers && appVer >= 4) isNC=true;  if (isNC||isN6||isIE)  {    if (document.images)    {      var imgName = HpbImgPreload.arguments[0];      var cnt;      swImg[imgName] = new Array;      for (cnt = 1; cnt < HpbImgPreload.arguments.length; cnt++)      {        swImg[imgName][HpbImgPreload.arguments[cnt]] = new Image();        swImg[imgName][HpbImgPreload.arguments[cnt]].src = HpbImgPreload.arguments[cnt];      }    }  }}// HpbImgFind://function HpbImgFind(doc, imgName){  for (var i=0; i < doc.layers.length; i++)  {    var img = doc.layers[i].document.images[imgName];    if (!img) img = HpbImgFind(doc.layers[i], imgName);    if (img) return img;  }  return null;}// HpbImgSwap://function HpbImgSwap(imgName, imgSrc){  var appVer=parseInt(navigator.appVersion);  var isNC=false,isN6=false,isIE=false;  if (document.all && appVer >= 4) isIE=true; else    if (document.getElementById && appVer > 4) isN6=true; else      if (document.layers && appVer >= 4) isNC=true;  if (isNC||isN6||isIE)  {    if (document.images)    {      var img = document.images[imgName];      if (!img) img = HpbImgFind(document, imgName);      if (img) img.src = imgSrc;    }  }}var swImg; swImg=new Array;//--></script><script type="text/javascript" language="JavaScript"><!--HPB_SCRIPT_PLD_50HpbImgPreload('HPB_ROLLOVER1', 'other/img/navi_temomi-pan_01.jpg', 'other/img/navi_temomi-pan_02.jpg');HpbImgPreload('HPB_ROLLOVER3', 'other/img/navi_konayoshi_01.jpg', 'other/img/navi_konayoshi_02.jpg');HpbImgPreload('HPB_ROLLOVER4', 'other/img/navi_omni7_01.jpg', 'other/img/navi_omni7_02.jpg');HpbImgPreload('HPB_ROLLOVER2', 'other/img/navi_coming-soon_09_01.jpg', 'other/img/navi_coming-soon_09_02.jpg');//--></script> <script type="text/javascript">  var _paq = _paq || [];  _paq.push(["setDocumentTitle", document.domain + "/" + document.title]);  _paq.push(["setCookieDomain", "*.localhost"]);  _paq.push(["setDomains", ["*.localhost"]]);  _paq.push(['trackPageView']);  _paq.push(['enableLinkTracking']);  (function() {    var u="//takai-foods.co.jp/piwik/";    _paq.push(['setTrackerUrl', u+'piwik.php']);    _paq.push(['setSiteId', 1]);    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);  })();</script><!-- Piwik --><script type="text/javascript">  var _paq = _paq || [];  _paq.push(['trackPageView']);  _paq.push(['enableLinkTracking']);  (function() {    var u="//takai-foods.co.jp/piwik/";    _paq.push(['setTrackerUrl', u+'piwik.php']);    _paq.push(['setSiteId', 2]);    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];    g.type='text/javascript'; g.async=true; g.defer=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);  })();</script><!-- End Piwik Code --></head><body id="hpb-template-01-01a-02" class="hpb-layoutset-01"><noscript><p><img src="http://takai-foods.co.jp/piwik/piwik.php?idsite=2" style="border:0;" alt=""></p></noscript><div id="hpb-skip">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div><!-- container --><div id="hpb-container">  <!-- header -->  <div id="hpb-header">    <div id="hpb-headerMain">      <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>    </div>    <div id="hpb-headerLogo">[hrefx][hrefx]</div>    <div id="hpb-headerExtra1" style="text-align : right;" align="right">      <p class="tel"><span>TEL. </span>0258-66-2487</p>      <p class="address"> &nbsp;[hrefx][hrefx]</p>    </div>  </div>  <!-- header end --><!-- inner -->  <div id="hpb-inner">    <!-- wrapper -->    <div id="hpb-wrapper">      <!-- page title -->      <div id="hpb-title" class="hpb-top-image"><object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,47,0" width="910" height="220" standby="top-banar">        <param name="MOVIE" value="flashcontents.swf">        <param name="PLAY" value="true">        <param name="LOOP" value="true">        <param name="QUALITY" value="high">        <param name="WMODE" value="transparent">        <param name="FLASHVARS" value="hpbflcconfig=flashcontents.xml">        <embed src="flashcontents.swf" width="910" height="220" wmode="transparent" type="application/x-shockwave-flash" flashvars="hpbflcconfig=flashcontents.xml"></object></div>      <!-- page title end --><!-- main -->      <div id="hpb-main">        <!-- toppage -->        <div id="toppage">          <hr>          <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>          <p><b><font color="#000000" size="+1" style="font-size : 110%;">弊社製品賞味期限を2017年7月1日製造分より、現行の賞味期限「6か月」から「1年間」に変更致します。<br clear="none">          詳細は、[hrefx][hrefx][hrefx][hrefx]</font></b></p>          <div id="toppage-news">            <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>            <p><iframe frameborder="0" width="640" height="320" scrolling="AUTO" name="news_item" src="other/news.html"></iframe></p>          </div>          <div id="toppage-topics" style="text-align : center;" align="center">            <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]            </ul>            <table border="0" cellspacing="0" cellpadding="2" id="HPB_TABLE_4_C_130313135310" class="hpb-cnt-tb3" width="655">              <tbody>                <tr>                  <td class="hpb-cnt-tb-cell4" align="center" style="line-height : 1.2;text-align : center;border-color : rgb(51, 51, 51);">&nbsp;[hrefx][hrefx]</td>                  <td class="hpb-cnt-tb-cell4" align="center" style="line-height : 1.2;text-align : center;border-color : rgb(51, 51, 51);">&nbsp;[hrefx][hrefx]</td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4" align="center" style="line-height : 1.2;text-align : center;border-color : rgb(51, 51, 51);"><font color="#000000" face="ＭＳ Ｐゴシック" size="+2" style="font-size : 150%;">&nbsp;「</font><font color="#ff0000" face="ＭＳ Ｐゴシック" size="+2" style="font-size : 150%;">手もみ米粉ぱん</font><font color="#000000" face="ＭＳ Ｐゴシック" size="+2" style="font-size : 150%;">」をお求めの方は、</font><font size="+1"><br>                  </font><font color="#000000" size="+2" style="font-size : 150%;"><b>↓クリックして下さい↓</b></font>&nbsp;</td>                  <td class="hpb-cnt-tb-cell4" align="center" style="line-height : 1.2;text-align : center;border-color : rgb(51, 51, 51);">&nbsp;<font face="ＭＳ Ｐゴシック" color="#000000" size="+2" style="font-size : 150%;">「米粉のパン　ミックス粉」他<br>                  弊社製品をお求めの方は、<br>                  <b>↓クリックして下さい↓</b></font></td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4" style="line-height : 1.2;border-color : rgb(51, 51, 51);	text-align : center;" valign="middle" align="center">&nbsp;[hrefx][hrefx]</td>                  <td class="hpb-cnt-tb-cell4" style="line-height : 1.2;border-color : rgb(51, 51, 51);	text-align : center;" valign="middle" align="center">&nbsp;[hrefx][hrefx]</td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4" width="126" style="line-height : 1.2;border-color : rgb(51, 51, 51);	text-align : center;" valign="middle" align="center"></td>                  <td class="hpb-cnt-tb-cell4" width="138" style="line-height : 1.2;border-color : rgb(51, 51, 51);	text-align : center;" valign="middle" align="center">&nbsp;</td>                </tr>              </tbody>            </table>            <p>[hrefx][hrefx]</p>            <p><img src="other/img/top_banner_ryouhinrenka.jpg" width="690" height="66" border="0"></p>            <table border="0" cellspacing="0" cellpadding="2" id="HPB_TABLE_4_C_130312145113" class="hpb-cnt-tb3">              <tbody>                <tr>                  <td class="hpb-cnt-tb-cell4">&nbsp;<a href="quality/quality.html">			<img style="float: left" src="other/img/01_top_ryou.jpg" width="260" height="163" border="0" alt="良"></a></td>                  <td class="hpb-cnt-tb-cell4">			<b><font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			「良質」で「安全」なものを継続して作り続ける事を<br></font>                  	<font face="ＭＳ Ｐゴシック" size="+2" color="#ff0000" style="font-size : 150%;line-height : 1.5;">			第一</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			に、早くから品質管理部門を設立し品質管理を行っております。</font></b></td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4">&nbsp;<a href="product/product.html">			<img style="float: left" src="other/img/01_top_hin.jpg" width="260" height="163" border="0" alt="品"></a></td>                  <td class="hpb-cnt-tb-cell4">			<b><font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			「提案」型の営業を目指し、商品の特性の研究とレシピ開発を積極的に行なっております。<br>                  	お店の商品作りのサポートができるよう、開発部門と営業が連携しご提案させていただきます。</font></b>		</td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4">&nbsp;<a href="pride/pride.html">			<img style="float: left" src="other/img/01_top_ren.jpg" width="260" height="163" border="0" alt="廉"></a></td>                  <td class="hpb-cnt-tb-cell4">			<b><font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			53年間</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#ff0000" style="font-size : 150%;line-height : 1.5;">			米粉一筋</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			に培った「ノウハウ」と技術力、<br>生産設備による総合的な「</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#0000ff" style="font-size : 150%;line-height : 1.5;">			プロダクトパワー</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			」で<br>より安くご提供いたします。</font></b>		</td>                </tr>                <tr>                  <td class="hpb-cnt-tb-cell4">&nbsp;<a href="cooperation/cooperation.html">			<img style="float: left" src="other/img/01_top_ka.jpg" width="260" height="163" border="0" alt="価"></a></td>                  <td class="hpb-cnt-tb-cell4">			<b><font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			「米粉を</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#ff0000" style="font-size : 150%;line-height : 1.5;">			熱く</font>			<font face="ＭＳ Ｐゴシック" size="+2" color="#000000" style="font-size : 150%;line-height : 1.5;">			語れる」営業マンがいます。<br>		        一人ひとりが米粉の特性の研究、<br>			レシピの開発に加わっており、<br>			お客様のご要望に深くお応えできます。</font></b>		</td>                </tr>              </tbody>            </table>          </div>          <div id="toppage-news2"></div>          <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>          <div id="pagetop">            <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>          </div>        </div>        <!-- toppage end -->      </div>      <!-- main end -->    </div>    <!-- wrapper end --><!-- navi -->    <div id="hpb-nav">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>      <ul>        <li id="nav-toppage">[hrefx][hrefx][hrefx][hrefx][hrefx]        <li id="nav-concept">[hrefx][hrefx]        <li id="nav-service">[hrefx][hrefx][hrefx][hrefx][hrefx]        <li id="nav-news">[hrefx][hrefx]        <li id="nav-company">[hrefx][hrefx]        <li id="nav-recruit">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        <li id="nav-contact">[hrefx][hrefx]        <li>[hrefx][hrefx]        <li id="nav-contact">[hrefx][hrefx][hrefx][hrefx]      </ul>    </div>    <!-- navi end --><!-- aside -->    <div id="hpb-aside">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>      <div id="banner">        <ul>          <li>[hrefx][hrefx]          <li>[hrefx][hrefx][hrefx][hrefx]          <li>[hrefx][hrefx][hrefx]          <li>[hrefx][hrefx][hrefx][hrefx]          <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]          <!--<li>[hrefx][hrefx]-->        </ul>        [hrefx][hrefx]</div>      <div id="companyinfo">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>        <p>〒954-0111<br>        新潟県見附市今町８－７－１</p>        <p>TEL 0258-66-2487<br>        FAX 0258-66-7685</p>      </div>      <p><img src="/counter?charset=odmeter,border=0" alt="counter"></p>    </div>    <!-- aside end -->  </div>  <!-- inner end --><!-- footer -->  <div id="hpb-footer">    <div id="hpb-footerMain">      <p>copyright&copy;2011&nbsp;takai-foods.co.ltd&nbsp;all&nbsp;rights&nbsp;reserved.</p>    </div>    <div id="hpb-footerExtra1">      <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>      <ul>        <li>[hrefx][hrefx]        <li>[hrefx][hrefx]      </ul>    </div>  </div>  <!-- footer end --></div><!-- container end --></body></html>