﻿<!DOCTYPE html PUBLIC "" ""><!--[if lte IE 7]><html xmlns="http://www.w3.org/1999/xhtml" class="experience-degraded no-js" xml:lang="[语言]" lang="ja"><![endif]--><!--[if gt IE 7]><!--><html xmlns="http://www.w3.org/1999/xhtml" class="no-js" xml:lang="ja" lang="ja"><!--<![endif]--><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" />    <!--<meta name="viewport" content="width=device-width, initial-scale=1" />-->    <title>[metatags_title]</title>    <style type="text/css">        .no-js .nova-no-js-hidden {            display: none !important;        }        .js .nova-hidden-until-ready {            display: none !important;        }        .js-init .nova-no-js-only {            display: none !important;        }    </style>        <script type="text/javascript" data-async="false">        document.documentElement.className = document.documentElement.className.replace(/(?:^|\s)no-js(?!\S)/g, '');        document.documentElement.className = document.documentElement.className + ' js js-init';        jsOptions = {};        coreResources = {};    </script>                <!-- START: META -->    <meta name="description" content="[metatags_description]" /><meta name="keywords" content="[metatags_keywords]" /><meta name="DC.date" content="2015-04-23T14:46:28.19Z" /><meta name="application-name" content="蓄電池・二次電池に関する最新技術・製品が一堂に！ - ［国際］二次電池展（バッテリー ジャパン）" /><meta name="msapplication-starturl" content="/" /><meta name="msapplication-tooltip" content="蓄電池・二次電池に関する最新技術・製品が一堂に！ - ［国際］二次電池展（バッテリー ジャパン）を開始" />    <!-- END: META -->    <script type="text/javascript" src="/Scripts/Libraries/html5shiv/html5shiv.js?v=636378063947992262"></script>        <!-- START: Style Sheets --><!-- Base Css Start-->    <link rel="stylesheet" type="text/css" media="all" href="/Css/Common/Reset.css?v=636378063896230293" /><link rel="stylesheet" type="text/css" media="all" href="/Css/Common/modules/module-bootstrap_templated.css?v=636154192172762876-0-0" /><!-- Base Css End--><!-- Core Css Start-->            <meta name="css-links" content="core" />    <link rel="stylesheet" type="text/css" media="screen" href="/Css/Common/Core_v2_templated.css?v=636154192172762876-0-0" /><link rel="stylesheet" type="text/css" media="print" href="/Css/Common/Print_templated.css?v=636154192172762876-0-0" /><!-- Core Css End--><!-- Additional Custom Css Start-->            <meta name="css-links" content="additional" />    <link rel="stylesheet" type="text/css" media="all" href="/Css/Templates/homepage/homepage_templated.css?v=636154192172762876-0-0" /><link rel="stylesheet" type="text/css" media="all" href="/Css/Common/font-awesome-4.7.0/css/font-awesome.min.css?v=636378063896270287" /><link rel="stylesheet" type="text/css" media="all" href="/Css/Fragments/Autocomplete/autocomplete_templated.css?v=636154192172762876-0-0" /><link rel="stylesheet" type="text/css" media="all" href="/css/Common/jquery-ui/jquery-ui.css?v=636378063900720476" /><!-- Additional Custom Css End--><!-- Css Hacks Start-->            <meta name="css-links" content="hacks" />    <!--[if IE 6]><link rel="stylesheet" type="text/css" media="screen" href="/Css/Common/Hacks/IE6.css" /><![endif]--><!--[if IE 7]><link rel="stylesheet" type="text/css" media="screen" href="/Css/Common/Hacks/IE7.css" /><![endif]--><!--[if IE 6]><link rel="stylesheet" type="text/css" media="all" href="/Css/Templates/homepage/Hacks/IE6.css" /><![endif]--><!-- Css Hacks End--><!-- Custom Css Start-->            <meta name="css-links" content="custom" />    <link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_BatteryExpo_v2/css/2016/font01.css?v=635965633931245389" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/base03.css?v=636241232938451229" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/layout02.css?v=636298978363846807" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_BatteryExpo_v2/css/2016/bj.css?v=636234972581116362" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_BatteryExpo_v2/css/2016/font_en.css?v=635965633843586895" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/base_en.css?v=636241232739586786" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/layout03_en.css?v=636215995802934271" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_BatteryExpo_v2/css/2016/bj_en.css?v=636241290632609930" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_BatteryExpo_v2/css/2016/bj_zh-cn.css?v=636329334672152543" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/slick.css?v=635645296304194794" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/jquery.bxslider01.css?v=635866890699704535" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/jquery.fancybox01.css?v=635645295794351044" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/RXJP_PVExpo_v2/css/2016/ticker-style.css?v=636003464544844352" /><link rel="stylesheet" type="text/css" media="all" href="/RXJP/common/css/jpcustom2.css?v=636150498861595647" /><!-- Custom Css End--><!-- END: Style Sheets --><meta id="jslinks" name="js-links" content="/Js/NovaJs.x.js?s=L3NjcmlwdHMvbGlicmFyaWVzL2pxdWVyeS0xLjcuMi5taW4uanM=&amp;s=L3NjcmlwdHMvbGlicmFyaWVzL2pxdWVyeS11aS8xLjguMy9qcXVlcnktdWkubWluLmpz&amp;s=L1NjcmlwdHMvTGlicmFyaWVzL2pxdWVyeS5ob3ZlckludGVudC5qcw==&amp;s=L1NjcmlwdHMvTGlicmFyaWVzL3N3Zm9iamVjdC5qcw==&amp;s=L1NjcmlwdHMvQ29yZV92Mi5qcw==&amp;s=L1NjcmlwdHMvQ29udHJvbHMvRm9vdGVyLmpz&amp;s=L1NjcmlwdHMvTGlicmFyaWVzL2RvdWJsZXRhcHRvZ28vZG91YmxldGFwdG9nby5taW4uanM=&amp;s=L1NjcmlwdHMvQ29udHJvbHMvQXV0b2NvbXBsZXRlLmpz&amp;s=L1NjcmlwdHMvQ29udHJvbHMvU2VhcmNoLmpz&amp;s=L3NjcmlwdHMvQ29udHJvbHMvUGFnZVRvb2xzL1BhZ2VUb29scy1BZGRUaGlzLmpz&amp;s=L1NjcmlwdHMvQ29udHJvbHMvQW5hbHl0aWNzL0FuYWx5dGljcy5qcw==&amp;s=L1JYSlAvY29tbW9uL2pzL2dhX2NsaWNrLmpz&amp;s=L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvanF1ZXJ5LmJ4c2xpZGVyLmpz&amp;s=L1JYSlAvUlhKUF9IQkV4cG8vbmV3L2pzL2pxdWVyeS5lYXNpbmcuMS4zLmpz&amp;s=L1JYSlAvUlhKUF9ETVMvanMvanF1ZXJ5LnVpLnRvdG9wLmpz&amp;s=L1JYSlAvY29tbW9uL2pzL3Ntb290aFNjcm9sbC5qcw==&amp;s=L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvc2xpY2subWluLmpz&amp;s=L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvc2VsZWN0aXZpenItbWluLmpz&amp;s=L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvbWVnYS5qcw==&amp;s=L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvanF1ZXJ5LnRpY2tlci5qcw==&amp;v=636378063948202284" /><script type="text/javascript" src="/Js/NovaJs.x.js?s=L3NjcmlwdHMvbGlicmFyaWVzL2pxdWVyeS0xLjcuMi5taW4uanM=,L3NjcmlwdHMvbGlicmFyaWVzL2pxdWVyeS11aS8xLjguMy9qcXVlcnktdWkubWluLmpz,L1NjcmlwdHMvTGlicmFyaWVzL2pxdWVyeS5ob3ZlckludGVudC5qcw==,L1NjcmlwdHMvTGlicmFyaWVzL3N3Zm9iamVjdC5qcw==,L1NjcmlwdHMvQ29yZV92Mi5qcw==,L1NjcmlwdHMvQ29udHJvbHMvRm9vdGVyLmpz,L1NjcmlwdHMvTGlicmFyaWVzL2RvdWJsZXRhcHRvZ28vZG91YmxldGFwdG9nby5taW4uanM=,L1NjcmlwdHMvQ29udHJvbHMvQXV0b2NvbXBsZXRlLmpz,L1NjcmlwdHMvQ29udHJvbHMvU2VhcmNoLmpz,L3NjcmlwdHMvQ29udHJvbHMvUGFnZVRvb2xzL1BhZ2VUb29scy1BZGRUaGlzLmpz,L1NjcmlwdHMvQ29udHJvbHMvQW5hbHl0aWNzL0FuYWx5dGljcy5qcw==,L1JYSlAvY29tbW9uL2pzL2dhX2NsaWNrLmpz,L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvanF1ZXJ5LmJ4c2xpZGVyLmpz,L1JYSlAvUlhKUF9IQkV4cG8vbmV3L2pzL2pxdWVyeS5lYXNpbmcuMS4zLmpz,L1JYSlAvUlhKUF9ETVMvanMvanF1ZXJ5LnVpLnRvdG9wLmpz,L1JYSlAvY29tbW9uL2pzL3Ntb290aFNjcm9sbC5qcw==,L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvc2xpY2subWluLmpz,L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvc2VsZWN0aXZpenItbWluLmpz,L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvbWVnYS5qcw==,L1JYSlAvUlhKUF9QVkV4cG9fdjIvanMvanF1ZXJ5LnRpY2tlci5qcw==&amp;v=636378063948202284"></script><script type="text/javascript"> var googletag = googletag || {}; googletag.cmd = googletag.cmd || []; var gptAdSlots = []; (function() {   var gads = document.createElement('script');   gads.async = true;   gads.type = 'text/javascript';   var useSSL = 'https:' == document.location.protocol;   gads.src = (useSSL ? 'https:' : 'http:') +    '//www.googletagservices.com/tag/js/gpt.js';   var node = document.getElementsByTagName('script')[0];   node.parentNode.insertBefore(gads, node); })(); function findAdSlot(id) {   return gptAdSlots.filter(function(e){ return e.getSlotElementId() === 'ad-slot-'+id; })[0];  }</script><script type="text/javascript">Nova.Controls.Analytics = {"eventEdition":{"id":0,"name":"None"},"isAuthenticated":"False"};</script><script language='javascript' type='text/javascript'>var novaDebugMode = false</script><script type="text/javascript">googletag.cmd.push(function() { googletag.enableServices(); });</script><script type="text/javascript">    jQuery(document).ready(function() {        jQuery('.js').removeClass('js');                    // do stuff when DOM is ready        var searchControl = new Nova.Controls.Search('autoComplete_ctl00_searchControlHeader_ctlAutoComplete', 'ja', '{0}（{1}）', {});window.Page_favouritesToggle = new Nova.Controls.FavouritesToggle();window.Page_shortlistToggle = new Nova.Controls.ShortlistToggle();window.Page_bookToggle = new Nova.Controls.BookToggle();     var nav = new Nova.Controls.TopNavigation(jsOptions.Nova_Controls_TopNavigation);coreResources={loginUrl:'/?RetUrl=x$fs$x'};autoComplete_ctl00_searchControlHeader_ctlAutoComplete = new Nova.Controls.Autocomplete('#ctl00_searchControlHeader_ctlAutoComplete_txtSearch', 'ja', {showId:false,styleMatchAnywhereInString:true,matchStartOfWords:true,fastSearchOptions:{sortOption:2,searchQueryType:1,stopDimensions:"",searchExtent:1,dimensionKeys:""}});    });</script>        <!-- START: Rss -->        <!-- END: Rss -->    <!-- Verification Tags -->        <!-- End Verification Tags -->        <!-- Start Google Analytics tracking code --><script type="text/javascript">     (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){     (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)     })(window,document,'script','//www.google-analytics.com/analytics.js','ga');     ga('create', 'UA-21289413-1', 'auto', {'allowLinker': true});     ga('create', 'UA-20992391-1', 'auto', {'name': 'global'});     ga('create', 'UA-20994403-1', 'auto', {'name': 'terr'});ga('require', 'linker');ga('linker:autoLink', ['contact.reedexpo.co.jp','m.contact.reedexpo.co.jp']);     ga('send', 'pageview');     ga('terr.send', 'pageview');     ga('global.send', 'pageview');</script><!-- End Google Analytics tracking code --><!-- リマーケティング タグの Google コード --><script type="text/javascript">/* <![CDATA[ */var google_conversion_id = 862681080;var google_custom_params = window.google_tag_params;var google_remarketing_only = true;/* ]]> */</script><script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js"></script></head><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/862681080/?guid=ON&amp;script=0" /></div></noscript><body id="MasterBodyTag" class="homePage sidebars-none ja">        <form name="aspnetForm" method="post" action="/Home/" id="aspnetForm"><div><input type="hidden" name="PAGE_NovaObjectRef" id="PAGE_NovaObjectRef" value="41-150362" /><input type="hidden" name="PAGELANG" id="PAGELANG" value="ja" /><input type="hidden" name="BUILDNUMBER" id="BUILDNUMBER" value="636154192172762876" /><input type="hidden" name="PAGEID" id="PAGEID" value="150362" /><input type="hidden" name="ADCONTEXT" id="ADCONTEXT" value="KEYWORDS=&amp;KEYVALUES=Title%3d&amp;ZONE=" /><input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="t0bNf1zIkAaMwbvRJkM7XrYYLrKv9ncxbSjjXzO3YYa8d43436s8h1nWyeXK1Q9KcAp3XuhAUNUobaaAoK2B7WEA74u9cEmMv7A0Zrh/NezWHlfC" /></div><script type="text/javascript">//<![CDATA[                        var _nls = _nls || [];                        _nls.push({ scriptPath: "/scripts/uab.js", conditional: null });                    //]]></script>			<div>				<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="36DCE7AF" />				<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" />				<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" />				<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />			</div>            <!--googleoff: all-->    <div id="skip" class="noindex">        <p>            [hrefx][hrefx][hrefx][hrefx]        </p>    </div>    <!--googleon: all-->    <div class="top-bar-wrapper"><div class="top-bar clearfix centered-page"> <ul class="toolbar toolbar-horizontal toolbar-dock-left">        <li class="toolbar-item toolbar-item-languages bodyText">        <div class="languages-container">    <label class="visuallyhidden" for="ddlLanguages" title="">Language</label><select name="ctl00$uab$languageSelectorControl$ddlLanguages" id="ddlLanguages" class="languages no-flags">	<option selected="selected" value="ja" data-url="/ja/Home/">日本語</option>	<option value="en" data-url="/en/Home/">English</option>	<option value="zh-CN" data-url="/zh-cn/Home/">中文(简体)</option></select><input type="submit" name="ctl00$uab$languageSelectorControl$changeLanguageButton" value="OK" id="ctl00_uab_languageSelectorControl_changeLanguageButton" /></div>    </li>    </ul></div></div>    <div id="wrapper" class="centered-page">                                    <header id="header" class=" topNavDepth1">                <div id="brand" class="noindex">    <div class="unmanagedContent"><div>	<div class="clearfix hd_wrapper">    <div class="hd_top clearfix">        <div id="ene"><img alt="スマートエネルギーWeek 内" src="/RXJP/RXJP_BatteryExpo_v2/images/2018/common/img_smartene.png?v=636238896642805266" /></div>        <ul class="clearfix">            <li>                [hrefx][hrefx][hrefx][hrefx]            </li>            <li>                [hrefx][hrefx][hrefx][hrefx]            </li>        </ul>    </div>    <div class="hd_bottom clearfix">        <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>        <img alt="2018年2月28日(水)～3月2日(金) 10:00～18：00（最終日のみ17：00まで）／会場：東京ビッグサイト／主催：リードエグジビションジャパン（株）" src="/RXJP/RXJP_BatteryExpo_v2/images/2018/common/img_date_place.png?v=636238896468398279" />    </div>    [hrefx][hrefx][hrefx][hrefx]</div><!-- メガメニュー --><div id="mega">    <div class="menu menu_about clearfix"><!-- about -->        <div class="floatL clearfix">            <a href="/About/Outline/">                <div class="box left">                    <img src="/RXJP/RXJP_BatteryExpo_v2/images/2016/mega/img_mega_about01.jpg?v=635642322448986315" alt="［国際］二次電池展とは" />                    <p class="font14">［国際］二次電池展 とは<span class="detail"></span></p>                    <p class="font13">開催概要、出展対象製品、来場対象者などのご案内。</p>                </div>            </a>            <a href="/About/Organiser/">                <div class="box">                    <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_about02.jpg?v=635586963452105311" alt="リードが目指す展示会" />                    <p class="font14">リードが目指す展示会<span class="detail"></span></p>                    <p class="font13">主催 リード ジャパンが目指す展示会についてご紹介。</p>                </div>            </a>        </div>        <div class="floatR clearfix">            <a href="/Previous-Show/">                <div class="box clearfix top">                    <div class="box_txt floatL">                       <p class="font14">前回展示会の様子<span class="detail"></span></p>                       <p class="font13">写真と映像でご覧ください。</p>                    </div>                    <div class="floatR">                        <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_about03.jpg?v=635586963464778462" alt="前回展示会の様子" />                    </div>                </div>            </a>            <div class="box clearfix">                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <!--<li>[hrefx][hrefx][hrefx][hrefx]</li>-->                </ul>            </div>        </div>    </div>    <div class="menu menu_exhibit clearfix"><!-- exhibit -->        <div class="floatL clearfix">            <a href="/To-Exhibit/For-Exhibitors/">                <div class="box left">                    <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_exhibit04.jpg?v=635591655575461588" alt="出展をご検討中の方" />                    <p class="font14">出展をご検討中の方<span class="detail"></span></p>                    <p class="font13">本展の特長や出展のメリット、会場の埋まり状況などをご紹介。</p>                </div>            </a>            <a href="/To-Exhibit/Tips/">                <div class="box">                    <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_exhibit02.jpg?v=635591723148956136" alt="出展成果を上げるために" />                    <p class="font14">出展成果を上げるために<span class="detail"></span></p>                    <p class="font13">展示会で売上げを拡大するための方法や集客支援サービスをご紹介。</p>                </div>            </a>        </div>        <div class="floatR clearfix">            <a href="/To-Exhibit/Booth/">                <div class="box clearfix top">                    <div class="box_txt floatL">                       <p class="font14">出展スペース空き状況<span class="detail"></span></p>                       <p class="font13">最新の出展可能なブース位置をご覧いただけます。</p>                    </div>                    <div class="floatR">                        <img src="/RXJP/RXJP_PVExpo_v2/images/2018/mega/img_mega_exhibit_layout01.gif?v=636259156184088180" alt="出展スペース空き状況" />                    </div>                </div>            </a>            <div class="box clearfix">                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <!--<li class="bnr_link bnr_left">                        <a href="/To-Exhibit/Sodan/">                            <img style="margin-top:-1px;" src="/RXJP/RXJP_PVExpo_v2/images/2018/mega/bnr_mega_kaisaisetsumeikai.gif" alt="開催説明会（参加費無料）" />                        </a>                    </li>-->                    <!--<li class="bnr_link bnr_left">                        <a href="/To-Exhibit/Pre-Semi/">                            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/bnr_mega_special.gif" alt="出展検討のための特別説明会(参加無料)" />                        </a>                    </li>-->                </ul>                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li class="bnr_link bnr_right" style="margin-top:36px;">                        <a href="/ex/?fm=mega" target="_blank">                            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/bnr_mega_ex.gif?v=635591653403041015" alt="出展資料請求(無料)" />                        </a>                    </li>                </ul>            </div>        </div>    </div>    <div class="menu menu_visit_rai clearfix"><!-- visit --><div class="floatL clearfix"><div class="box"><div class="contents"><p class="gray_area bold txtCenter">出展社について<span class="font12">（前回情報）</span></p> <ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div><div class="contents pl15"><p class="gray_area bold">会場への行き方・周辺情報</p><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div>  <div class="contents pl15"><p class="gray_area bold">展示会について</p><ul><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><!--<li>[hrefx][hrefx][hrefx][hrefx]</li>--><li>[hrefx][hrefx][hrefx][hrefx]</li></ul></div></div><div class="box_bnr"><ul><li class="floatL">[hrefx][hrefx][hrefx][hrefx]</li><li class="floatL pl15 pr15">[hrefx][hrefx][hrefx][hrefx]</li><li class="floatR">[hrefx][hrefx][hrefx][hrefx]</li></ul></div></div><div class="floatR clearfix"><div class="box mb15"><a href="/To-Visit/Interview/"><img src="/RXJP/RXJP_PVExpo_v2/images/2017/mega/bnr_mega_interview.gif?v=636198845791374733" alt="出展社インタビュー" /><p>前回（2017年）の出展企業の方々にお話しを伺いました。</p></a></div><div class="box"><span><img src="/RXJP/RXJP_PVExpo_v2/images/2018/mega/bnr_mega_tape-cut_cover2018.gif?v=636233411993491611" alt="2018年1月末公開" /></span><img src="/RXJP/RXJP_PVExpo_v2/images/2017/mega/bnr_mega_tape-cut.gif?v=636201298367698646" alt="開会式(テープカット)" /><p style="letter-spacing: -0.3px;">会期初日の9：30より開催。スマートエネルギー業界のトップが集結します。</p></div></div></div>    <div class="menu menu_seminar clearfix"><!-- seminar -->        <div class="floatL clearfix">            <a href="/Conference/Program-Intro/">            <!--<a href="/seminar/?fm=mega" target="_blank">-->                <div class="box clearfix">                    <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_seminar01.jpg?v=635591654453259724" alt="専門技術セミナープログラム" />                    <div class="box_txt floatR">                        <p class="font14">専門技術セミナープログラム<span class="detail"></span></p>                        <p class="font13">「リチウムイオン電池」「材料」「自動車」「市場動向」など、蓄電池業界の最新動向を取り上げた専門技術セミナーを同時開催。</p>                    </div>                </div>            </a>        </div>        <div class="floatR clearfix">            <div class="box clearfix" style="height: 85px;">                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <!--<li class="bnr_link bnr_right">                        <a href="http://www.wsew.jp/seminar/apply_re/?fm=mega" target="_blank">                            <img src="/RXJP/RXJP_PVExpo_v2/images/2017/mega/bnr_mega_conference.gif" alt="専門技術セミナーお申込み" />                        </a>                    </li>-->                </ul>            </div>        </div>    </div>    <div class="menu menu_press clearfix"><!-- press -->        <div class="floatL clearfix">            <a href="/For-Press/Outline/">                <div class="box clearfix">                    <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/img_mega_press01.jpg?v=635591654688731488" alt="展示会概要" />                    <div class="box_txt floatR">                        <p class="font14">展示会概要<span class="detail"></span></p>                        <p class="font13">開催概要やプレス向け情報をご案内。</p>                    </div>                </div>            </a>        </div>        <div class="floatR clearfix">            <div class="box clearfix">                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li class="bnr_link bnr_right">                        <a href="http://www.wsew.jp/shuzai/?fm=mega" target="_blank">                            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/mega/bnr_mega_syuzai.gif?v=635591654892496766" alt="取材事前登録(無料)" />                        </a>                    </li>                </ul>            </div>        </div>    </div></div></div></div>       <a class="producedBy" href="http://www.reedexpo.com/">	<img alt="リード・エグジビションズ" title="リード・エグジビションズ" src="/RXJP/common/space.gif?v=634141797247693319" /></a></div><div id="search" class="noindex">    <div id="ctl00_searchControlHeader_SearchFormPanel" onkeypress="javascript:return WebForm_FireDefaultButton(event, &#39;ctl00_searchControlHeader_searchButton&#39;)">	        <input type="text" id="ctl00_searchControlHeader_ctlAutoComplete_txtSearch" name="ctl00$searchControlHeader$ctlAutoComplete$txtSearch" class="value-replace text" /><input type="hidden" id="ctl00_searchControlHeader_ctlAutoComplete_hidObjectId" name="ctl00$searchControlHeader$ctlAutoComplete$hidObjectId" class="autocomplete-selection-data" value="" />        <button type="submit" id="ctl00_searchControlHeader_searchButton" name="ctl00$searchControlHeader$searchButton" class="button mainButton " value="検索"><span>検索</span></button>    </div></div><div id="topNavigation" class="no-js selectedHasNoChildren">                <ul class="level1">                                        <li id="navTreeItem-150369" class="  hasChildren first">                    <a title="本展示会について" href="/About/Outline/">本展示会について</a>                    </li>                    <li id="navTreeItem-150383" class="  hasChildren ">                    <a title="出展のご案内" href="/To-Exhibit/For-Exhibitors/">出展のご案内</a>                    </li>                    <li id="navTreeItem-150413" class="  hasChildren ">                    <a title="来場のご案内" href="/To-Visit/For-Visitors/">来場のご案内</a>                    </li>                    <li id="navTreeItem-150441" class="  hasChildren ">                    <a title="セミナーのご案内" href="/Conference/Program-Intro/">セミナーのご案内</a>                    </li>                    <li id="navTreeItem-150448" class=" last hasChildren ">                    <a title="プレス向け情報" href="/For-Press/Outline/">プレス向け情報</a>                    </li>                    </ul>                                   </div>            </header>                      <div class="contentLayoutBox clearfix">                                                    <div id="content" class="centered-page">                        <div id="contentHook1"></div>                                                         <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>                                            <!-- start: proposition --><div id="proposition">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        </div><!-- end: proposition -->    <!-- start child page list --><input type="hidden" name="ctl00$centreContentPlaceHolder$ctlChildPageList$hidDebugInformation" id="ctl00_centreContentPlaceHolder_ctlChildPageList_hidDebugInformation" value="Culture: ja-JP, UICulture: ja, Url: http://www.batteryjapan.jp/,Child count: 3" /><ul id="ctlChildPageList" class="homePageList">    <!-- Child page id:  150363 -->    <li class="childPageList layoutBlocks top_news">        <div class="unmanagedContent"><div>	<img class="floatL" src="/RXJP/RXJP_BatteryExpo_v2/images/2016/top/img_ttl_what.png?v=635641933429303721" alt="What’s New" /><ul id="js-news" class="floatR"></ul><script type="text/javascript">jQuery(function ($) {    $("#js-news").html("");});function xmlLoad(){    jQuery.ajax({        url:'/RXJP/RXJP_BatteryExpo_v2/documents/2016/news.xml',        type:'get',        dataType:'xml',        timeout:10000,        success:parse_xml,        error:function() {            xmlLoad();        }    });}function parse_xml(xml,status){    if(status!='success')return;    jQuery(xml).find('item').each(disp);    jQuery('#js-news').ticker({            displayType: 'fade',            pauseOnItems: 6000,            fadeInSpeed: 1000,            fadeOutSpeed: 1000,            controls: true,            titleText: ''        });}var n = 0 ;var e = 0;function disp(){ // TOPページNEWS読み込み    if(n < 8){        n++        var $day = jQuery(this).find('day').text();        var $url = jQuery(this).find('url').text();        var $newClass = jQuery(this).find('new').text();        var $pdfClass = jQuery(this).find('pdf').text();        var $blankClass = jQuery(this).find('blank').text();        var $target = jQuery(this).find('target').text();        var $text01 = jQuery(this).find('text01').text();        var $text02 = jQuery(this).find('text02').text();        $target ='target="'+$target+'"';        if($text01.length){            jQuery('<li>'+$day+' '+'[hrefx][hrefx][hrefx][hrefx]'+'</li>').appendTo('#js-news');        }else if($text02.length){            jQuery('<li>'+$day+' '+'<span'+' class="'+$newClass+' '+$pdfClass+' '+$blankClass+'">'+$text02+'</span>').appendTo('#js-news');        }        }//    }//jQuery(function ($) {    xmlLoad();});</script></div></div><div class="layoutBlockContainer layoutBlockContainer">                <div class="clear"></div></div>    </li>    <!-- Child page id:  185352 -->    <li class="childPageList layoutBlocks top_box pickup">        <div class="unmanagedContent"><div>	<script type="text/javascript">jQuery(function() {jQuery('.cal_box').slick({  speed: 1000,  autoplaySpeed: 8000,  infinite: true,  slidesToShow: 3,  slidesToScroll: 3,  dots: false,  autoplay: true,  arrows: true,  variableWidth: true});});</script><div class="pick_top">    <p class="helvetica">PICK UP CONTENTS <span class="new0 font13 normal">8月7日更新</span></p></div><div class="cal_box">    <div class="pick-box">    <a href="/To-Exhibit/Booth/">    <img src="/RXJP/RXJP_PVExpo_v2/images/2018/top/img_pickup_booth.gif?v=636259155897092493" alt="出展スペース空き状況" />    <div class="pick-box-txt clearfix">    <p class="font20">出展スペース空き状況</p>    <p class="left">最新の出展可能なブース位置をご覧いただけます。（8月7日現在）</p>    <p class="detail floatR">詳細を見る</p>    </div>    </a>    </div>        <div class="pick-box">    <a href="/Previous-Show/">    <img src="/RXJP/RXJP_PVExpo_v2/images/2018/top/img_pickup_previous-show0306.jpg?v=636243748395005553" alt="前回 結果報告" />    <div class="pick-box-txt clearfix">    <p class="font20">前回 結果報告</p>    <p class="left">会場の写真、来場者数、併催イベントなどがご覧いただけます。</p>    <p class="detail floatR">詳細を見る</p>    </div>    </a>    </div>        <div class="pick-box last">    <a href="http://www.battery-kansai.jp/?fm=pickup" target="_blank">    <img src="/RXJP/RXJP_BatteryExpo_v2/images/2018/top/img_pickup_bjk.gif?v=636257505129877405" alt="関西展のご案内" />    <div class="pick-box-txt clearfix">    <p class="font20">関西展のご案内</p>    <p class="left">出展社募集中！<br />東京展とは異なる来場者に売り込めます。</p>    <p class="detail floatR">詳細を見る</p>    </div>    </a>    </div></div></div></div><div class="layoutBlockContainer layoutBlockContainer">                <div class="clear"></div></div>    </li>    <!-- Child page id:  150366 -->    <li class="childPageList layoutBlocks exhibit_visit">        <div class="unmanagedContent"><div>	<div class="ex_visit_box clearfix">    <div class="box floatL clearfix">        <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_ttl_exhibit.gif?v=635586965132137567" alt="出展のご案内" />        <div class="box-txt floatL">            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_exhibit01.gif?v=635586964195218997" alt="出展をご検討中の方" />            <p>本展の特長や出展のメリット、会場の埋まり状況などをご紹介します。</p>            [hrefx][hrefx][hrefx][hrefx]        </div>        <div class="box-txt floatR">            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_exhibit02.gif?v=635586964221624740" alt="出展成果を上げるために" />            <p>展示会で売上げを拡大するための方法や集客支援サービスをご紹介します。</p>            [hrefx][hrefx][hrefx][hrefx]        </div>    </div>    <div class="box floatR clearfix">        <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_ttl_visit.gif?v=635586965148387879" alt="来場のご案内" />        <div class="box-txt floatL">            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_visit01.gif?v=635586965276202833" alt="来場をご検討中の方" />            <p>本展にご来場いただくことでできることや来場のメリットをご案内します。</p>            [hrefx][hrefx][hrefx][hrefx]        </div>        <div class="box-txt floatR">            <img src="/RXJP/RXJP_PVExpo_v2/images/2016/top/img_visit02.gif?v=635586965284778462" alt="効果的な展示会活用方法" />            <p>本展で具体的な提案を受けられるよう、事前に各出展社との商談予約をおすすめします。</p>            [hrefx][hrefx][hrefx][hrefx]        </div>    </div></div></div></div><div class="layoutBlockContainer layoutBlockContainer">                <div class="clear"></div></div>    </li></ul><!-- end child page list -->                    <div class="unmanagedContent"><div>	<a id="toTop" href="#wrapper"></a><script type="text/javascript">jQuery(function(){	jQuery(window).bind("scroll", function() {	if (jQuery(this).scrollTop() > 150) {		jQuery("#toTop").fadeIn();	} else {		jQuery("#toTop").fadeOut();	}	scrollHeight = jQuery(document).height();	scrollPosition = jQuery(window).height() + jQuery(window).scrollTop();	footHeight = jQuery("#footer").height();	footHeight = footHeight + 135;	if ( scrollHeight - scrollPosition  <= footHeight ) {		jQuery("#toTop").css({"position":"absolute","bottom": "0px"});	} else {		jQuery("#toTop").css({"position":"fixed","bottom": "0px"});		}	});	// jQuery(window).bind("scroll", function() {//メディアパートナーがある場合	// if (jQuery(this).scrollTop() > 150) {	// 	jQuery("#toTop").fadeIn();	// } else {	// 	jQuery("#toTop").fadeOut();	// }	// scrollHeight = jQuery(document).height();	// scrollPosition = jQuery(window).height() + jQuery(window).scrollTop();	// footHeight = jQuery("#footer").height();	// footHeight = footHeight + 292;	// if ( scrollHeight - scrollPosition  <= footHeight ) {	// 	jQuery("#toTop").css({"position":"absolute","bottom": "157px"});	// } else {	// 	jQuery("#toTop").css({"position":"fixed","bottom": "0px"});	// 	}	// });});</script></div></div>                        <div id="contentHook2"></div>        </div>                                           </div>                                    <div id="footer" class="noindex ">    <div id="ctl00_pageFooter_extendedContent" class="extendedContainer noNav horizontal">				                        <div class="unmanagedContent"><div>	<ul class="clearfix mb40">    <li class="floatL">[hrefx][hrefx][hrefx][hrefx]</li>    <li class="floatR">[hrefx][hrefx][hrefx][hrefx]</li></ul><div class="box clearfix">    <ul>        <li class="map_ttl">本展示会について</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <!--<li class="map_list"><a class="ft_blank" href="https://www.r-expo.jp/wsew2017/system/exhibitor/jp/" target="_blank">出展社 専用サイト</a></li>-->        <!--<li class="map_list"><a class="ft_blank" href="https://contact.reedexpo.co.jp/vip/VIP_FC/?lg=jp&tp=login&ec=FX" target="_blank">VIP 特典 お申込みサイト</a></li>-->        <li class="map_ttl second">前回結果報告</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>    </ul>    <ul>        <li class="map_ttl">出展のご案内</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <!--<li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>-->        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list"><a class="ft_blank" href="/ex/?fm=footer" target="_blank">出展資料請求（無料）</a></li>    </ul>    <ul>        <li class="map_ttl">来場のご案内</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li><!--class="map_list"><a class="ft_blank" href="http://www.wsew.jp/exhibitor/?fm=footer" target="_blank">出展社一覧</a></li>-->        <!--<li class="map_list"><a class="ft_blank" href="http://www.wsew.jp/directory/?fm=footer" target="_blank">出展社・製品 検索サイト</a></li>-->        </li><li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <!--<li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>-->        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list"><a class="ft_blank" href="/inv/w/?fm=footer" target="_blank">招待券お申込み（無料）</a></li>        <li class="map_list"><a class="ft_blank" href="http://www.wsew.jp/vip/?fm=footer" target="_blank">VIP招待券お申込み（無料）</a></li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>    </ul>    <ul style="width:215px;">        <li class="map_ttl">セミナーのご案内</li>        <!--<li class="map_list"><a class="ft_blank" href="/seminar/?fm=footer" target="_blank">専門技術セミナープログラム</a></li>-->        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list"><a class="ft_blank" href="/seminar/committee/?fm=footer" target="_blank">セミナー企画委員</a></li>        <li class="map_list"><a class="ft_blank" href="http://www.wsew.jp/PR/?fm=footer" target="_blank">出展社による製品・技術セミナー</a></li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <!--<li class="map_list"><a class="ft_blank" href="http://www.wsew.jp/seminar/apply_re/?fm=footer" target="_blank">専門技術セミナーお申込み</a></li>-->    </ul>    <ul style="width:190px;">        <li class="map_ttl">プレス向け情報</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">            [hrefx][hrefx][hrefx][hrefx]<!-- <br />            [hrefx][hrefx][hrefx][hrefx]<br />            [hrefx][hrefx][hrefx][hrefx]<br />            [hrefx][hrefx][hrefx][hrefx]<br />            <a href="/For-Press/News-Press-Releases/Show-Daily/" class="non"> - 展示会デイリーニュース -->        </li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list"><a class="ft_blank" href="http://www.wsew.jp/shuzai/?fm=footer" target="_blank">取材事前登録（無料）</a></li>    </ul></div><div class="box box02 clearfix">    <div class="mb20">[hrefx][hrefx][hrefx][hrefx]</div>    <ul>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>    </ul>    <ul>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>    </ul>    <ul>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="map_list">[hrefx][hrefx][hrefx][hrefx]</li>    </ul></div><div style="text-align:center;">    <a target="_blank" href="/RXJP/RXJP_ReedExpo_V2/html/index.html"><img src="http://pagead2.googlesyndication.com/simgad/13855675261481430038" width="214" height="74" alt="" border="0" /></a>    <a target="_blank" href="http://www.reedexpo.co.jp/"><img src="http://pagead2.googlesyndication.com/simgad/11829394958680655862" width="212" height="74" alt="" border="0" /></a>    <a target="_blank" href="http://www.visitjapan.jp/ja/"><img src="http://pagead2.googlesyndication.com/simgad/13564457623509879338" width="104" height="74" alt="" border="0" /></a></div></div></div>     			</div>    <span class="copyright">Copyright &copy; 2017 by Reed Exhibitions Japan Ltd. All rights reserved.[hrefx][hrefx][hrefx][hrefx]</span>                    <ul class="headerFooterLinkList">                    <li class="first">[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li class="last">[hrefx][hrefx][hrefx][hrefx]</li>                    </ul>            </div>    </div>    <div id="UserMessageContainer">                    </div>    <input type="hidden" id="CSRFAnonymous" name="CSRFAnonymous" value="true" /><script type="text/javascript">//<![CDATA[var theForm = document.forms['aspnetForm'];			if (!theForm) {    theForm = document.aspnetForm;}			function __doPostBack(eventTarget, eventArgument) {    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {        theForm.__EVENTTARGET.value = eventTarget;        theForm.__EVENTARGUMENT.value = eventArgument;        theForm.submit();    }}			//]]></script>			<script src="/WebResource.axd?d=EAmwKebs0zZgkAX1wZvllFRwpZP8Y9BE4R1-PkgXcEYp_gCPQlGLI7cn-8T-bEMKoloEE6G-5HwTkZCJ2rPG1XnlID81&amp;t=636284118552661246" type="text/javascript"></script>			</form>                   <script type="text/javascript">        var _nls = new function () {            this.q = _nls || [];            this.requested = [];            this.push = function (script) {                this.q.push(script);            };            this.lazyLoad = function () {                var that = this;                for (var index = 0; index < this.q.length; index++) {                    this.q[index].scriptPath = NovaJs.page.addVToUrl(this.q[index].scriptPath);                    if(NovaJs.array.indexOf(this.q[index].scriptPath, this.requested) == -1) {                        this.requested.push(that.q[index].scriptPath);                        jQuery.ajax({                            crossDomain: true,                            dataType: "script",                            cache: true,                            url: this.q[index].scriptPath,                            success: this.q[index].afterLoad,                            complete: function () {                                ////console.log('completed');                            }                        });                    } else {                        ////console.log('already requested');                    }                }            };        };        jQuery(window).bind('load',                                    function () {                                        _nls.lazyLoad();                                    });    </script>    <script type='text/javascript'>NovaGTMData=[{'userID':'', 'PITypeID':'', 'PIType':'', 'isAuthenticated':'False', 'isCompanyAdmin':'False', 'isShowCoordinator':'False', 'EventEditionID':'', 'EventEditionName':'', 'SiteName':'BatteryExpo'}];</script><!-- Google Tag Manager --><noscript><iframe src='https://www.googletagmanager.com/ns.html?id=GTM-KRPNFS' height='0' width='0' style='display:none;visibility:hidden'></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-KRPNFS');</script><!-- End Google Tag Manager - Site --></body></html>