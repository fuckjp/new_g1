<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="jp" xml:lang="ja"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta http-equiv="Content-Script-Type" content="text/javascript" /><meta http-equiv="Content-Style-Type" content="text/css" /><title>[metatags_title]</title><meta name="description" content="[metatags_description]" /><meta name="keywords" content="[metatags_keywords]" /><meta property="og:image" content="http://www.889100.com/images1/logo.png" /><link rel="shortcut icon" href="/images1/favicon1.ico" /><link rel="stylesheet" type="text/css" href="/common1/css/common.css" media="all" /><script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script><script type="text/javascript" src="/common1/js/script.js"></script><!--[if IE]><script type="text/javascript" src="/common1/js/PIE.js"></script><script type="text/javascript" src="/common1/js/PIE_script.js"></script><![endif]--><!--[if lte IE 6]><script type="text/javascript" src="/common1/js/DD_belatedPNG.js"></script><script type="text/javascript" src="/common1/js/DD_script.js"></script><![endif]--><link rel="stylesheet" type="text/css" href="/common1/css/page.css" media="all" /><script type="text/javascript" src="/common1/js/jquery.flatheights.js"></script><script type="text/javascript">$(function(){    var sets = [], temp = [];    $('#ABBX ol.gdncbx li .bx p').each(function(i) {        temp.push(this);        if (i % 2 == 1) {            sets.push(temp);            temp = [];        }    });    if (temp.length) sets.push(temp);    $.each(sets, function() {        $(this).flatHeights();    });});</script></head><body><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-59MDQN"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-59MDQN');</script><!-- End Google Tag Manager --><!-- ▼HEADER start --><div id="Header">    <div class="topbox">        <div class="tpbx clearfix">		<h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>            <p class="lnk">[hrefx][hrefx]</p>        </div>        <div class="topin new clearfix">             <p class="logo">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>             <p class="cp">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>                     <p class="btn">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>                     <p class="tel"><img src="/images1/top/top_nw_head_tel.png" width="208" height="57" alt="0120-114-154" /></p>        </div>    </div>        <div class="gnavbox">        <ul class="clearfix">                    <li>[hrefx][hrefx]</li>                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                            <li class="pldbx">                <p class="pld"><img src="/images1/top/gnav_canp_off.png" width="115" height="49" alt="キャンペーン" /></p>                <div class="pldin">                    <p class="m_b10">[hrefx][hrefx][hrefx][hrefx]</p>                    <p class="m_b10">[hrefx][hrefx][hrefx]</p>                    <p class="m_b10">[hrefx][hrefx]</p>                    <p>[hrefx][hrefx]</p>                </div>            </li>                            <li><img src="/images1/top/gnav_about_on.png" width="144" height="49" alt="学研教室の理念" /></li>                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                            <li>[hrefx][hrefx]</li>                            <li class="pldbx">                <p class="pld"><img src="/images1/top/gnav_price.png" width="145" height="49" alt="月謝一覧・入会までの流れ" /></p>                <div class="pldin">                    <p class="m_b10">[hrefx][hrefx]</p>                    <p>[hrefx][hrefx]</p>                </div>            </li>                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                </ul>    </div>        </div><!-- ▲／HEADER end --><!-- #Contents --><div id="Contents">    <div id="Clmbx" class="clearfix">        <div class="com_topicpath">            <ul class="clearfix">                <li>[hrefx][hrefx]</li>                <li>&gt;&nbsp;&nbsp;学研教室の理念</li>            </ul>        </div>        <!--***** ABBX start /*****-->        <div id="ABBX">            <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <div class="com_txtbx m_b70">                <p>子どもたちが学ぶ喜びを感じ、自信を持つことができるように、個々の持てる力に合わせて学習を進め、確かな学力の育成を図ります。自主的な学びで力をつけ、自信を持つことが、子どもたちの生きる力につながります。</p>            </div>            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <ol class="gdncbx clearfix m_b50">                <li>                    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                    <div class="bx">                        <div><img src="/images1/about_1_4gd_gra1.png" width="150" height="171" alt="基礎学力の定着を図ります。" /></div>                        <p>すべての教科の基礎となる、国語と算数（数学）の学力を、どちらも重要なものと考えています。くり返し学習と毎日の家庭学習により、しっかりとした定着を図ります。さらに教科書の内容をより深めた応用的な学習もできます。</p>                    </div>                </li>                <li>                    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                    <div class="bx">                        <div><img src="/images1/about_1_4gd_gra2.png" width="150" height="171" alt="無学年方式で一人一人を大切にします。" /></div>                        <p>学校の進度や学年にとらわれない、対面・対話型学習指導で、子どもたちの学力や性格をつかんで指導します。自分のペースで学習することで、本当の学力が身につきます。</p>                    </div>                </li>                <li class="m_b0">                    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                    <div class="bx">                        <div><img src="/images1/about_1_4gd_gra3.png" width="150" height="171" alt="自学自習の習慣付けを行います。" /></div>                        <p>一人一人の学習に応じた最適な教材を与え、適切なアドバイスをすることで、自分から進んで学習する態度や能力が育ちます。</p>                    </div>                </li>                <li >                    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                    <div class="bx">                        <div><img src="/images1/about_1_4gd_gra4.png" width="170" height="171" alt="徳育面を重視しています。" /></div>                        <p>人と人との触れ合いの中で学び、考えることで、バランスのとれた子どもを育てます。知育だけでなく、教室でのあいさつや、靴・かばんの整とんなど、しつけ面の指導も重視しています。</p>                    </div>                </li>            </ol>            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <div class="cou_int clearfix cou_int_lng">                <dl class="pot">                    <dt><img src="/images1/about_ttl_sys1.png" alt="個々の学力や能力・適性に応じた個別学習" width="580" height="48" /></dt>                    <dd class="com_txtbx m_b20">個々の子どもの持てる力に合わせて学力の伸張を図ります。能力や適正をしっかり把握し、学習の出発点を決定し、その子に合った学習計画を立てます。学習の達成度に応じて進級やフィードバックを行います。いつどこからでも学習することが可能で、子どもが安心して臨めます。</dd>                </dl>                <dl class="pot">                    <dt><img src="/images1/about_ttl_sys2.png" alt="算数（数学）・国語の同時並行学習" width="500" height="48" /></dt>                    <dd class="com_txtbx m_b20">算数・国語は全ての教科の基礎となっています。この2教科を切り離さないで、同時に並行的に学習します。                    <ul class="mrlt">                        <li>算数（数学）は<strong class="com_bl_clr">筋道を立てて</strong>考える力を養う</li>                        <li>国語の<strong class="com_bl_clr">読む力・書く力</strong>は、全ての学力の土台</li>                    </ul>                    </dd>                </dl>                <dl class="pot">                    <dt><img src="/images1/about_ttl_sys3.png" alt="週2回の教室学習と毎日の宿題学習" width="520" height="48" /></dt>                    <dd class="com_txtbx m_b20">指導者は1週に2回、教室で子どもたちを指導し、子どもたちの様子をも観察し、学習管理をしていきます。<br />また、教室学習日以外の日は家庭学習教材で自宅学習をします。<br />週2回、1回60分前後の在室ですが、毎週継続して通うこと、教室日以外は自宅で学習することで、学習の習慣化と学力の定着を図ります</dd>                </dl>                <dl class="pot">                    <dt><img src="/images1/about_ttl_sys4.png" alt="短時間集中学習" width="316" height="48" /></dt>                    <dd class="com_txtbx">子どもたちの、1回の学習時間は30～50分程度に抑えます。<br />子どもたちが集中して学習できる時間は、通常「学年&#215;10分&#177;10分」といわれるからです。<br />この限界をこえて勉強させても、学習の効果は上がりません。</dd>                </dl>                <dl class="pot">                    <dt><img src="/images1/about_ttl_sys5.png" alt="くりかえし学習" width="268" height="48" /></dt>                    <dd class="com_txtbx">一回の学習だけでは、必ず忘れてしまいます。学習したことを定着させるためには、忘れかけたものを再学習する、ということをくり返す必要があります。<br />くり返し学習で、学力の定着を図ります。</dd>                </dl>            </div>        </div>        <!--*****/ ABBX end *****-->    </div>        <div class="com_socbx clearfix">        <ul class="socbx">            <li class="tw">[hrefx][hrefx]                <script type="text/javascript" src="https://platform.twitter.com/widgets.js"></script>            </li>            <li class="gl"><g:plusone size="medium" href="http://www.889100.com/"></g:plusone><script type="text/javascript">  window.___gcfg = {lang: 'ja'};  (function() {    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;    po.src = 'https://apis.google.com/js/plusone.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);  })();</script>            </li>            <li class="fes">                <iframe src="https://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.889100.com&amp;layout=button_count&amp;show_faces=false&amp;width=130&amp;action=like&amp;colorscheme=light&amp;height=21&font=arial" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:130px; height:21px;" allowTransparency="true"></iframe>            </li>        </ul>        <p class="com_pgtpbtn">[hrefx][hrefx]</p>    </div>    </div><!-- /#Contents --><div id="Footer">    <div class="footbx">        <ul class="lnk clearfix">            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <ul class="lnk clearfix">            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <ul class="lnk clearfix">            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>        </ul>        <div class="copybx clearfix">            <address>&copy; Gakken Educational Co.,Ltd.　&copy;学研教室</address>            <div class="lg">[hrefx][hrefx]</div>        </div>    </div></div><!-- Google リタゲ --><!-- Remarketing tags may not be associated with personally identifiable information or placed on pages related to sensitive categories. For instructions on adding this tag and more information on the above requirements, read the setup guide: google.com/ads/remarketingsetup --><script type="text/javascript">/* <![CDATA[ */var google_conversion_id = 956230596;var google_custom_params = window.google_tag_params;var google_remarketing_only = true;/* ]]> */</script><script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js"></script><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/956230596/?value=0&amp;guid=ON&amp;script=0"/></div></noscript><!-- Google リタゲ --><!--analytics--><script type="text/javascript">  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');  ga('create', 'UA-41189321-1', '889100.com');  ga('send', 'pageview');</script><!--analytics--><!--YDN--><script type="text/javascript" language="javascript">/* <![CDATA[ */var yahoo_retargeting_id = 'XHSXPJN3ID';var yahoo_retargeting_label = '';/* ]]> */</script><script type="text/javascript" language="javascript" src="//b92.yahoo.co.jp/js/s_retargeting.js"></script><!--YDN--><!--DSP(ロジカド)--><script type="text/javascript">var smnAdvertiserId = '00000608';</script><script type="text/javascript" src="//cd-ladsp-com.s3.amazonaws.com/script/pixel.js"></script><!--DSP(ロジカド)--><!--BLADE--><script type="text/javascript" class="microad_blade_track"><!--var microad_blade_jp = microad_blade_jp || { 'params' : new Array(), 'complete_map' : new Object() };(function() {var param = {'co_account_id' : '4224', 'group_id' : '', 'country_id' : '1', 'ver' : '2.1.0'};microad_blade_jp.params.push(param);var src = (location.protocol == 'https:')? 'https://d-track.send.microad.jp/js/blade_track_jp.js' : 'http://d-cache.microad.jp/js/blade_track_jp.js';var bs = document.createElement('script');bs.type = 'text/javascript'; bs.async = true;bs.charset = 'utf-8'; bs.src = src;var s = document.getElementsByTagName('script')[0];s.parentNode.insertBefore(bs, s);})();--></script><!--BLADE--><!--ハートフル--><script type="text/javascript">/* <![CDATA[ */var google_conversion_id = 971772799;var google_custom_params = window.google_tag_params;var google_remarketing_only = true;/* ]]> */</script><script type="text/javascript"  src="//www.googleadservices.com/pagead/conversion.js"></script><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt=""  src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/971772799/?value=0&amp;guid=ON&amp;script=0"/></div></noscript><!--ハートフル--><script type="text/javascript" src="/js/fn.js"></script><script type="text/javascript" src="/js/search.js"></script><!--YDN--><script type="text/javascript" language="javascript">/* <![CDATA[ */var yahoo_retargeting_id = '6BFOQLMYP5';var yahoo_retargeting_label = '';/* ]]> */</script><script type="text/javascript" language="javascript" src="//b92.yahoo.co.jp/js/s_retargeting.js"></script><!--YDN--><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-PGFNS3"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-PGFNS3');</script><!-- End Google Tag Manager --><!-- Yahoo Code for your Target List --><script type="text/javascript">/* <![CDATA[ */var yahoo_ss_retargeting_id = 1000167818;var yahoo_sstag_custom_params = window.yahoo_sstag_params;var yahoo_ss_retargeting = true;/* ]]> */</script><script type="text/javascript" src="//s.yimg.jp/images/listing/tool/cv/conversion.js"></script><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt="" src="//b97.yahoo.co.jp/pagead/conversion/1000167818/?guid=ON&script=0&disvt=false"/></div></noscript><!-- Google trueview --><script type="text/javascript">/* <![CDATA[ */var google_conversion_id = 878207328;var google_custom_params = window.google_tag_params;var google_remarketing_only = true;/* ]]> */</script><script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js"></script><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/878207328/?value=0&amp;guid=ON&amp;script=0"/></div></noscript><!-- Google trueview --><!-- 20170123YDN --><!-- Yahoo Code for your Target List --><script type="text/javascript" language="javascript">/* <![CDATA[ */var yahoo_retargeting_id = 'YTZBNF2A0P';var yahoo_retargeting_label = '';var yahoo_retargeting_page_type = '';var yahoo_retargeting_items = [{item_id: '', category_id: '', price: '', quantity: ''}];/* ]]> */</script><script type="text/javascript" language="javascript" src="//b92.yahoo.co.jp/js/s_retargeting.js"></script><!-- 20170123YDN --><!-- 20170123YSS --><!-- Yahoo Code for your Conversion Page --><script type="text/javascript">    /* <![CDATA[ */    var yahoo_conversion_id = 1000356679;    var yahoo_conversion_label = "2GPwCNuBrm0Qv7rImwM";    var yahoo_conversion_value = 0;    /* ]]> */</script><script type="text/javascript" src="//s.yimg.jp/images/listing/tool/cv/conversion.js"></script><noscript>    <div style="display:inline;">        <img height="1" width="1" style="border-style:none;" alt="" src="//b91.yahoo.co.jp/pagead/conversion/1000356679/?value=0&label=2GPwCNuBrm0Qv7rImwM&guid=ON&script=0&disvt=true"/>    </div></noscript><!-- 20170123YSS --></body></html>