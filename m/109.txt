<!DOCTYPE html><html lang='jp'>  <head>    <meta http-equiv="Content-Type" charset="UTF-8" />    <meta content='IE=edge' http-equiv='X-UA-Compatible'>    <meta content='width=device-width, initial-scale=1.0' name='viewport'>                            <title>[metatags_title]</title>                      <meta name='description' content='[metatags_description]'>    <meta name='keywords' content='[metatags_keywords]'>    <!-- OpenGraph -->    <meta property='og:title' content='三重大学 |「オープンキャンパス」のご案内'>    <meta property='og:type' content='website' >    <meta property='og:description' content='[metatags_description]'>    <meta property='og:url' content='http://www.mie-u.ac.jp/exam/ocmenu/'>    <meta content='三重大学' property='og:site_name'>    <!-- favicon -->    <link rel='apple-touch-icon-precomposed' type='image/png' href='/apple-touch-icon-144x144-precomposed.png' sizes='144x144' />    <link rel='apple-touch-icon-precomposed' type='image/png' href='/apple-touch-icon-114x114-precomposed.png' sizes='114x114' />    <link rel='apple-touch-icon-precomposed' type='image/png' href='/apple-touch-icon-72x72-precomposed.png' sizes='72x72' />    <link rel='apple-touch-icon-precomposed' type='image/png' href='/apple-touch-icon-precomposed.png' />    <link rel='shortcut icon' type='image/vnd.microsoft.icon' href='/favicon.ico' />    <!-- CSS -->    <link href='/assets/stylesheets/application.css' media='all' rel='stylesheet' type='text/css' />    <link href='/assets/stylesheets/layout.css' media='all' rel='stylesheet' type='text/css' />    <link href='/assets/stylesheets/subsite.css' media='all' rel='stylesheet' type='text/css' />    <link href='/assets/stylesheets/entry.css' media='all' rel='stylesheet' type='text/css' />    <link href='/assets/stylesheets/minimum.css' media='all' rel='stylesheet' type='text/css' data-minimum-style='true' />    <!--[if lt IE 9]>      <script src='https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js' type='text/javascript'></script>      <script src='https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js' type='text/javascript'></script>    <![endif]-->    <!-- Javascripts -->    <script src='/assets/javascripts/application.js' type='text/javascript'></script>    <script src='/assets/javascripts/application_add.js' type='text/javascript'></script>    <script src='/assets/javascripts/ajaxUtil.js' type='text/javascript'></script>    <!-- Type Square -->    <script type='text/javascript' src='//typesquare.com/accessor/script/typesquare.js?wYl7F9k9FUA%3D' charset='utf-8'></script><script>  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');  ga('create', 'UA-20026034-1', 'auto');  ga('send', 'pageview');  ga('create', 'UA-68579396-1', 'auto', {'name': 'mieu_multi'});  ga('mieu_multi.send', 'pageview');</script>  </head><body>    <div class='global-header-section'>      <div class='container'>        <div class='global-header'>          <form class='global-header_style-controller'>            <div class='global-header_style-controller_icon'>              <i class='fa fa-universal-access'></i>              -[metatags_descriptionx]            <div class='global-header_style-controller_label-and-buttons'>              <label>                文字<span class='hidden-xs'>サイズ</span></label>              <div class='global-header_style-controller_buttons-container'>                <div class='global-header_style-controller_buttons'>                  <button name='fontSize' type='button' value='small'>小</button>                  <button name='fontSize' type='button' value='medium'>中</button>                  <button name='fontSize' type='button' value='large'>大</button>    [metatags_descriptionx]                <div class='global-header_style-controller_buttons'>                  <button name='invert' type='button'>白黒反転</button>    [metatags_descriptionx]                <div class='global-header_style-controller_buttons'>                  <button name='disableStyle' type='button'>                    テキスト表示                  </button>    [metatags_descriptionx]  [metatags_descriptionx][metatags_descriptionx]          </form>          <div class='global-header_short_cut'>            <div class='global-header_short_cut_link'>              <span class='global-header_document-type_icon'>                <i class='fa fa-map'></i>                -              </span>              <a aria-controls='global-header_short_cut_links' aria-expanded='false' data-target='#global-header_short_cut_links' data-toggle='collapse' href='#'>                アクセス              </a>[metatags_descriptionx]            <div class='collapse' id='global-header_short_cut_links'>              <ul>                <li>                  <a href='https://www.mie-u.ac.jp/contact/index.html'>お問い合わせ</a>                </li>                <li>                  <a href='http://www.mie-u.ac.jp/traffic/index.html'>交通案内</a>                </li>                <li>                  <a href='http://www.mie-u.ac.jp/campusmap/index.html'>キャンパスマップ</a>                </li>              </ul>[metatags_descriptionx]          </div>          <div class='global-header_language-selector'>            <span class='global-header_document-type_icon'>              <img alt='langurge 言語' class='icon-langurge' src='http://www.mie-u.ac.jp/assets/images/langurge-icon.svg' />              -            </span>            <div class='global-header_language-selector_text'>              <a href='http://www.mie-u.ac.jp/en/index.html'>English</a>[metatags_descriptionx]          </div>          <div class='global-header_document-type'>            <span class='global-header_document-type_icon'>              <i class='fa fa-users'></i>              -            </span>            <span class='global-header_document-type_text'>              <a href='http://www.mie-u.ac.jp/staff/index.html'>教職員用ページ</a>            </span>          </div>        </div>      </div>    </div><!-- /.global-header-section -->    <div class='navbar-container'>      <div class='navbar-dummy' style='position: fixed; width: 100%; height: 1px;'>        <span></span>      </div>      <nav class='navbar navbar-default' id='mieu-header'>        <div class='container'>          <div class='navbar-header'>            <button aria-expanded='false' class='navbar-toggle collapsed' data-target='#global-menu-collapse' data-toggle='collapse' type='button'>              <span class='sr-only'>メニューの表示を切り替え</span>              <span class='icon-bar'></span>              <span class='icon-bar'></span>              <span class='icon-bar'></span>            </button>            <a class='navbar-brand' href='http://www.mie-u.ac.jp/' title='三重大学'>              <img alt='三重大学' class='global-menu_title_logo' src='http://www.mie-u.ac.jp/assets/images/mieu_logo_je.png' />            </a>          </div>          <div class='collapse navbar-collapse' id='global-menu-collapse'>            <ul class='nav navbar-nav navbar-right'>              <li>                <a href='http://www.mie-u.ac.jp/profile/index.html'>大学概要</a>              </li>              <li>                <a href='http://www.mie-u.ac.jp/department/index.html'>学部・大学院等</a>              </li>              <li>                <a href='http://www.mie-u.ac.jp/international/index.html'>国際交流</a>              </li>              <li>                <a href='http://www.lib.mie-u.ac.jp/' target='_blank'>図書館</a>              </li>              <li>                <a href='http://www.hosp.mie-u.ac.jp/' target='_blank'>附属病院</a>              </li>              <li>                <a href='http://www.mie-u.ac.jp/center/index.html'>センター等</a>              </li>              <li>                <a href='http://www.mie-u.ac.jp/exam/index.html'>入試情報</a>              </li>              <li>                <a href='http://www.mie-u.ac.jp/facilities/school/index.html'>附属学校園</a>              </li>              <li class='hidden-lg'>                <form class='header-search-form' role='form' action='http://www.mie-u.ac.jp/results/index.html' id='searchbox_009470680008838415941:olqrq71jsta'>                  <input type="hidden" name="cx" value="009470680008838415941:olqrq71jsta" />                  <input type="hidden" name="cof" value="FORID:11" />                  <input type="hidden" name="sa" />                  <div class='input-group'>                    <input name="q" class='form-control' id='search_input' placeholder='' style='font-family: ts-unused;' type='text' />                    <span class='input-group-btn'>                      <button class='btn btn-default' type='submit'>検索</button>                    </span>      [metatags_descriptionx]                </form>              </li>              <li class='dropdown'>                <div class='global-menu-search-button'>                  <a class='btn btn-default dropdown-toggle' data-toggle='dropdown' href='#'>                    <i class='fa fa-search'></i>                  </a>                  <ul class='dropdown-menu'>                    <li>                      <form class='header-search-form' role='form' action='http://www.mie-u.ac.jp/results/index.html' id='searchbox_009470680008838415941:olqrq71jsta'>                        <input type="hidden" name="cx" value="009470680008838415941:olqrq71jsta" />                        <input type="hidden" name="cof" value="FORID:11" />                        <input type="hidden" name="sa" />                        <div class='input-group'>                          <input name="q" class='form-control' id='search_input' placeholder='' style='font-family: ts-unused;' type='text' />                          <span class='input-group-btn'>                            <button class='btn btn-default' type='submit'>検索</button>                          </span>           [metatags_descriptionx]                      </form>                      <script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=searchbox_009470680008838415941%3Aolqrq71jsta"></script>                    </li>                  </ul>    [metatags_descriptionx]              </li>            </ul>          </div>        </div>      </nav>    </div><!-- /.navbar-container --><div class='user-attribute-links-section'>        <div class='container'>          <div class='row'>            <div class='col-md-3 col-sm-6 user-attribute-link'>              <a href='http://www.mie-u.ac.jp/exam/index.html'>                <i class='fa fa-pencil'></i>                受験生の方へ              </a>[metatags_descriptionx]            <div class='col-md-3 col-sm-6 user-attribute-link'>              <a href='http://www.mie-u.ac.jp/students/index.html'>                <i class='fa fa-user'></i>                在学生の方へ              </a>[metatags_descriptionx]            <div class='col-md-3 col-sm-6 user-attribute-link'>              <a href='http://www.mie-u.ac.jp/neighborhood/index.html'>                <i class='fa fa-building'></i>                企業・地域の方へ              </a>[metatags_descriptionx]            <div class='col-md-3 col-sm-6 user-attribute-link'>              <a href='http://www.mie-u.ac.jp/graduate/index.html'>                <i class='fa fa-graduation-cap'></i>                卒業生の方へ              </a>[metatags_descriptionx]          </div>        </div>      </div><!-- /.user-attribute-links-section -->      <div class='contents-section'>        <div class='container'>          <ul class='breadcrumb'>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                                                      <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      <li>「オープンキャンパス」のご案内</li>          </ul>          <div class='row'>            <div class='col-md-3' id='side-navigation'>                                                                                                                                                                                                                                  <div class='head-line'>                  <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>   [metatags_descriptionx]                <div class='visible-xs-block visible-sm-block'>                  <a class='side-navigation-collapse-btn show-menu' href='#'>メニューを表示</a>    [metatags_descriptionx]                                                                [metatags_descriptionx]<!-- /.col-md-3 /#side-navigation-->[metatags_descriptionx]<h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>[metatags_descriptionx]<h4 class="h4-t1">日程等</h4><p></p><div class="table-responsive"><table align="center" class="table-t4 table table-bordered" style="width: 95%; height: 151px;"><tbody><tr><th style="text-align: center; width: 25%; vertical-align: middle;">日時</th><th style="text-align: center; width: 30%; vertical-align: middle;">実施学部</th><th style="text-align: center; vertical-align: middle;">内容</th></tr><tr><td style="text-align: center; vertical-align: middle;">平成29年8月8日(火)</td><td style="text-align: center; vertical-align: middle;">[hrefx]</td><td style="text-align: left; vertical-align: middle;" rowspan="3"><p>学部紹介，体験授業，研究室見学，学生による紹介，なんでも相談コーナー，保護者向け企画，附属図書館自由見学</p></td></tr><tr><td style="text-align: center; vertical-align: middle;">平成29年8月9日(水)</td><td style="text-align: center; vertical-align: middle;">　医学部医学科，医学部看護学科　</td></tr><tr><td style="text-align: center; vertical-align: middle;">平成29年8月10日(木)</td><td style="text-align: center; vertical-align: middle;">教育学部，[hrefx]</td></tr></tbody></table></div><div class="row exam-poster row-eq-height"><div class="col-sm-6 col-xs-12 text-center" style="margin-top: 24px;">[hrefx]</div><div class="col-sm-6 col-xs-12 text-center" style="margin-top: 24px;">[hrefx] （６月１２日現在の予定）</div><div class="col-sm-6 col-xs-12 text-center" style="margin-top: 24px;">[hrefx]（６月１２日現在の予定）</div><div class="col-sm-6 col-xs-12 text-center" style="margin-top: 24px;">[hrefx]（７月２０日現在の予定）</div><div class="col-md-12 col-xs-12 text-center" style="margin-top: 24px;">[hrefx]（７月３１日現在の予定）</div></div><!--/.row.exam-poster --><p style="text-align: center; margin-top: 14px;"><br /> <br /> ※スケジュールは都合により変更する場合があります。<br /> 上記をクリックすると，詳細を確認できます。　（PDF）</p><p></p><p></p><p></p><h4 class="h4-t1">注意事項</h4><p>・三重大学及び本学周辺には駐車スペースがございませんので，三重大学へお越しの際は，<br /> 　公共交通機関等をご利用願います。<br /> 　現在，市道江戸橋工事中のため，迂回路を通行してください。<br /> 　また，大学周辺施設への無断駐車は関係施設へ多大な迷惑となりますのでご遠慮ください。<br /> 　トラブルが発生しても，本学は一切責任を負えませんので予めご了承ください。<br /> 　なお，障害等を有する方の場合については，下記「問い合わせ先」までご連絡願います。<br /> ・会場の収容人数等の関係上，ご希望の企画に参加できない場合がありますので，ご了承願います。<br /> ・台風接近などに伴う中止の場合は，本学ホームページの「入試情報」<br /> 　（[hrefx]）にてお知らせします。</p><p></p><p></p><hr /><p></p><h4 class="h4-t1">問い合わせ先</h4><p>〒514-8507　津市栗真町屋町１５７７ 三重大学学務部入試チーム<br /> TEL：059-231-9063<br /> FAX：059-231-5382<br /> E-mail：<a class="a-mailto" href="mailto:nyusiteam@ab.mie-u.ac.jp">nyusiteam@ab.mie-u.ac.jp</a><br /> メールでのお問い合わせに対する回答はパソコンからの返信となります。<br /> パソコンからのメールを受信できないように設定している場合には，<br /> ご連絡先<strong><span style="color: #000000;">（電話番号又はFAX番号）をメール本文に記載してください。 </span></strong></p><p></p><p></p>[metatags_descriptionx]<!-- /.col-md-9 /#legacy -->          </div><!-- /.row -->        </div><!-- /.container -->      </div><!-- /.contents-section --><footer>      <div class='footer-links'>        <div class='container'>          <div class='row'>            <div class='col-sm-4'>              <div class='footer-subsection-title'>                Quick Links  [metatags_descriptionx]              <ul class='footer-quick-links clearfix'>                <a href='http://www.mie-u.ac.jp/certificate/'>                  <li>教員免許状更新講習</li>                </a>                <a href='http://www.cocpls.mie-u.ac.jp/'>                  <li>ＣＯＣ＋</li>                </a>                <a href='http://www.mie-u.ac.jp/report/index.html'>                  <li>広報誌等</li>                </a>                <a href='http://www.mie-u.ac.jp/alumni/index.html'>                  <li>同窓会</li>                </a>                <a href='http://www.mie-u.ac.jp/hakugaku/index.html'>                  <li>博学連携</li>                </a>                <a href='http://www.mie-u.ac.jp/disclosure/index.html'>                  <li>情報公開</li>                </a>                <a href='http://www.mie-u.ac.jp/foundation/index.html'>                  <li>振興基金</li>                </a>                <a href='http://www.mie-u.ac.jp/personaldata/index.html'>                  <li>個人情報保護方針</li>                </a>                <a href='http://www.mie-u.ac.jp/adoption/index.html'>                  <li>教職員採用案内</li>                </a>                <a href='http://www.mie-u.ac.jp/link/index.html'>                  <li>リンク集</li>                </a>              </ul>[metatags_descriptionx]            <div class='col-sm-4'>              <div class='footer-subsection-title'>                SNS [metatags_descriptionx]              <ul class='footer-sns-links clearfix'>                <a href='https://www.facebook.com/pages/%E4%B8%89%E9%87%8D%E5%A4%A7%E5%AD%A6Mie-University/759879214046409'>                  <li>                    <i class='fa fa-facebook-official'></i>                    facebook                  </li>                </a>                <a href='https://www.youtube.com/user/mieuniversityweb/'>                  <li>                    <i class='fa fa-youtube-play'></i>                    YouTube                  </li>                </a>                <a href='https://twitter.com/mieuniversity'>                  <li>                    <i class='fa fa-twitter'></i>                    @MieUniversity                  </li>                </a>                <a href='/report/mail.html'>                  <li>                    <i class='fa fa-envelope'></i>                    メールマガジン                  </li>                </a>              </ul>[metatags_descriptionx]            <div class='col-sm-4'>              <ul class='footer-internal-links clearfix'>                <a href='https://www.mie-u.ac.jp/contact/index.html'>                  <li>お問い合わせ</li>                </a>                <a href='http://www.mie-u.ac.jp/sitemap/index.html'>                  <li>サイトマップ</li>                </a>                <a href='http://www.mie-u.ac.jp/traffic/index.html'>                  <li>交通案内</li>                </a>                <a href='http://www.mie-u.ac.jp/campusmap/index.html'>                  <li>キャンパスマップ</li>                </a>              </ul>              <form class='footer-search-form' role='form' action='http://www.mie-u.ac.jp/results/index.html' id='searchbox_009470680008838415941:olqrq71jsta'>                <input type="hidden" name="cx" value="009470680008838415941:olqrq71jsta" />                <input type="hidden" name="cof" value="FORID:11" />                <input type="hidden" name="sa" />                <div class='input-group'>                  <input name="q" class='form-control' id='search_input' placeholder='' style='font-family: ts-unused;' type='text' />                  <span class='input-group-btn'>                    <button class='btn btn-default' type='submit'>検索</button>                  </span>    [metatags_descriptionx]              </form>              <div class='footer-other-lang-link'>                <span class='footer-other-lang-link-icon'>en</span>                <span class='footer-other-lang-link-text'>                  Our English Site is                  <a href='http://www.mie-u.ac.jp/en/index.html'>here</a>                </span>  [metatags_descriptionx][metatags_descriptionx]          </div>        </div>      </div>      <div class='footer-credit'>        <div class='container'>          <div class='row'>            <div class='col-sm-12'>              <a href='http://www.mie-u.ac.jp/' title='三重大学'>                <img class='footer-logo' src='http://www.mie-u.ac.jp/assets/images/mieu_logo.svg' />              </a>[metatags_descriptionx]          </div>          <div class='row'>            <div class='col-sm-7'>              <address class='footer-address'>                <b>国立大学法人 三重大学</b>                <br class='visible-xs visible-sm visible-md' />                〒514-8507 三重県津市栗真町屋町1577                <br class='visible-xs visible-sm visible-md' />                TEL 059-232-1211（代表）              </address>[metatags_descriptionx]            <div class='col-sm-5'>              <div class='footer-copyright'>                Copyright &copy; 2017 Mie University.                <br class='visible-xs visible-sm visible-md' />                All rights reserved.  [metatags_descriptionx][metatags_descriptionx]          </div>        </div>      </div>    </footer>  </body></html>