<!DOCTYPE html><html lang="jp"><head>    <meta http-equiv="Content-Type" charset="UTF-8" />    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">    <meta name="description" content="[metatags_description]"/>    <meta name="google-site-verification" content="DO8iNa1WfMoO7pMRT7cXS2AdgQyNwcEe9p-6lB4TqgQ" />    <title>[metatags_title]</title>    <meta property="og:title" content="Sunny Day Service - 星を見たかい? Testo Canzone"/>    <meta property="og:url" content="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-星を見たかい--46869237"/>    <meta property="og:image" content="http://s.mxmcdn.net/images-storage/albums/nocover.png" />    <meta property="og:site_name" content="Lyrics MTV"/>    <meta property="og:description" content="星を見たかい? testo: le lyrics più belle e l'intera discografia di Sunny Day Service su MTV." />    <link href='http://fonts.googleapis.com/css?family=Open+Sans:800italic' rel='stylesheet' type='text/css' />    <link rel="icon" href="http://www.mtv.it/favicon.ico" type="image/x-icon"/>    <link rel="stylesheet" href="/static/mtvit15/bootstrap.min.css" />    <link rel="stylesheet" href="/static/mtvit15/font-awesome.min.css" />    <link rel="stylesheet" href="/static/mtvit15/style.css" />    <link rel="stylesheet" href="/static/mtvit15/print.css" media="print" />    <link rel="canonical" href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-星を見たかい--46869237" />        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->    <!--[if lt IE 9]>      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>    <![endif]-->    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js" type="text/javascript"></script>    <script src="/static/mtvit15/js/bootstrap.min.js" type="text/javascript"></script>    <script src="/static/mtvit15/js/mobile-detect.js" type="text/javascript"></script>    <script src="https://apis.google.com/js/platform.js" async defer>      {lang: 'it'}    </script>    <script type="text/javascript">    // Google Analitycs NEW    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-641592-1', 'auto');    ga('require', 'displayfeatures');    ga('send', 'pageview');    </script><script type="text/javascript">  if(typeof MTVN == "undefined") MTVN = {};    if(typeof MTVN.config == "undefined") MTVN.config = {};    if(typeof MTVN.config.btg == "undefined") MTVN.config.btg = {};    if(typeof MTVN.config.btg.DoubleClick == "undefined") MTVN.config.btg.DoubleClick = {};    // Configure auto-firing of ads.    MTVN.config.btg.DoubleClick.auto = true;    MTVN.config.btg.DoubleClick.disableDeviceManagement = true;    var vmn_page_data = {        "metadata" : {            "property"  : "it_mtv.it",                       "hub"       : "lyrics",            "type"   : "",            "subject" : 'Sunny Day Service',            "item_longId" : '星を見たかい?',            "contentType" : "",        },        "mappings" : {            "ad-unit" : {                "1"  : "@property",                "2"  : "@hub",                            },            "key-values" : {                "subject" : "@subject",                "uuid"  : "@item_longId",                "section"  : "@hub",                "contenttype"  : "@contentType"            },      "exclusion-categories" : ""        },        "settings" : { }    };</script>    <script type="text/javascript" src="http://btg.mtvnservices.com/aria/coda.html?site=gpt.mtv.it"></script><script type="text/javascript">/* <![CDATA[ */btg.Controller.init();var params = {channel: 'testi.mtv.it',pageName: "testi.mtv.it/" + com.mtvi.metadata.getDefaultPageName(),hier1: "testi.mtv.it/" + com.mtvi.metadata.getDefaultPageName()};btg.Controller.sendPageCall(params);/* ]]> */</script><!-- Facebook Pixel Code --><script>!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,document,'script','https://connect.facebook.net/en_US/fbevents.js');fbq('init', '1044601738931913'); // Insert your pixel ID here.fbq('track', 'PageView');</script><noscript><img height="1" width="1" style="display:none"src="https://www.facebook.com/tr?id=1044601738931913&ev=PageView&noscript=1"/></noscript><!-- DO NOT MODIFY --><!-- End Facebook Pixel Code --></head><body>    <!-- container -->    <div class="container">        <!-- head -->        <div class="row hidden-xs" id="head">            <div class="container">                <div class="row">                    <div class="col-xs-12 text-center">						<div id="my_ad_desktop_leaderboard" data-ad-sizes="728x90"></div>						<div id="my_ad_mobile_leaderboard" data-ad-sizes="320x50"></div>						<div id="my_ad_masthead" data-ad-sizes="970x250,970x90"></div>                    </div>                </div>            </div>        </div>        <!-- head end -->        <!-- header -->                		<!-- header new -->        <div class="row" id="header">        	<!-- container -->            <div class="container">            	<!-- row -->                <div class="row">                	<!-- colonna -->                    <div class="col-xs-12">                    	<!-- menu -->                        <nav class="navbar navbar-default" role="navigation">                            <!-- Brand and toggle get grouped for better mobile display -->                            <div class="navbar-header">                              <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">                                <span class="sr-only">Toggle navigation</span>                                <span class="icon-bar"></span>                                <span class="icon-bar"></span>                                <span class="icon-bar"></span>                                <span class="icon-bar"></span>                              </button>                              <a class="navbar-brand" href="http://www.mtv.it/" title="MTV"><img src="/static/mtvit15/images/logo_mtv.png" class="img-responsive" alt="MTV"></a>                            </div>                            <!-- Collect the nav links, forms, and other content for toggling -->                            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">                              <ul class="nav navbar-nav menu">                                <li class="dropdown"><a title="MUSICA" href="http://www.mtv.it/musica" role="button" aria-expanded="false">Musica</a></li>                                <li class="dropdown"><a title="TV" href="http://www.mtv.it/tv" role="button" aria-expanded="false">tv</a></li>                                <li class="dropdown"><a title="NEWS" href="http://news.mtv.it" role="button" aria-expanded="false">news</a></li>                                <li class="dropdown"><a title="FOTO" href="http://www.mtv.it/foto" role="button" aria-expanded="false">foto</a></li>                                <li class="dropdown"><a title="GAMES" href="http://www.mtv.it/giochi" role="button" aria-expanded="false">games</a></li>                                <li class="dropdown"><a title="APPS" href="http://www.mtv.it/speciali/apps" role="button" aria-expanded="false">apps</a></li><!--                                <li class="dropdown"><a title="EXTRA" href="#" role="button" aria-expanded="false">extra</a></li> -->                              </ul>                            </div><!-- /.navbar-collapse -->                                                        <div id="header-user" class="input-group hidden-xs">                            	<!-- [hrefx][hrefx] -->                                <!-- <button class="btn btn-default" type="button"><span class="fa fa-search"></span></button> -->                            </div><!-- /input-group -->                        </nav>                    	<!-- menu end -->                    </div>                	<!-- colonna end -->                </div>            	<!-- row end -->            </div>        	<!-- container end -->        </div>		<!-- header new end -->        <!-- row -->        <div class="row" id="search-content">            <div class="col-xs-10 col-xs-push-1 text-center">                                <div class="input-group" id="text_search">                <form  name="srchPeople" action="/" method="post" id="search_form">                <input type="text" value="Cerca testi e traduzioni" id="cerca-testi" name="query" class="form-control">                </form>                <span class="input-group-addon"><button onclick="document.getElementById('search_form').submit()"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button></span>                </div>            </div>        </div>        <!-- row end -->                <!-- header end -->        <!-- row -->        <div class="row" id="content">            <!-- colonna -->            <div class="col-xs-12">                <ol class="breadcrumb">                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li class="active">                                                            星を見たかい?                                                </li>                                    </ol>            </div>            <!-- colonna end -->            <!-- colonna -->            <div class="col-xs-12">                <!-- masonry -->                <div class="js-masonry" data-masonry-options='{ "columnWidth": ".grid-sizer", "itemSelector": ".mason-item", "gutter": 10 }'>                    <div class="grid-sizer"></div>                    <!-- mason-item -->                    <div class="mason-item w2">                        <div class="row">                            <div class="col-sm-6">                                                            <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                                                            </div>                            <div class="col-sm-6">                                <div class="social text-center">                                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                    [hrefx][hrefx][hrefx][hrefx]                                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                    [hrefx][hrefx]                                                                        <div class="social-like">                                        <div class="fb-like" data-href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-星を見たかい--46869237" data-layout="button_count" data-action="like" data-show-faces="true" data-share="false"></div>                                    </div>                                </div>                            </div>                        </div>                    </div>                    <!-- mason-item end -->                    <!-- mason-item -->					                    <!-- mason-item end -->                    <!-- mason-item -->                    <div class="mason-item w2" id="testo-container">                        <div class="testo text-center">                			                			<blockquote>                			<p>悲しい調べに乗せて夜は過ぎて行く</p><p>心の扉をたたいてくれないか</p><p>&nbsp;</p><p>ぼくのギターはいくつかいい曲を知っている</p><p>踊るあの娘に合わせ夜どおし奏で続ける</p><p>&nbsp;</p><p>悲しい調べに乗せて夜は過ぎて行く</p><p>心の扉をたたいてくれないか</p><p>&nbsp;</p><p>きみの鏡はいろんな話を知っている</p><p>男の子たちの笑顔や女の子の涙も</p>                			</blockquote>                        							<div id="mtv_ad_inread" data-ad-sizes="4x4" data-ad-reload-interval="0"></div>                                        			<blockquote>                			<p>&nbsp;</p><p>悲しい調べに乗せて夜は過ぎて行く</p><p>心の扉をたたいてくれないか</p><p>&nbsp;</p><p>come on baby 星が流れるよ</p><p>come on baby 明日が見えるかい?</p><p>come on baby come on baby</p><p>&nbsp;</p><p>悲しい調べに乗せて夜は過ぎて行く</p><p>心の扉をたたいてくれないか</p><p>&nbsp;</p><p>悲しい調べに乗せてその夜は過ぎる</p><p>心の扉をたたいてくれないか</p>                			</blockquote>                            							                <script  src="https://tracking.musixmatch.com/t1.0/m_js/e_0/sn_0/l_11683754/su_0/tr_zdOvnBjiVb-YR7uwZnU455QI3x7fHKk3Rv7F3mPWw1qsbcFYrK80PTcyvao_H0Qgs35k-GQZRSJ2hBdVJ89trvGqSi65WGwN2hyGE5gs1X3eYSPw31yaQFwou-RPnb2MQfy5FMtQ91PWoMH6YizZFG6fwv3YxD5Ed1iFhk6-G4DAFy7jFx4wAW5tadN0fjt7BBnU2764AkvI82MFr3s28ZUnVu8J__nTnlzhkQOkYH6ELp_86Tw_9MlyVgxWJqabuYYkNzCgLTeZt8SwNZx8gbgH20QryprVnaYo3qx_qAdcWraUAnV6y233yHkUC38c9EsEm23J57PC0Y_FdLmH7mnZTFzK7tEgilMFALEiIHQC3vKmcUJf5KNgAxaD0Dml/"></script>                                <p>                [hrefx][hrefx]                </p>                                                    </div>                        [hrefx][hrefx]                        <div id="fb-root"></div>                    </div>                     <!-- mason-item end -->                    <div class="mason-item w-auto" style="height:250px;">						<div id="my_ad_mpu" data-ad-sizes="300x250"></div>						<div id="my_ad_mobile_leaderboard" data-ad-sizes="320x50"></div>                    </div>                    <!-- mason-item end -->                    <!-- mason-item -->                    <div class="mason-item w2">                        <!-- row -->                        <div class="row">                            <!-- colonna -->                                                                    <div class="col-xs-12">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/Sunny-Day-Service-album_25106372" class="clearfix info_album center-block" title="">                                	<span class="image small"><img src="http://static.musixmatch.com/images/albums/nocover-350x350.png" width="140px" height="140px" class="img-responsive" alt="Sunny Day Service"></span>                                    <span class="date-pub">                                    	<span>                                            <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                                            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                                        </span>                                        <span>                                            <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>											                                            <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>											                                        </span>                                    </span>                                </a>                            </div>                            <!-- colonna end -->                                                        <div class="col-xs-12">                            	<div class="OUTBRAIN" data-src="DROP_PERMALINK_HERE" data-widget-id="AR_6" data-ob-template="mtvit" ></div>								<script type="text/javascript" async="async" src="http://widgets.outbrain.com/outbrain.js"></script>                            </div>                                                    </div>                        <!-- row end -->                    </div>                    <!-- mason-item end -->                                        <!-- mason-item -->                    <div class="mason-item hidden-print">                        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>                        <div class="static lyric clearfix">                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-晴れた日のメロディ-40996476" title="Testo 晴れた日のメロディ">                                    <span class="image"><img src="https://s.mxmcdn.net/images-storage/albums/4/2/3/9/0/9/30909324.jpg" width="50px" height="50px" alt="晴れた日のメロディ"></span>                                    <span>晴れた日のメロディ</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-セツナ-64508974" title="Testo セツナ">                                    <span class="image"><img src="https://s.mxmcdn.net/images-storage/albums4/2/2/1/1/3/5/35531122.jpg" width="50px" height="50px" alt="セツナ"></span>                                    <span>セツナ</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-BABY-BLUE-46869227" title="Testo BABY BLUE">                                    <span class="image"><img src="http://s.mxmcdn.net/images-storage/albums/nocover.png" width="50px" height="50px" alt="BABY BLUE"></span>                                    <span>BABY BLUE</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-コーヒーと恋愛-47194880" title="Testo コーヒーと恋愛">                                    <span class="image"><img src="https://s.mxmcdn.net/images-storage/albums/6/9/7/1/4/0/32041796.jpg" width="50px" height="50px" alt="コーヒーと恋愛"></span>                                    <span>コーヒーと恋愛</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-きれいだね-47194883" title="Testo きれいだね">                                    <span class="image"><img src="https://s.mxmcdn.net/images-storage/albums/6/9/7/1/4/0/32041796.jpg" width="50px" height="50px" alt="きれいだね"></span>                                    <span>きれいだね</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-今日を生きよう-46869213" title="Testo 今日を生きよう">                                    <span class="image"><img src="http://s.mxmcdn.net/images-storage/albums/nocover.png" width="50px" height="50px" alt="今日を生きよう"></span>                                    <span>今日を生きよう</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-WILD-GRASS-PICTURE-46869232" title="Testo WILD GRASS PICTURE">                                    <span class="image"><img src="http://s.mxmcdn.net/images-storage/albums/nocover.png" width="50px" height="50px" alt="WILD GRASS PICTURE"></span>                                    <span>WILD GRASS PICTURE</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-恋はいつも-46869205" title="Testo 恋はいつも">                                    <span class="image"><img src="https://s.mxmcdn.net/images-storage/albums4/0/9/3/9/7/2/36279390.jpg" width="50px" height="50px" alt="恋はいつも"></span>                                    <span>恋はいつも</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-月光荘-46869215" title="Testo 月光荘">                                    <span class="image"><img src="http://s.mxmcdn.net/images-storage/albums/nocover.png" width="50px" height="50px" alt="月光荘"></span>                                    <span>月光荘</span>                                </a>                            </div>                                                                                    <div class="item">                                <a href="http://testicanzoni.mtv.it/testi-Sunny-Day-Service_27151034/testo-雨-46869235" title="Testo 雨">                                    <span class="image"><img src="http://s.mxmcdn.net/images-storage/albums/nocover.png" width="50px" height="50px" alt="雨"></span>                                    <span>雨</span>                                </a>                            </div>                                                    </div>                    </div>                                     <!-- mason-item end -->                               <!-- mason-item -->					                    <!-- mason-item end -->                                                                                          </div>                <!-- masonry end -->            </div>            <!-- colonna end -->        </div>        <!-- row end -->        <!-- row -->        <div class="row" id="artist">            <div class="col-xs-12">                <big>Artisti A-Z</big>                <ul class="clearfix">				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>            </div>        </div>        <!-- row end -->        <!-- footer -->                        <!-- row -->        <div class="row" id="footer">            <div class="col-xs-12">                <div class="row">                    <div class="col-sm-6">                        <!-- footer menu -->                        <nav class="navbar navbar-default" role="navigation">                            <ul class="nav navbar-nav footer">                              <li>[hrefx][hrefx]</li>                              <li>[hrefx][hrefx]</li>                            </ul>                        </nav>                        <!-- footer menu end -->                    </div>                    <div class="col-sm-6">                        <div class="social-fa">						<a href="http://www.facebook.com/mtvitalia" class="fa fa-facebook" id="fa-btn" target="_blank"></a>						<a href="http://www.twitter.com/mtvitalia" class="fa fa-twitter" id="tw-btn" target="_blank"></a>						<a href="https://plus.google.com/+MTVItalia/posts" class="fa fa-google-plus" id="gp-btn" target="_blank"></a>						<a href="https://instagram.com/mtvitalia" class="fa fa-instagram" id="ig-btn" target="_blank"></a>						<a href="https://www.youtube.com/mtvitalia" class="fa fa-youtube" id="yt-btn" target="_blank"></a>                        </div>                    </div>                </div>            </div>        </div>        <!-- row end -->        <!-- row -->        <div class="row" id="foot">            <div class="col-xs-12 footer">                <img src="http://testicanzoni.mtv.it/static/mtvit15/images/logo_viacom.png" alt="VIACOM"><p>Tutti i diritti riservati. &copy; MTV Networks 2015 Questo sito utilizza cookies. Leggi la nostra policy in materia di cookies.</p>            </div>        </div>        <!-- row end -->                <!-- footer end -->                        <script>(function(d, s, id) {                          var js, fjs = d.getElementsByTagName(s)[0];                          if (d.getElementById(id)) return;                          js = d.createElement(s); js.id = id;                          js.src = "//connect.facebook.net/it_IT/sdk.js#xfbml=1&appId=267033343381711&version=v2.0";                          fjs.parentNode.insertBefore(js, fjs);                        }(document, 'script', 'facebook-jssdk'));</script>    </div>    <!-- container end --><script type="text/javascript">(function($){    $("#cerca-testi").focus(function() {        var srctxt=$("#cerca-testi").val();        if(srctxt=="Cerca testi e traduzioni")            $(this).val("");    });    if(md.phone()!=null) {        $("#video-container").insertAfter("#testo-container");        $("#print").remove();        $(".js-masonry").masonry();    }    var initMasonry = function(){        $('.js-masonry').masonry({            columnWidth: ".grid-sizer",            itemSelector: ".mason-item",            gutter: 10        });    }    var allImg = $('img'), img_array = [];    allImg.each(function(){        var $this = $(this),            _i = new Image();        _i.src = $this.attr('src');        _i.onload = function(){            img_array.push(_i);            if ( img_array.length==allImg.length ) {                window.setTimeout(function(){initMasonry();}, 1000);            }        };    });})(jQuery);</script><script src="/static/mtvit15/js/masonry.min.js" type="text/javascript"></script></body><div id="my_ad_skin1x2" data-ad-sizes="1x2"></div><div id="mtv_ad_skin3x3" data-ad-sizes="3x3"></div><div id="mtv_ad_skin6x6" data-ad-sizes="6x6"></div></html>