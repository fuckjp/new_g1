<!DOCTYPE html>	<!--  Mobile redirect: 80 --><!--esi<esi:assign name="is_mobile" value="0" /><esi:choose>  <esi:when test="$(done)!='1'">    <esi:assign name="done" value="0"/>  </esi:when></esi:choose><esi:assign name="query_param" value="''"/><esi:choose>    <esi:when test="$(QUERY_STRING)">        <esi:assign name="query_param">'?'+$(QUERY_STRING)</esi:assign>    </esi:when></esi:choose><esi:choose>  <esi:when test="$(HTTP_USER_AGENT) matches_i '''SCH-I535|SPH-L710|SGH-N064|SGH-N035|SGH-T999|SGH-I747|GT-I9305|GT-I9300|android.+mobile|iphone|ipod|webos|blackberry.+webkit.+mobile|htc|opera\ mini|operamini|iemobile|opera\ mobi|lge|lg|palm|samsung|nokia|windows\ phone|windows\ ce|bb10|blackberry|Mobile.+Firefox|tizen.+mobile'''">    <esi:assign name="is_mobile" value="1" />  </esi:when></esi:choose><esi:choose>  <esi:when test="$(HTTP_USER_AGENT) matches_i '''SAMSUNG\ SM-T'''">    <esi:assign name="is_mobile" value="0" />  </esi:when></esi:choose><esi:choose>  <esi:when test="$(is_mobile) == '1' && $(HTTP_HOST) has 'huffingtonpost.com' && $(REQUEST_PATH) matches_i '/jobs'">    <esi:assign name="done" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="$(is_mobile) == '1' && $(HTTP_HOST) has 'huffingtonpost.com' && $(REQUEST_PATH) matches_i '/hill/signup\.html'">    <esi:assign name="done" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="($exists($(QUERY_STRING{'m'})) && $(QUERY_STRING{'m'}) == 'false')                    && $(is_mobile)=='1'">      $add_header('Set-Cookie','mobileview=false; path=/;')      $set_redirect('http://www.huffingtonpost.jp'+$(REQUEST_PATH))      <esi:assign name="done" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="($exists($(QUERY_STRING{'m'})) && $(QUERY_STRING{'m'}) == 'true')                    && $(is_mobile)=='1'">      $add_header('Set-Cookie','mobileview=true; path=/;')      <esi:assign name="ignore_mobile_cookie" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="($exists($(QUERY_STRING{'tm'})) && $(QUERY_STRING{'tm'}) == 'false')                    && $(is_mobile)=='1'">      <esi:assign name="done" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="$(is_mobile) == '1' && $(HTTP_HOST) has 'huffingtonpost.com' && $(REQUEST_PATH) matches_i 'special\/disney_travel'">    $set_redirect('http://m.news.travel.aol.com/disney/')    <esi:assign name="done" value="1"/>  </esi:when></esi:choose><esi:choose>  <esi:when test="( $(ignore_mobile_cookie) == '1' || !$exists($(HTTP_COOKIE{'mobileview'}) ) || $(HTTP_COOKIE{'mobileview'})=='true' ) && $(is_mobile) == '1' && $(done)=='0'">    <esi:choose>      <esi:when test="!$exists($(HTTP_COOKIE{'mobileview'}))">        $add_header('Set-Cookie','mobileview=true; path=/;')      </esi:when>    </esi:choose>    <esi:choose>      <esi:when test="$(REQUEST_PATH) matches_i '/?([0-9]+)/([0-9]+)/([0-9]+)/([^/]+)_([0-9]+)\.html#(.+)$' ">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/entry/'+$(MATCHES{5})+'#$(MATCHES{6})'+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/?([0-9]+)/([0-9]+)/([0-9]+)/([^/]+)_([0-9]+)\.html' ">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/entry/'+$(MATCHES{5})+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/([^/]+)/([^/]+)_([0-9]+)\.html'">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/entry/'+$(MATCHES{3})+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/(news|tag|actualites)/([a-z0-9-_]+)' ">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/news/'+$(MATCHES{2})+'/'+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/newsletter/([a-z0-9-_]+)'">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/?pop=nls&nls='+ $(MATCHES{1})</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/imageblog'">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/news/imageblog/'+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/thirdmetric'">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/news/third-metric/'+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '/p/horoscopos-([a-z]+)\.html' ">        <esi:assign name="redirect_to">'http://m.huffpost.com/jp/horoscopos/'+$(MATCHES{1})+$(query_param)</esi:assign>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '^\/(subscription|users\/notifications|terms)' ">        <esi:assign name="done" value="1"/>      </esi:when>      <esi:when test="$(REQUEST_PATH) matches_i '^\/([a-z0-9-_]{2,})' ">                  <esi:assign name="redirect_to">'http://m.huffpost.com/jp/vertical/'+$(MATCHES{1})+'/'+$(query_param)</esi:assign>              </esi:when>      <esi:when test="$is_empty($(REQUEST_PATH)) || $(REQUEST_PATH) =='/'">        <esi:choose>          <esi:when test="($(GEO{'country_code'}) == 'AU')">            <esi:assign name="redirect_to">'http://m.huffpost.com/au'+$(query_param)</esi:assign>          </esi:when>          <esi:otherwise>            <esi:assign name="redirect_to">'http://m.huffpost.com/jp'+$(query_param)</esi:assign>          </esi:otherwise>        </esi:choose>      </esi:when>    </esi:choose>    <esi:choose>      <esi:when test="$exists($(redirect_to)) && !$is_empty($(redirect_to))">        $set_redirect($(redirect_to))      </esi:when>    </esi:choose>    <esi:assign name="done" value="1"/>  </esi:when></esi:choose>--><!--esi<esi:assign name="ads_ord" value="$rand()" /><esi:assign name="is_aol_referer" value="0" /><esi:choose>  <esi:when test="$(HTTP_REFERER) has '.aol.com'">    <esi:assign name="is_aol_referer" value="1" />  </esi:when></esi:choose>--><!--esi<esi:assign name="IS_US" value="$(HTTP_HOST) has 'huffingtonpost.com'" /><esi:choose>        <esi:when test="$(IS_US) && $(GEO{'country_code'}) == 'IN' && $(done)!='1'">        <esi:choose>                <esi:when test="!$(QUERY_STRING)">                        <esi:assign name="done" value="1"/>                        $set_redirect('http://' + $(HTTP_HOST) + $(REQUEST_PATH) + '?ir=India&adsSiteOverride=in')                </esi:when>                <esi:when test="!$(QUERY_STRING{'ir'})">                        <esi:assign name="done" value="1"/>                        $set_redirect('http://' + $(HTTP_HOST) + $(REQUEST_PATH) + '?' + $(QUERY_STRING) + '&ir=India&adsSiteOverride=in')                </esi:when>        </esi:choose>        </esi:when></esi:choose>--><!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]--><!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8 ie7"> <![endif]--><!--[if IE 8]>         <html class="no-js lt-ie9 ie8"> <![endif]--><!--[if IE 9]>         <html lang="jp" class="no-js modern ie9"> <![endif]--><!--[if gt IE 9]><!--> <html lang="jp" class="no-js modern"> <!--<![endif]--><head>    <title>[metatags_title]</title>    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' /><meta http-equiv='X-UA-Compatible' content='IE=Edge,chrome=1' /><meta name="keywords" content="[metatags_keywords]"/><meta name="description" content="[metatags_description]"/><meta name="category" content="Japan" /><meta http-equiv="Content-Language" content="ja_JP" /><meta name="robots" content="noodp,noydir" /><meta property="twitter:card" value="summary_large_image"/><meta property="twitter:site" value="@HuffPostJapan"/><meta name="twitter:description" content="[metatags_description]"><meta property="fb:app_id" content="320197908083217"/><meta property="og:site_name" content="ハフポスト"/><meta property="og:title" content="おとなにはむずかしいかもしれない"/><meta property="og:type" content="blog"/><meta property="og:url" content="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"/><meta property="og:image" content="http://i.huffpost.com/gen/5392970/images/o-JAPAN-KID-facebook.jpg" /><meta property="og:description" content="[metatags_description]"/><meta property="og:locale" content="ja_JP"/><meta name="sailthru.date" content="Wed, 28 Jun 2017 06:05:33 -0400"><meta name="sailthru.expire_date" content="Thu, 29 Jun 2017 06:05:33 -0400"><meta name="sailthru.image.thumb" content="http://i.huffpost.com/gen/5392970/images/s-JAPAN-KID-small.jpg"><meta name="sailthru.tags" content="[metatags_keywords]"><meta property="article:publisher" content="https://www.facebook.com/HuffPostJapan"/><meta property="article:section" content="Japan"/><link rel="image_src" href="http://i.huffpost.com/gen/5392970/images/s-JAPAN-KID-large.jpg" /><meta name="image" content="http://i.huffpost.com/gen/5392970/images/s-JAPAN-KID-small.jpg" /><meta name="thumbnail" content="http://i.huffpost.com/gen/5392970/images/o-JAPAN-KID-facebook.jpg" />    <meta name="og:see_also" content="http://www.huffingtonpost.jp/2017/08/11/trektrack_n_17724836.html" /><meta name="og:see_also" content="http://www.huffingtonpost.jp/2017/08/11/kanou-sister_n_17724622.html" /><meta name="og:see_also" content="http://www.huffingtonpost.jp/tenkijp/weekly-weather_b_17724470.html" />    <link rel="shortcut icon" href="/favicon.ico?v=2">    <link rel="alternate" hreflang="ja" href="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"/>    <link rel="alternate" href="android-app://com.huffingtonpost.android/http/www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"/>    <link rel="alternate" href="ios-app://306621789/huffpostnews/?editionID=jp&entryID=17317120"/>    <link rel="alternate" media="only screen and (max-width: 640px)" href="http://m.huffpost.com/jp/entry/17317120" >    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fapp.css" type="text/css">    <link rel="stylesheet" href="http://s1.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fcore.css%2Cphoenix%2Fpageheader.css%2Cphoenix%2Frightrail.css%2Cphoenix%2Fauthor_article.css%2Cphoenix%2Fted.css%2Cphoenix%2Fcolorbox.css%2Cphoenix%2Femail_form.css%2Cphoenix%2Fslideshow%2Fflexslider.css%2Cphoenix%2Fslideshow%2Fstyles.css" type="text/css">    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=liveblog.css%2Cbasic.css%2Csailthru_concierge.css%2Crecipe_gadget.css%2Chp_modules%2Fmodule.sponsor-widgets.css%2Chp_modules%2Fmodule.apps_feeds.css%2C_slideshows%2Finline.css%2C_slideshows%2Fmodules%2Finline.css%2C_slideshows%2Fmodules%2Fparticipation.css%2C_slideshows%2Fmodules%2Fparticipation_new.css%2Ccommercial.css%2Cadd%2Finner.css%2Cemail_share.css%2Cbuttons.css" type="text/css">    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=" type="text/css">    <link rel="stylesheet" href="http://s1.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fverticals%2Fjapan.css%2Cphoenix%2Fverticals%2F.css" type="text/css">	    <link rel="canonical" href="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html">    <!--[if lt IE 9]><link rel="stylesheet" href="http://s1.huffpost.com/assets/js.php?v=1501522368&f=conversations%2Fstylesheets%2Fapp.css" /><![endif]-->    <!--[if lte IE 7]><link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fie7.css" type="text/css" /><![endif]-->    <!--[if IE 8]><link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fie8.css" type="text/css" /><![endif]-->	    <script type="text/javascript" src="http://s1.huffpost.com/assets/js.php?v=1501522368&f=jquery-1.7.2.min.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=jquery%2Fjquery.I18N.js%2Clocale%2Fja_JP%2Fpublic.js%2Csprintf-0.7.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=huff.js%2Chp_config.js%2Clazyload-min.js%2Chp_util.js%2Chp_track.js%2Cyui_sub.js%2Chp_liveblog.js%2Chptwitter_anywhere.js%2Cphoenix%2Fcustom.modernizr.js%2Cphoenix%2Ffoundation.min.js%2C_tmp%2Fquick_fan.js%2C_tmp%2Fhp_ads.js%2C_tmp%2Fcommon.js%2Chp_browser.js%2Csubmissions.js%2Cphoenix%2Funderscore.js%2Cphoenix%2Fbackbone.js%2Cphoenix%2Fthreeup.js%2Crecipe_gadget.js%2Clivebetteramerica%2Fmodule.jquerydl.js%2Cphoenix%2Ffollow-huffpost.js%2Cphoenix%2Fsocial-sidebar.js%2Cposts.js%2Cphoenix%2Fnumeral.js%2Cphoenix%2Fsocial_widget_views.js%2Cconversations%2Fbootstrap.js%2Cscroll-track.js%2Cphoenix%2Fjquery.colorbox.js%2Cphoenix%2Fthreeup-carousel.js%2Cphoenix%2Flightbox.js%2Cphoenix%2Fjquery.formparams.js%2Cphoenix%2Fsubmit_correction.js%2C_tmp%2Fquick_subscribe_user.js%2Cphoenix%2Fnewsletter.js%2Chptwitter.js%2Cphoenix%2Flogin.js%2C_tmp%2Fclick_tracker.js%2Cphoenix%2Fimage_loader.js%2Cphoenix%2Fcaption.js%2Cconnect_overview.js%2Cimage_embed.js%2Cswfobject.js%2Cphoenix%2Fhulu_to_5min.js%2C_tmp%2Fevent_module.js%2Cphoenix%2Fslideshow%2Fjquery.flexslider.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-html.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-tracking.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-share.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-main.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-participation.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-participation_new.js%2Cphoenix%2Fyoutube_to_5min.js%2Con-hover-pinterest.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=facebook.js%2Ccookiesmin.js%2Csnproject.js%2C_tmp%2Fquick_login.js%2Chuffconnect.js%2Cprovider.js%2Cpopup_manager.js%2C_util%2Fuser.js%2Cuser.js"></script>        <script type="text/javascript">        huff.v({"last_deploy_commit_id":"a96b7fc4b3f56dd6867b408104cec2d63b2e6e99","deploy_commit_id":"e1a78edbc81e6d44991c74294064e3348dfe2f4f","deploy_seq":1501522368,"last_deploy_seq":1498589995,"deploy_date":"Mon, 31 Jul 2017 13:32:48 -0400","last_deploy_date":"Tue, 27 Jun 2017 14:59:55 -0400"});    </script>    <script type="text/javascript">// common moduleshuff.use('conf', 'modal', 'image', 'layout', 'cookies', 'user', 'track', 'common', 'promo');</script>    <!-- modulous header -->    <!-- SMARTtag huffpost_pc.article start--><script type='text/javascript'>window.cci_tag_name = "huffpost_pc.article";window.cci_iframe_tag_name = "" || (cci_tag_name + '_iframe');var CM8Server='web-jp.ad-v.jp';var CM8Cat='huffpost_pc.article';var CM8Profile='huff_tag=@hpjb,コミュニケーション,子ども,子育て,成長,教育,社会,育児,虐待,親子&huff_eid=17317120&huff_ptype=blog'</script><script type='text/javascript' src='http://cf.ad-v.jp/adam/cm8adam_1_call.js'></script><!-- SMARTtag huffpost_pc.article end--><script type="text/javascript">window.adTechCallback = function() {  window.adSetHtNm('http://jp.at.atwola.com');  window.adSetNetId('5113.1');  window.adSetAdURL('http://' + (document.domain || 'www.huffingtonpost.com') + (location.port?':'+location.port:'') + '/_uac/2014adpage.html');  window.tacProp={tags:"kvpagetype=blog:bpage;kventryid=17317120;kvcmsid=hpo:17317120;kveditags=虐待:親子:子育て:@hpjb:コミュニケーション:成長:教育:社会:子ども:育児;kvvert=news;kvblogger=kawabeyohey"};    window.tacProp.tags += ( (typeof window.HPAds!=="undefined") && (typeof window.HPAds.adtech_client_side_inf=="function") ) ? window.HPAds.adtech_client_side_inf() : "";  window.tacProp.tags += ";kvrefd="+window.location.href;  if (typeof window.adSetOthAT=="function") window.adSetOthAT(window.tacProp.tags);  };</script><script src="http://o.aolcdn.com/ads/adsWrapper.js" ></script><script>      window.adTechCallback();  </script><!-- Friendly iframe setup --><script>  window.setIframeHeight = function(obj) {    if (!obj.contentDocument) { return; }    var ad = obj.contentDocument.getElementById('ad_holder');    if (ad.offsetWidth > 1) {      obj.width = ad.offsetWidth;      obj.height = ad.offsetHeight;    }  };  window.asyncLoadIframe = function(js, iframe) {    var iDoc = iframe.contentDocument || iframe.contentWindow.document;    iDoc.open('text/html', 'replace');    iDoc.write('<html><head></head><body><div id="ad_holder"><script>var inDapIF=true;</scr'+'ipt><script src="'+js+'"></scr'+'ipt></div></body></html>');    iDoc.close();    var resize = function() { setIframeHeight(iframe); };    iframe.onload = function() {      // Give the ad 5 secs to load      for (var i=0; i<5000; i+=100) { setTimeout(resize, i); }    };    if (typeof iframe.attachEvent === 'function') { iframe.attachEvent('load', iframe.onload, false); }    return iframe;  };  window.adsIframe = function(w, h, div) {    var iframe = document.createElement('iframe');    var props = {      width: w, height: h,      marginWidth: 0, marginHeight: 0,      frameBorder: 0, scrolling: 'no',      src: 'about:blank'    };    for (var key in props) {      if (props.hasOwnProperty(key)) { iframe.setAttribute(key, props[key]); }    }    div.appendChild(iframe);    return iframe;  };  window.asyncLoadAd = function(js, w, h, div) {    var iframe = adsIframe(w, h, div);    return window.asyncLoadIframe(js, iframe);  };</script><script>if (window.HPAds && window.jQuery) {  HPAds.ad_reload_old = HPAds.ad_reload;  HPAds.ad_reload = function(placement, id) {    jQuery(document).trigger('reloadAd', document.getElementById(id));  };}</script><script>var _HPJS = (function (_mod) {  "use strict";  _mod.loadJS = function (src, options) {    var options = options || {};    var ref = window.document.getElementsByTagName("script")[0];    var script = window.document.createElement("script");    script.src = src;    script.async = options.async;    script.defer = options.defer;    ref.parentNode.insertBefore(script, ref);    return script;  }  _mod.loadJSLater = function (url, timeout) {    var ran = false;    var loader = function () {      if (ran) {        return;      }      ran = true;      _mod.loadJS(url, {async:true});    }    window.addEventListener ?      window.addEventListener("load",loader,false) :      window.attachEvent && window.attachEvent("onload",loader);    // in case the load event never fires    setTimeout(loader, timeout || 15000);  }  _mod.waitForGlobal = function(identifier, cb, poll) {    var test = typeof identifier === "function" ? identifier : function() { return !!window[identifier]; };    var interval;    if(test()) {      cb();    } else {      interval = setInterval(function(){        if(test()) {          cb();          clearInterval(interval);        }      }, poll || 50);    }  };  return _mod;}(_HPJS || {}));</script><!-- debugadcode --><style>.debugadcode-box { z-index:10000; position:relative; }.debugadcode { position:absolute; padding:5px; background-color:rgba(232, 212, 244, 0.85); font-size:0.8rem; color:black; }</style><script>window.debugadcode = function(title, properties, div) {  if (window.location.search.indexOf('debug_ad_code') < 0) return;  var head = '<div><strong>'+title+'</strong></div>'; var body = '';  for (key in properties) { body += '<div><em>'+key+'</em>: '+properties[key]+'</div>'; }  var s = document.getElementsByTagName('script');  var sLast = div || s[s.length - 1];  var d = document.createElement('div');  d.className = 'debugadcode-box';  d.innerHTML = '<div class="debugadcode">'+head+body+'</div>';  sLast.parentNode.insertBefore(d, sLast);}</script><!-- /debugadcode --><script>var googletag = googletag || {};googletag.cmd = googletag.cmd || [];(function() {  var gads = document.createElement('script');  gads.async = true;  var useSSL = 'https:' == document.location.protocol;  gads.src = (useSSL ? 'https:' : 'http:') +  '//www.googletagservices.com/tag/js/gpt.js';  var node = document.getElementsByTagName('script')[0];  node.parentNode.insertBefore(gads, node);    googletag.cmd.push(function() {     googletag.pubads().enableSingleRequest();    googletag.pubads().collapseEmptyDivs();    googletag.enableServices();  });})();</script>    <!-- END modulous header -->            <!-- ads_adtech_header -->        <!-- ads_init_functions -->        <!-- ads_commercial_video -->        <!-- ads_asset_insert -->                	<script type="text/javascript">        var ads_ext_ref_sig = '';    </script><!--esi    <esi:choose>        <esi:when test="$(HTTP_REFERER) has '|dl' || $(QUERY_STRING) has '|dl' || $(HTTP_REFERER) has 'fundrace.' || $(QUERY_STRING) has 'fundrace.'">            <esi:choose>                            <esi:when test="($(HTTP_REFERER) has '|dl') || ($(QUERY_STRING) has '|dl')">                	<esi:text>                    <script type="text/javascript">                        var ads_ext_ref_sig = 'aol_welcome_screen';                    </script>                    </esi:text>                </esi:when>                            <esi:when test="($(HTTP_REFERER) has 'fundrace.') || ($(QUERY_STRING) has 'fundrace.')">                	<esi:text>                    <script type="text/javascript">                        var ads_ext_ref_sig = 'fundrace';                    </script>                    </esi:text>                </esi:when>                        </esi:choose>        </esi:when>    </esi:choose>   --><!--esi	<esi:choose>		<esi:when test="($exists($(HTTP_COOKIE{'ad_ops_bookmarklet'})) && !($(HTTP_HOST) has 'editorial'))">            <script type="text/javascript" src="/ads/bookmarklet/bookmarklet.js"></script>		</esi:when>	</esi:choose>-->    <script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js" async defer></script>		<!-- Parsely tracking params start -->	<script type="application/ld+json">				{					"@context": "http://schema.org",					"@type": "NewsArticle",                    "mainEntityOfPage":{                        "@type":"URL",                        "@id":"http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"                    },                    "headline": "おとなにはむずかしいかもしれない",                    "author": {                "@type":"Person",                "name":"川辺洋平"                },					"image":                    {                        "@type":"ImageObject",                        "url":"http://i.huffpost.com/gen/5392970/images/o-JAPAN-KID-facebook.jpg",                        "width":2000,"height":1000                    },					                    "dateCreated": "2017-06-28T22:31:31Z",                    "datePublished": "2017-06-28T22:31:31Z",				"dateModified": "2017-06-28T23:55:01Z",                    "publisher":{                        "@type":"Organization",                        "name":"The Huffington Post",                        "logo":{                            "@type":"ImageObject","url":"http://s.huffpost.com/images/v/logos/v4/homepage.gif",                            "width":497,                            "height":60                        }                    },                    "description": "&egrave;&uml;�&egrave;��&atilde;��&eacute;��&atilde;��&atilde;�&ordf;&atilde;��&atilde;��&atilde;�&copy;&atilde;��&atilde;�&uml;&atilde;�&reg;&atilde;�&sup3;&atilde;��&atilde;�&yen;&atilde;��&atilde;�&plusmn;&atilde;�&frac14;&atilde;�&middot;&atilde;�&sect;&atilde;�&sup3;&atilde;�&macr;&atilde;��&atilde;�&uml;&atilde;�&ordf;&atilde;�&laquo;&atilde;�&uml;&atilde;�&pound;&atilde;�&brvbar;&atilde;�&macr;&atilde;��&atilde;��&atilde;��&atilde;��&atilde;��&atilde;��",                    "articleSection": "親子",                    "keywords": ["@hpjb","社会","教育","育児","コミュニケーション","子ども","子育て","成長","虐待","type:blog"],                    "thumbnailUrl": "http://i.huffpost.com/gen/5392970/images/s-JAPAN-KID-small.jpg",                    "url": "http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"				}			</script>	<!-- Parsely tracking params end -->	<!-- Google Json Markup start -->		<!-- Google Json Markup end -->			</head><body>    <!-- Newsletter ads popup -->        <!-- END Newsletter ads popup -->    <!-- Pinterest follow popup -->        <!-- END Pinterest follow popup -->    <!--modulous_debug_header -->        <!-- END modulous_debug_header -->    <div id="view_mobile_banner" style="display: none; min-width: 1000px; width: 100%; height: 105px; background: url(/images/mobile/view-mobile-bkg.png);background-size: cover; text-align: center;">	<a href="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html?m=true" style="color: #FFF; font-size: 40px; display: inline-block; padding-top: 18px; text-transform: uppercase; width: 100%; height: 105px;">		<img src="/images/mobile/view-mobile-icon.png" style="height: 68px; margin-bottom: -16px;"/>		スマホ版を表示します	</a></div><script> if(window.navigator.userAgent.match(/SCH-I535|SPH-L710|SGH-N064|SGH-N035|SGH-T999|SGH-I747|GT-I9305|GT-I9300|android.+mobile|iphone|ipod|webos|blackberry.+webkit.+mobile|htc|opera\ mini|operamini|iemobile|opera\ mobi|lge|lg|palm|samsung|nokia|windows\ phone|windows\ ce|bb10|blackberry|Mobile.+Firefox/i)) {	document.getElementById("view_mobile_banner").style.display = 'block';}</script>    <!-- RUM header -->    <script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HV1FADAMCXFhRDw=="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(15),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,n,e)])}catch(s){try{i("ierr",[s,c.now(),!0])}catch(u){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t){i("err",[t,c.now()])}var i=t("handle"),a=t(16),s=t("ee"),c=t("loader"),f=window.onerror,u=!1,d=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),u=!0)}s.on("fn-start",function(t,n,e){u&&(d+=1)}),s.on("fn-err",function(t,n,e){u&&(this.thrown=!0,o(e))}),s.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,w="fn"+h,v="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(w,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(18)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(18)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(18)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(18)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,w,"fn-",s)}function i(t){v.push(t),h&&(g=-g,b.data=g)}function a(){for(var t=0;t<v.length;t++)r([],v[t]);v.length&&(v=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(18)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",w=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],v=[];n.exports=u;var y=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(m,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,y),y.prototype=p.prototype,d.inPlace(y.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var g=1,b=document.createTextNode(g);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(15),s=t(16),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}finally{c.emit("fn-end",[f.now()],e)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],16:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],17:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],18:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(16),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=h(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[y[e]];return d&&d.push([g,e,r,a]),a}}function p(t,n){v[t]=h(t).concat(n)}function h(t){return v[t]||[]}function m(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",y[e]=n,n in u||(u[n]=[])})}var v={},y={},g={on:p,emit:e,get:m,listeners:h,context:n,buffer:w,abort:a,aborted:!1};return g}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(15),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!x++){var t=b.info=NREUM.info,n=l.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(y,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+b.offset],null,"api");var e=l.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===l.readyState&&i()}function i(){c("mark",["domContent",a()+b.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-b.offset}var s=(new Date).getTime(),c=t("handle"),f=t(15),u=t("ee"),d=window,l=d.document,p="addEventListener",h="attachEvent",m=d.XMLHttpRequest,w=m&&m.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1026.min.js"},g=m&&w&&w[p]&&!/CriOS/.test(navigator.userAgent),b=n.exports={offset:s,now:a,origin:v,features:{},xhrWrappable:g};t(12),l[p]?(l[p]("DOMContentLoaded",i,!1),d[p]("load",r,!1)):(l[h]("onreadystatechange",o),d[h]("onload",r)),c("mark",["firstbyte",s],null,"api");var x=0,E=t(17)},{}]},{},["loader",2,10,4,3]);</script>    <!-- GA, Data Layer and Omniture -->    <script type="text/javascript">var _gaq = _gaq || [];HPTrack.async = true;HPTrack.getTracker('UA-71081-1');HPTrack.setCustomVar("blog", "default");HPTrack.setCustomVar("vertical", "Japan");           HPTrack.trackPageview();    (function() {  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);})();bN_cfg = {  h: location.hostname,  p: {"dL_ch":"jp.hpmg","dL_flid":"_","dL_dpt":"default","dL_cmsID":"hpo:17317120","dL_author":"\u5ddd\u8fba\u6d0b\u5e73","dL_crtdt":"2017-06-28 06:05:33","dL_pubts":1498703491000,"dL_blogID":3,"dL_tags":"@hpjb,\u793e\u4f1a,\u6559\u80b2,\u80b2\u5150,\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3,\u5b50\u3069\u3082,\u5b50\u80b2\u3066,\u6210\u9577,\u8650\u5f85,\u89aa\u5b50","cobrand":"HuffPost","dL_vid":"video_novideo"}};function runOmni() {  if(typeof HuffPoUtil != "undefined"){  if (HuffPoUtil.getCookie('huffpost_user_id') != '')    s_265.eVar17 = 'huffpost_' + HuffPoUtil.getCookie('huffpost_user_id');  }  s_265.prop54 = 'huffpost';  s_265.pfxID = 'hpo';  s_265.channel = 'jp.hpmg';  s_265.linkInternalFilters = 'javascript:,huffingtonpost.jp';  s_265.prop16 = 'blog';  s_265.prop1 = 'default';  s_265.prop62 = 'video_novideo';  s_265.prop65 = 'blogger_content';  s_265.pageName = 'おとなにはむずかしいかもしれない';  s_265.prop9 = 'hpo:17317120';  s_265.prop22 = '川辺洋平';  s_265.prop23 = '06-28-2017';  s_265.prop12 = "" + document.URL.split('?')[0];  s_265.prop19 = '|hpjb|社会|教育|育児|コミュニケーション|子ども|子育て|成長|虐待|親子|';  s_265.t();}s_265_account ="aoljphuffpo,aoljp";(function(d){var s = d.createElement('script');s.src = "http://o.aolcdn.com/os/aol/beacon.min.js";d.getElementsByTagName('head')[0].appendChild(s);s = d.createElement('script');s.src = "http://o.aolcdn.com/os/aol/omniture-intl.min.js";d.getElementsByTagName('head')[0].appendChild(s);})(document);</script>    <!-- comScore Tag -->    <script type="text/javascript">    document.write(unescape("%3Cscript src='" + (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js' %3E%3C/script%3E"));</script><script type="text/javascript">    var comscore_data = {        c1:2,        c2:6723616,        c3:"",        c4:"",        c5:"japan",        c6:"",        c15:"",        options: {            url_append: "comscorekw=japan"        }    }    COMSCORE.beacon(comscore_data);</script><noscript>    <img src="http://b.scorecardresearch.com/p?c1=2&c2=6723616&c3=&c4=&c5=japan&c6=&c15=&cj=1" width="1" height="1" alt="" /></noscript>    <!-- end Rum -->    <!-- ads_top_1x1 -->    <div id="modulous_top_1x1" class="ad_spot">    <style type="text/css">  #_snp_tracking {    display:none;  }</style><script type="text/javascript">(function() {var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.charset = "utf-8"; pa.async = true;pa.src = window.location.protocol + "//api.popin.cc/searchbox/huffingtonpost.js";var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);})(); </script><style type="text/css">.shares .email{display: none !important;}</style><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'top_1x1', cci: 'start'}); }</script><!-- PLACEHOLDERtag start start--><script type="text/javascript">CM8ShowAd('start');</script><!-- PLACEHOLDERtag start end--></div></div>            <!-- Facebook stuff -->    <div id="fb-root"></div>    <script type="text/javascript">        HPFB.app_id = "320197908083217";        HPFB.api_key = "320197908083217";        HPFB.app_namespace = "FACEBOOK_APP_NAMESPACE";        HPFB.init();        // modal form that encourages user to like HP FB page    	huff.use('yahoofacebook', function(y) { y.likesFromYahoo(); });    </script>    <!--User auth stuff -->    <script type="text/javascript">        HPConfig.locale = "ja_JP";        HPConfig.enable_fb_widgets = 1;        HPVertical = "";    </script>                 <script type="text/javascript">        var zone_info = "japan.news";        HPConfig.current_vertical_name = "japan";        HPConfig.current_vertical_id = 129;        HPConfig.current_web_address = "www.huffingtonpost.jp";        HPConfig.current_uri = "/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html";        HPConfig.entry_bitly_url = "";        HPConfig.entry_seo_title = "おとなにはむずかしいかもしれない&amp;nbsp;|&amp;nbsp;川辺洋平";        HPConfig.hp_static_domain = "s.huffpost.com";        HPConfig.inst_type = "prod";        HPConfig.timestamp_for_clearing_js = "0";        HPConfig.wide_format = 0;        HPConfig.entry_id = 17317120;        HPConfig.blog_id = 3;        HPConfig.display_domain = "";        HPConfig.page_type = "bpage";        HPConfig.twitter_signature = "@HuffPostJapan";        HPConfig.current_vertical_color = "#058b7b";        HPConfig.current_vertical_color_light = "#005F4C";        HPConfig.entry_tags = new Array('');        HPConfig.huffsite = "www.huffingtonpost.com";        HPConfig.fb_lang = "ja_JP";        HPConfig.googleplus_lang = "en-US";        HPConfig.image = "http:\/\/i.huffpost.com\/gen\/5392970\/images\/s-JAPAN-KID-large.jpg";        HPConfig.fb_page_id = "164854427002381";        HPConfig.fb_vertical_name = "Japan";        HPConfig.fb_vertical_handle = "HuffPostJapan";                HPConfig.site='japan';        HPConfig.recaptcha_key = "6Ld6ZcISAAAAAIhkL02obhQNn6tdW47W-t-HcPAO";        HPConfig.bit_ly_key = {"_Note":"bit.ly public key, will generate huff.to links only for whitelisted domains","user_name":"huffpostapi","user_key":"R_d7766e99c939e9f2b0c074c155e98b83"};                        HPConfig.terms_link = "http://www.huffingtonpost.jp/p/huffingtonpostjp-terms-and-conditions.html";        HPConfig.privacy_link = "http://www.huffingtonpost.jp/p/huffingtonpostjp-privacy-policy.html";                HPConfig.slideshow_video_interstitial = "";            </script>    <!-- ads_pushdown -->        <!-- / working -->        <script>        jQuery(window).bind( 'load', function() {            //Twitter            window.twttr = (function (d,s,id) {                var t, js, fjs = d.getElementsByTagName(s)[0];                if (d.getElementById(id)) return; js=d.createElement(s); js.id=id;                js.src="//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs);                return window.twttr || (t = { _e: [], ready: function(f){ t._e.push(f) } });            }(document, "script", "twitter-wjs"));            //Google+            (function() {                var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;                po.src = 'https://apis.google.com/js/plusone.js';                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);            })();            //StumbleUpon            (function() {                var li = document.createElement('script'); li.type = 'text/javascript'; li.async = true;                li.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//platform.stumbleupon.com/1/widgets.js';                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(li, s);            })();            //LinkedIn            jQuery.getScript( '//platform.linkedin.com/in.js', function() { lang: 'en_us' } );            //Pintrest            /* jQuery.getScript( '//assets.pinterest.com/js/pinit.js', function() {}); */        });    </script>      <!-- Tuenti    <script type="text/javascript" src="http://widgets.tuenti.com/widgets.js"></script>    -->    <!--[if lt IE 7]>        <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please [hrefx][hrefx] to improve your experience.</p>    <![endif]-->    <!-- ads_pushdown -->        <!-- ads_quickread -->        <!-- ads_quickread_most_popular -->        <!-- page_wrapper -->    <!-- classes for page wrapper: wrapper bpage [[entry/blog], wide] -->    <div id="wrapper" class="wrapper bpage entry japan blog">        <!-- ads_sponsored_content_logo -->                <!-- Phoenix buglist -->                <!-- page_header -->		<section class="header">    <!-- AOL navbar for UK -->        <!-- visual_header_area -->    <header class="masthead group">        <!-- ads_leaderboard_flex -->        <div id="modulous_leaderboard_flex" class="ad_spot">    <style type="text/css"> #topnav_margin_btm { margin: 0 !important; } </style><div id="ad_leaderboard_flex" class="ad_wrapper_"><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'leaderboard_flex', cci: 'Lboard'}); }</script><!-- PLACEHOLDERtag Lboard start--><script type="text/javascript">CM8ShowAd('Lboard');</script><!-- PLACEHOLDERtag Lboard end--></div></div><script type="text/javascript">if (typeof HPAds !== 'undefined') { HPAds.ad_onload('div[id^="ad_leaderboard_flex"] iframe','HPAds.ad_uac_onload_handler(\' iframe[class^="uac_"]\',this,\'bottom_ad_border_div\',10)');}</script></div>        <!-- ads_leaderboard_top -->                <!-- page branding and current date -->		        <div class="tophead_wrapper">            <div class="branding" style="padding-bottom:20px !important;">                                    <a href="http://www.huffingtonpost.jp/japan">                                                                                <img class="masthead-logo width_300px" src="http://s.huffpost.com/images/v/logos/v5/logos-hero-blk-small.png" alt="Huffpost Japan" />												<div><img src="http://s.huffpost.com/images/v/logos/v5/logos-japan.gif" /></div>						                                                            </a>            </div>            <!-- edition dropdown -->            <!-- edition dropdown --><div class="edition geo_dropdown">	<span class="current">		Edition: <strong class="this-region">jp</strong>		<span class="arrow-down"></span>		<button class="show-hide" data-target=".editions">Show/Hide</button>	</span>	<menu class="editions inner off">		<ul>                     <li>			      <a href="http://www.huffingtonpost.com/?country=AR">				       <span>عربي (Arabic) </span> <strong>AR</strong>			            </a>			</li>                                          <li>				<a href="http://www.huffingtonpost.com/?country=AU">					<span>Australia</span> <strong>AU</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=BR">					<span>Brasil</span> <strong>BR</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=CA">					<span>Canada</span> <strong>CA</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=DE">					<span>Deutschland</span> <strong>DE</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=ES">					<span>Espa&ntilde;a</span> <strong>ES</strong>				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=FR">					<span>France</span> <strong>FR</strong> 				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=GR">					<span>Ελλάδα (Greece)</span> <strong>GR</strong> 				</a>        			</li>                     <li>				<a href="http://www.huffingtonpost.com/?country=IN">					<span>India</span> <strong>IN</strong> 				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=IT">					<span>Italia</span> <strong>IT</strong>				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=JP">					<span>&#26085;&#26412; (Japan)</span> <strong>JP</strong>				</a>					</li>			<li>				<a href="http://www.huffingtonpost.com/?country=KR">					<span>&#54620;&#44397; (Korea)</span> <strong>KR</strong>				</a>					</li>			<li>				<a href="http://www.huffingtonpost.com/?country=MG">					<span>Maghreb</span> <strong>MG</strong>				</a>					</li>            <li>               <a href="http://www.huffingtonpost.com.mx/">                	<span>M&eacute;xico</span> <strong>MX</strong>               </a>            </li>                                               			<li>				<a href="http://www.huffingtonpost.com/?country=ZA">					<span>South Africa</span> <strong>ZA</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=UK">					<span>United Kingdom</span> <strong>UK</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=US">					<span>United States</span> <strong>US</strong>				</a>			</li>		</ul>	</menu>	</div>	            <!-- wrapper of line of social, newsletter  -->            <div id="social-subscribe-search" class="social-subscribe-search group">                <ul class="group">                    <li class="facebook">                        <div class="content like">                            <!-- facebook button code -->                                <div class="fb-like" data-href="http://www.facebook.com/HuffPostJapan/" data-send="false" data-layout="button_count" data-width="40" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 40px" ></div>                        </div>                    </li>                    <li class="twitter">                        <div class="content tweet">                            <!-- twitter button code -->                                [hrefx][hrefx][hrefx][hrefx]<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>                        </div>                    </li>                    <li class="newsletters" data-fx="hover">                        <div class="content">                            <strong>メールマガジンを講読</strong>                            <div class="form">                                <!-- sign up for vertical newsletter -->                                 <div class="newsletters"  >                                  <form action="#">                                      <fieldset>					                                                 <legend>Get Japanメールマガジンを講読</legend>                                          <label for="newsletter-email">メールアドレス</label>                                          <input class="input-email" placeholder="メールアドレス" id="newsletter-email" type="text" />                                          <input type="checkbox" value="1" name="email_subscribe_check" class="email_subscribe_check" style="display:none;" />                                          <label for="newsletter-submit">メールアドレス</label>						                                              <input data-vertical="japan" class="submit" id="newsletter-submit" type="submit" value="登録"  />						                                      </fieldset>                                  </form>                              </div>                          </div>                      </div>                    </li>		        </ul>			</div>			            <div class="clear"></div>        </div><!-- .tophead_wrapper ENDS -->    </header>    <!-- line of links that sit on top of the visual header and user account controls -->    <div class="topnav">        <!-- line of links that sit on top of the visual header   -->        <div class="links-products" >    <!-- big news links that are vertical specific -->    <div class="big-news-links">        <ul>          <li class="commercial_big_news_links">            <!-- ads_big_news_link -->                      </li>        </ul>    </div>    <!-- links to HP products that are the same across all verticals -->    <div class="products" >        <ul>          <li><a href="http://itunes.apple.com/jp/app/the-huffington-post/id306621789?mt=8"  >iPhone/iPad アプリ</a></li>          <li><a href="https://play.google.com/store/apps/details?id=com.huffingtonpost.android&hl=ja"  >Android アプリ</a></li>          <li><a href="/big-news/#japan"  >もっと見る</a></li>        </ul>    </div></div>        <!-- user account controls -->        					<!-- user account controls -->					<div id="wendybird_user" class="user">					    <div class="not-logged-in">                            <ul class="group">                      <li><span class="hidden"><a href="javascript:void(0);" onclick="return false;" class="hp_desktop_alerts">Desktop Alerts</button></span></li>					                                        </ul>					    </div>					    <div class="logged-in off">					        				            <div id="wendybird_user_data" class="account vcard">				                <div class="top group">				                	<figure>									    <img src="" alt="" width="20" height="20" />									</figure>								    <span class="username">$USERNAME</span>				                </div>				                <menu class="controls">                                    <ul>                                        <li>                                        <span class="hidden"><a href="javascript:void(0);" onclick="return false;" class="hp_desktop_alerts">Desktop Notifications</button></span>                                        </li>                                        <li>                                            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                        </li>                                        <li>                                            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li>                                            <a href="/users/logout/?referer=%2F" onclick="QuickLogin.SocialLogout('/users/logout/?referer=%2F'); return false;">                                                ログアウト                                            </a>                                         </li>                                    </ul>                                </menu>				            </div>					    </div>					</div>                    <script type="text/javascript">                        HPUtil.initUserNavStatus(false);                        //SocialNotifications.setEvents();                        //huff.use('desktop_stream');                    </script>    </div>    <!-- large banner ad -->    </section><script>(function($){ // no Conflict    $(function() { // dom ready    var socialSubSearch = $('#social-subscribe-search'),        newsletter = socialSubSearch.find('.newsletters'),        rollout = socialSubSearch.find('[data-fx="hover"]'),        liContent = socialSubSearch.find('.content');        var searchcheck="ハフィントンポスト内を検索";        var checkInputContent = function(evt){            };    newsletter.find('.content').hover(      function(){        var inputVal = "";        if (inputVal != searchcheck && inputVal != "") {        }      },      function(){        var inputVal = "";        if (inputVal != searchcheck && inputVal != "") {        }      }    );    // rollover effects    liContent      .on('mouseenter', function() {        var that = $(this),            thatParent = that.parent('li'),            inputField = that.find('input[type="text"]');        if(thatParent.data('fx') === 'hover') {          thatParent.addClass('hover');          inputField.focus();        }      })      .on('mouseleave', function() {            var that = $(this),                thatParent = that.parent('li'),                inputField = that.find('input[type="text"]');            thatParent.removeClass('hover');            inputField.blur();          });        // end liContent    });})(jQuery);</script>        <!-- END page_header -->        <!-- page_navigation -->        <nav class="main group">    <!-- top nav bar -->    <section class="verticals japan group"  data-beacon='{"p":{"mnid":"topnav_first_row","mlid":"topnav"}}'  >        <ul class="verticals-ul">            <li class="front-page toplevel"  data-beacon='{"p":{"lnid":"homepage"}}'  >	                             <a class="toplevel-a" href="http://www.huffingtonpost.jp" title="Home" tabindex="1" class="link">FRONT PAGE</a>		  	            </li>                                                <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/politics/">政治</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/business/">経済</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/world/">国際</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/society/">社会</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/technology/">テクノロジー</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/lifestyle/">ライフスタイル</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/sports/">スポーツ</a>                            </li>                        <!-- START UK BLOGS DROP DOWN -->            										            <!-- END UK BLOGS DROP DOWN -->                                            </ul>    </section>        <!-- bottom nav bar -->    <section class="stories group"  data-beacon='{"p":{"mnid":"topnav_subnav","mlid":"topnav"}}'  >        <ul class="group">                                                             <li>                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx]            </li>                            	        </ul>    </section>    </nav><!-- ads_leaderboard_below_nav --><!-- ads_curtain --><div id="curtain_wrapper">    <div id="curtainunit"></div></div><!-- ads_status_bar --><!-- ads_edit_banner -->        <!-- END page_navigation -->        <!-- page_content -->        <section class="content">            <!-- breaking_news module --><!-- 3up carousel module --><!-- ads_threeup_edit_promo --><section id="carousel" class="three-up"  data-beacon='{"p":{"mnid":"threeup_top_wrapper","mlid":"threeup"}}' >    <div class="group three-up-list">        <ul class="three-up-holder">            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724836","mpid":0}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724622","mpid":1}}' >                <figure>                    [hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724470","mpid":2}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724442","mpid":3}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724436","mpid":4}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724380","mpid":5}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724372","mpid":6}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17724182","mpid":7}}' >                <figure>                    [hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17723618","mpid":8}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17723226","mpid":9}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17722828","mpid":10}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17715650","mpid":11}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17715628","mpid":12}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17715472","mpid":13}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17705920","mpid":14}}' >                <figure>                    [hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx]</strong>            </article>        </li>            </ul>    </div>    <button class="previous">Previous Story</button>    <button class="next">Next Story</button></section><script>    (function($){        $('.lnid-threeup_left_nav').on('click', function(){            HPTrack.trackPageview('/t/a/threeupnav.v6/left.v2/Japan');        });        $('.lnid-threeup_right_nav').on('click', function(){            HPTrack.trackPageview('/t/a/threeupnav.v6/right.v2/Japan');        });    })(jQuery);</script><!-- blog_banner module --><section class="blog-banner group">	<a class="title" href="/the-blog/">ブログ</a>	<p>                   ハフポストの言論空間を作るブロガーより、新しい視点とリアルタイムの分析をお届けします           </p>    </section><!-- main entry body --><section class="main group">            <!-- Breaking news bar -->        <!-- main entry body -->    <div class="column entry">        <!-- Article content -->        <!-- entry header -->	<article class="entry" id="printable">		<header>                                                        <!-- ads_entry_body_top-->                                                        <!-- Author Information -->                    <div class="author blog">                <figure>            <img src="http://s.huffpost.com/contributors/kawabeyohey/headshot.jpg" alt="川辺洋平 Headshot" />        </figure>                <div class="byline vcard group ">            <div class="info">                            <a rel="author" href="/kawabeyohey/" ><span class="name fn">川辺洋平</a>                                                                          <a class="fan" href="/users/becomeFan.php?of=hp_blogger_川辺洋平">ファンになる</a>                                    </span>                                    <span class="teaser"><p>特定非営利活動法人こども哲学・おとな哲学アーダコーダ代表理事。 横浜国立大学大学院教育学研究科所属。</p></span>                                        </div>                        <!-- author social buttons -->            <ul class="social group">            	                		    		        <li class="email">			     <a href="/users/login/" onclick="QuickFan.emailAlerts('hp_blogger_川辺洋平', '川辺洋平');return false;" >                              <button>メール</button>                          </a>			 </li>			                    				                                        <li class="twitter tweet">                        <a href="http://twitter.com/kawabeyohey" author_nickname="hp_blogger_川辺洋平" class="twitter-anywhere-user twitter-tooltip" sl-processed="1"></a>                    </li>                    				                <li class="facebook like">					                    	                 <a href="#" class="fb-tooltip-333239 fb-tooltip" sl-processed="1"></a>	                    <script type="text/javascript">		                 (function($){		                     huff.js('jquery/jquery.tooltip.hp.js', function(){		                         $('.fb-tooltip-333239').toolTip({		                             toolTipWidth : 250,		                             namespacevlaue: '.aol_tooltip_333239 .aol_tooltip',		                                html : '<div class="fb-follow-tooltip"><b>投稿お知らせメールを受け取る 川辺洋平</b><div class="fb-like-container"><div class="fb-like" data-href="http://www.huffingtonpost.jp/kawabeyohey/" data-send="false" data-layout="button_count" data-width="40" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 40px" ></div></div></div>'		                           });		                     });		                  }(jQuery));		             </script>	        	    		                    </li>            </ul>                    </div>    </div>                                                                <!-- Title -->                <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>                        <!-- Article Byline Information -->            <div class="headline group">                <div class="times"  >    <span class="posted">        投稿日: <time datetime="2017-06-28T22:31:31-04:00">            2017年06月29日 11時31分 JST        </time>    </span>    <span class="updated">        更新: <time datetime="2017-06-28T23:55:01-04:00">            2017年06月29日 12時55分 JST        </time>    </span></div>            </div>                                              <!-- Article Main Image -->                    <!-- article image/video (if applicable) -->    <div class="main-visual group embedded-image">        </div>                                    <!-- Imageblog Social Share Bar -->                        <!-- Social Share Bar -->            <menu id="social_badges" class="social_badges_ social-bar group floating">        <section class="social-badge" data-url="/ajax/social/phoenix_social_badge_json.php?badges=facebook_like%2Cfacebook%2Ctwitter%2Chatena%2Cemail%2Ccomments&id=17317120&url=http%3A%2F%2Fwww.huffingtonpost.jp%2Fkawabeyohey%2Fdifficult-for-adults-to-understand_b_17317120.html" data-entry-id="17317120">       <ul class="shares group">        <li class='share facebook_like VERB_LIKE' data-type='fblike'><a href='javscript:void(0)'><div class="fb-like" data-href="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html" data-send="false" data-layout="box_count" data-width="450" data-show-faces="false" data-colorscheme="light" data-font="arial" data-action="like" ref="" style="width: 450px" ></div></a></li><li class="share facebook" data-type="facebook">	<a class="social-fb-share-btn" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.huffingtonpost.jp%2Fkawabeyohey%2Fdifficult-for-adults-to-understand_b_17317120.html" data-url="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html" data-title="おとなにはむずかしいかもしれない" data-caption="www.huffingtonpost.jp" data-image="http://i.huffpost.com/gen/5392970/images/o-JAPAN-KID-facebook.jpg">	  <span class="facebook-share-btn label">シェア</span>	  <span class="facebook-share-count count"></span>	</a></li><li class="share twitter" data-type="twitter">	<div class="social-twitter-btn" data-size="140" data-account="HuffPostJapan">    <a class="twitter-tweet-btn" href="https://twitter.com/intent/tweet?lang=ja&text=%E3%81%8A%E3%81%A8%E3%81%AA%E3%81%AB%E3%81%AF%E3%82%80%E3%81%9A%E3%81%8B%E3%81%97%E3%81%84%E3%81%8B%E3%82%82%E3%81%97%E3%82%8C%E3%81%AA%E3%81%84+http%3A%2F%2Fwww.huffingtonpost.jp%2Fkawabeyohey%2Fdifficult-for-adults-to-understand_b_17317120.html">      <span class="twitter-tweet-btn label">ツイート</span>      <span class="twitter-tweet-count count"></span>    </a>	</div></li><li class="share hatena" data-type="hatena">	<div class="social-hatena-share-btn">	    <a href="http://b.hatena.ne.jp/entry/http%3A%2F%2Fwww.huffingtonpost.jp%2Fkawabeyohey%2Fdifficult-for-adults-to-understand_b_17317120.html" class="hatena-bookmark-button" data-hatena-bookmark-title="おとなにはむずかしいかもしれない" data-hatena-bookmark-layout="vertical-balloon" title="おとなにはむずかしいかもしれない">	        <img src="http://b.st-hatena.com/images/entry-button/button-only.gif" alt="おとなにはむずかしいかもしれない" width="20" height="20" style="border: none;" />	        <span class="hatena-share-btn label">hatena</span>	        <span class="hatena-share-coun count"></span>	    </a>	    <script src="http://b.st-hatena.com/js/bookmark_button.js" type="text/javascript"></script>	</div></li><li class="share email" data-type="email">	<div class="social-email-btn">	    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]	    <span class="hp-email-count count"></span>	</div></li><li class="share comment" data-type="comments">	<div class="social-comment-btn">	    <span class="hp-comment-btn label">コメント</span>	    <span class="hp-comment-count count"></span>	</div></li>      </ul>            </section>        </menu>            <!-- Print Icon for Canada and Quebect verticals in permalink page -->            				<a href="javascript:window.print()" title="印刷" class="print_btn print_common" ><img src="http://www.huffingtonpost.com/images/v/print_icon.png" width="20" height="17" alt="印刷"/></a>			            <div style="clear:both"></div>        </header>                <!-- Article Text Body -->                <div class="float_right padding_left_10">                    </div>    <!-- Entry main text -->    <div class="content" id="mainentrycontent">      <div class="float_left">        <!-- AD ads_sharebox_260x60 -->        <div class="ad_share_box">                    <script type="text/javascript">            if ( 'undefined' != typeof(HPAds.ad_sharebox_260x60_fix) ) {              HPAds.ad_sharebox_260x60_fix();            }          </script>        </div>              </div>                    <!-- Entry Text -->        		          <p>[hrefx][hrefx]</p><p>先日、電車に乗って座席に座ると、向かいの席に2歳くらいの男の子が座っていた。男の子の隣には母親らしき女性が座っていて、なにやらカバンの中をがさごそと探している。</p><p>男の子は「アー！」と元気よく車両に響き渡る短くて大きな声を発し、女性が何かをカバンの中から出してくれるのを待っているように感じられた。二度目に男の子が「アー！」と叫んだ時、私は男の子にちらりと視線を投げかけた。</p><p>こどもにとって知らない成人男性と目が合うことは、なにかしら意味合いを持つ。たとえば怖い人か、あるいは優しい人かを判断する材料にもなる。大人同士であっても、知らない人と目が合えば、意味を汲み取ろうとするだろう。</p><p>私は初めて会うこどもと接する時には、最初できるだけ目を合わせずに、こどもが私を観察することができる時間を提供する。それから、ちらり、ちらりと目を合わせたりそらしたりする。</p><p>よい方法であるかどうかはわからないが、私にとっては、それが手っ取り早く仲良くなる方法だ。</p><p>しかし、先日電車の中で出会った男の子とは、目が合ってしまった。目が合って、男の子は「アー！」と言うのをやめてしまった。やがて、母親がカバンのなかから、おやつのはいったマグカップ容器を取り出し、男の子の関心は容器へと移っていった。</p><p><strong>言葉の世界のそとがわに</strong></p><p>ここで私が書きたいことは、電車の中で大きな声を出したこどもへの対応というような話ではない。ましてや公共機関において泣きわめくこどもに対する、おとなのあるべき対応という話ですらない。</p><p>2歳くらいのこどもは、身体的コミュニケーションをしているという事実だ。そしてまた、おとなとこどもの間には、言葉で伝えられないことの外側に、身体的なコミュニケーションが成立しているということだ。</p><p>ベビーサインを学んでいる人や、実践している方には、赤ちゃんと「しぐさ」を通じてコミュニケーションができるという方もいるだろう。もちろんそうした「共通言語」も、身体的コミュニケーションであると言える。</p><p>一方で、「共通ではない行為」についても私たちはちいさなこどもたちとやりとりしている。着ている服の色、におい、髪型、声のトーン、目線、握手した手のぬくもり。あるいは背を向け、関わろうとしない態度。</p><p>こどもにとって、感覚的に受け取った情報を判断に活用することや、行為に行為を返してもらうことは、言葉の世界よりも先に出会う世界との対話といえる。言葉のない対話を、対話と呼ぶことはふさわしくないとすれば、コミュニケーションと言い換えてもかまわない。</p><p><strong>こどもはおとな、おとなはこども</strong></p><p>今から75年前、モーリス・メルロ=ポンティは「行動の構造」の中で、意味があって行動が行われるのではなく、また、行動に意味が生じるのでもないと論じた。</p><p>私がまばたきをするとき、まばたきの意味を考えていないように、行動は意味に先立つ。</p><p>まばたきという行為ひとつをとっても、状況によってその意味を構成する要素はかわるので、一面的な意味によって行動をすべて説明できるわけではないのだ。</p><p>こどもに視線を投げかける時、私はただ視線を投げかける。</p><p>そこには母親とおぼしき女性の反応をもとめるこどもが、「アー！」と声をあげた行動があり、私がこどもに視線を投げたという行動がある。</p><p>私が視線を投げかけたことに含まれる意味は、こども自身による解釈によって定義され、またそのこどもが「アー！」と言わなくなってしまったことの意味も、私によって解釈されているに過ぎない。</p><p>行動と、行動の交わる瞬間、両者に共通するベビーサインのような「共通言語」は存在しないが、行動と行動の中で、たしかに両者は「言葉では説明できない何か」を交換していると言ってよいのではないだろうか。</p><p>成長するに従って、私たちは言葉に頼りコミュニケーションする。</p><p>言葉が得意なおとなは、なおさら言葉の獲得を重要視しうる。</p><p>コミュニケーションといえば、言葉の獲得だと思い込み、おとなの都合で幼児に言語を獲得させようとすることはないだろうか。</p><p>こどもの行動がおとなの行動を含む周囲の環境によって引き起こされているのであれば、こどもの行動や言葉は、私たち自身とも考えられる。</p><p>言葉よりも前に、行動によって世界と対話するこどもから、こどもをとりまく世界を読み取れるようになりたい。</p><p>[metatags_description] 厚生労働省の「こども虐待による死亡事例等の検証結果等について(第12次報告)」によれば、心中死をのぞいたこどもの虐待死は、0歳から2歳のこどもで実に75%をこえる。</p><p>モーリス・メルロ=ポンティに従えば、おとながこどもに言語を獲得させたいと願うこともまた、こどもの意思がおとなの行動となって現われているのかもしれない。あるいは、ロゴスの世界を無理に獲得させず、こどもの行動を楽しみたいという私の願いも、こどもの意思によるものなのかもしれない。</p>        </div>    <!-- Follow Twitter Author -->    <p>        <b class='follow_twt_author'>            川辺洋平さんをTwitterでフォローする:            <a target="_blank" href="http://www.twitter.com/kawabeyohey">www.twitter.com/kawabeyohey</a>        </b>    </p>                        <!-- Follow Tag Links Bottom -->        <div class="follow bottom-tags"  >    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <span class="group">                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx]        </span>            </span></div>        <!-- Books By Author -->                                <!-- article_foot ad -->            <div class="margin_10_0">                            </div>            <footer>                                <!-- article_bottom ad -->                <div id="modulous_article_bottom" class="ad_spot">    <script type="text/javascript">    var amp_med = '40313';    var amp_site = '36377';    var amp_frame = '2007799';    var amp_rurl = document.referrer;    var amp_send = location.protocol + '//ads.adjust-net.jp/adserver/ad/ads_v.js?' + Math.random();    document.write("<scr" + "ipt type='text/javascript' src='" + amp_send + "'></scr" + "ipt>");</script></div>                                 		        <!--end of content-->                    </footer>        </article>	                                <!-- ads_below_entry_recirc -->        <div id="modulous_below_entry_recirc" class="ad_spot">    <div class="OUTBRAIN" data-src="" data-widget-id="AR_1" data-ob-template="HuffingtonPostJapan" ></div></div>						        <!-- Orbitz Module -->                <!-- 4Wnet_feed Module -->                <!-- ads_bottom_article_text -->                    <!-- ads_related_content_top -->                    <!-- Sailthru flyout -->                <!-- Around the web -->                        <!-- Conversations -->        <div id="floaterTarget">          <div id="conversations-huffpost-web"><div class="clear"></div><div style="margin:10px 0">	<div class="clear">&nbsp;</div></div><a name="comments"></a><div id="huffpost-web-fb-comments-opener" style="display: none;">Click here to view Conversations</div><div id="huffpost-web-fb-comments">    <div class="related" style="padding-left:3px">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div class="fb_comments">        <fb:comments colorscheme="light" width="570" href="http://www.huffingtonpost.jp/kawabeyohey/difficult-for-adults-to-understand_b_17317120.html"/>    </div>    <div class="clear_first"></div></div><script type="text/javascript">var initializeFBPing = function() {	// Attach the scroll event ping to send to data layer	if (typeof window.bN_scrollTrack === 'function') {		window.bN_scrollTrack('cmts_fb', '#huffpost-web-fb-comments');	}};jQuery(window).bind('load', function(){	initializeFBPing();});</script></div>        </div>                    </div>            <!-- right rail -->    	    <section class="rail"  data-beacon='{"p":{"mlid":"sidebar_right"}}' >	        <!-- ads_right_rail_flex --><div id="modulous_right_rail_flex" class="ad_spot">    <script type="text/javascript">  if ( "function" === typeof(adSetSyncDelay) ) {    adSetSyncDelay('125');  }</script><div id="ad_right_rail_flex" class="ad_wrapper_top"><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_flex', cci: 'Rectangle'}); }</script><!-- PLACEHOLDERtag Rectangle start--><script type="text/javascript">CM8ShowAd('Rectangle');</script><!-- PLACEHOLDERtag Rectangle end--></div></div></div><!-- ads_text_sponsorship --><div id="modulous_sponsorship" class="ad_spot">    <div class='margin_10_0 center'><div id="dfp_sponsorship" style="text-align:center;"><script>googletag.cmd.push(function() {  googletag.defineSlot('/50996754/promo_article_r1', [[300,250],[300,350]], 'dfp_sponsorship').addService(googletag.pubads());});</script></div></div></div><!-- ads_right_rail_edit_promo --><!-- HPIN unit --><section class="most-popular"  >    <div id="modulous_gravity_most_popular" class="ad_spot">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2><div class="mp_cycle"><div id="grv-personalization-35"></div></div><script type='text/javascript'>//<![CDATA[(function() {  window.gravityInsightsParams = {    'type': 'content',    'action': '',    'site_guid': '72ef14275a4db480ac8010c74ede260c'  };  var adServerReq, bUrl, cburl, doUseGravityUserGuid, includeJs, jq, pfurl, type, ug, wlPrefix, wlUrl, _ref, _ref1, _ref2;  includeJs = function(a) {    var b;    b = document.createElement("script");    b.async = !0;    b.src = a;    a = document.getElementsByTagName("script")[0];    return a.parentNode.insertBefore(b, a)  };  bUrl = "";  ug = (doUseGravityUserGuid = !0 === gravityInsightsParams.useGravityUserGuid ? 1 : 0) ? "" : gravityInsightsParams.user_guid || (null != (_ref = /grvinsights=([^;]+)/.exec(document.cookie)) ? _ref[1] : void 0) || "";  wlUrl = (wlPrefix = "https:" === location.protocol ? "https://secure-api.gravity.com/v1/api/intelligence" : "http://rma-api.gravity.com/v1/api/intelligence",   jq = (null != (_ref1 = window.jQuery) ? null != (_ref2 = _ref1.fn) ? _ref2.jquery : void 0 : void 0) || "",   type = "iframe",   adServerReq = gravityInsightsParams.ad || "",   cburl = gravityInsightsParams.cburl || "",   pfurl = gravityInsightsParams.pfurl || "", "" + wlPrefix + "/wl?jq=" + jq + "&sg=" + gravityInsightsParams.site_guid + "&ug=" + ug + "&ugug=" + doUseGravityUserGuid + "&id=grv-personalization-35&pl=35" +    ("&type=" + type + "&ad=" + adServerReq + "&cburl=") + encodeURIComponent(cburl) + "&pfurl=" + encodeURIComponent(pfurl) + ("&x=" + (new Date).getTime()) + ("undefined" !== typeof forceArticleIds && null !== forceArticleIds && forceArticleIds.join ? "&ai=" + forceArticleIds.join(",") : "") + ("undefined" !== typeof apids && null !== apids && "" !== apids ? "&apids=" + encodeURIComponent(apids) : ""));  bUrl && includeJs(bUrl);  wlUrl && (window.gravityInsightsParams.sidebar && (window.gravityInsightsParams.wlStartTime = (new Date).getTime()), includeJs(wlUrl));})();//]]></script></div></section>					<section class="follow-huffpost"  data-beacon='{"p":{"mnid":"mod-follow"}}'  >						<h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>						<ul class="untouched follow-links group">							<li class="email selected"  data-beacon='{"p":{"lnid":"email"}}'  >								<button>メール</button>								<div class="content">									<form class="subscribe">										<fieldset class="email">											<legend>メールアドレス</legend>											<input id="subscribe_user_email" class="text" name="email" onfocus="if(this.value=='メールアドレス')this.value=''" value="メールアドレス" type="text">											<input type="checkbox" value="1" name="email_subscribe_check" class="email_subscribe_check" style="display:none;" />	                                        <input type="hidden" name="vertical" value="japan">                                            <input class="button right_rail_signup" type="submit" value="メールマガジンを登録">                                            <label class="signup_error" style="display:none;">同意する場合チェックボックスをチェックしてください。</label>                                            <fieldset class="options">                                                <legend>オプション</legend>                                                                                                	<input type="hidden" name="daily-brief"  id="daily-brief" value="0">                                                                                                                                                                                                	<div class="item">                                                		                                                			<input type="checkbox" class="list" id="vertical-brief" checked="checked" >                                                			<label for="vertical-brief">メールマガジンを講読</label>                                                		                                                	</div>                                                                                                                                                                                                                                                                                                                                                                                            	                                            </fieldset>                                      </fieldset>                                                                              <p class="instructions">                                          その日一番のニュースやブログを掲載（毎日送信）.                                        </p>                                                                                                                </form>                                </div>                            </li>                            <li class="facebook"  data-beacon='{"p":{"lnid":"fb"}}'  >                                 <button>Facebook</button>                                <div class="content off">                                    <ul>                                    <li class="group">                                                                               <strong class="name">HuffPost</strong>                                            <div class="share-button">                                                <div class="fb-like" data-href="http://www.facebook.com/HuffPostJapan" data-send="false" data-layout="button_count" data-width="100" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 100px" ></div>                                            </div>                                                                                                                              </li>                                    </ul>                                </div>                            </li>                            <li class="twitter"  data-beacon='{"p":{"lnid":"twitter"}}'  >                                 <button>Twitter</button>                                <div class="content off">                                    <ul>                                        <li class="group">                                            <div class="share-button">																						<strong class="name">HuffPost</strong>											<div class="share-button">											 [hrefx][hrefx][hrefx][hrefx][hrefx]<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>											 </div>                                             											                                                                                          </li>                                    </ul>                                </div>                            </li>                                                        <li class="google"  data-beacon='{"p":{"lnid":"gplus"}}'  >                                <button>Google Plus</button>                                <div class="content off">                                    <ul>                                            <li class="group">                                                                                        <strong class="name">HuffPost</strong>                                                 <div class="share-button">                                                  <div class="g-plusone" data-annotation="bubble" data-size="medium" data-width="32" data-href="http://www.huffingtonpost.jp/japan"></div>                                                 </div>                                                                                                                                    </li>                                    </ul>                                </div>                            </li>                                                        							<li class="rss no-ad"  data-beacon='{"p":{"lnid":"rss"}}'  >								<button>RSS</button>								<div class="content off">									<ul>									                                    																																																					<li>		                                            [hrefx][hrefx][hrefx]												</li>																					                                    										<li>                                            <a class="more" href="/syndication/">全て RSS</a>										</li>									</ul>								</div>							</li>							<li class="phone no-ad"  data-beacon='{"p":{"lnid":"mobile"}}'  >								<button>電話番号</button>								<div class="content off">									<ul>										<li>											<a class="ios sprite" href="http://itunes.apple.com/jp/app/the-huffington-post/id306621789?mt=8" target="_blank">Available on the App Store</a>										</li>										<li>											<a class="android sprite" href="https://play.google.com/store/apps/details?id=com.huffingtonpost.android&hl=ja" target="_blank">Android App on Google Play</a>										</li>                                        <li>                                            <a class="blackberry sprite" href="http://appworld.blackberry.com/webstore/content/19143/?countrycode=JP&lang=ja" target="_blank">Get it at Blackberry App World</a>                                        </li>									</ul>								</div>							</li>						</ul>                        					</section> <!-- ads_text_sponsorship --><!-- ads_snn_234x60 --><!-- ads_most_popular_edit_promo --><!-- ads_sponsorship_2 --><div id="modulous_sponsorship_2" class="ad_spot">    <div id="dfp_sponsorship_2" style="text-align:center;"><script>googletag.cmd.push(function() {  googletag.defineSlot('/50996754/promo_article_r2', [[300,350],[300,250]], 'dfp_sponsorship_2').addService(googletag.pubads());});</script></div></div><!-- ads_lower_promo --><!-- ads_right_rail_300x100_upper --><div id="modulous_right_rail_300x100_upper" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_300x100_upper', cci: 'badge_1'}); }</script><!-- PLACEHOLDERtag badge_1 start--><script type="text/javascript">CM8ShowAd('badge_1');</script><!-- PLACEHOLDERtag badge_1 end--></div></div><!-- ads_right_rail_lower --><div id="modulous_right_rail_lower" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_lower', cci: 'Secrectangle'}); }</script><!-- PLACEHOLDERtag Secrectangle start--><script type="text/javascript">CM8ShowAd('Secrectangle');</script><!-- PLACEHOLDERtag Secrectangle end--></div></div><!-- ads_btf_300x100 --><div class="ad_lower_right_commercials_wrapper">    <!-- ads_right_rail_300x100_lower -->    <div id="modulous_right_rail_300x100_lower" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_300x100_lower', cci: 'badge_2'}); }</script><!-- PLACEHOLDERtag badge_2 start--><script type="text/javascript">CM8ShowAd('badge_2');</script><!-- PLACEHOLDERtag badge_2 end--></div></div>    <!-- ads_text_sponsorship_2 -->        <!-- ads_commercial_module -->    	<!-- ads_right_rail_300x250_lower -->    </div><script type="text/javascript">    try {        var ad_els = jQuery("#ad_right_rail_300x250_lower");        var right_rail_el = jQuery(".rail");                if ( ad_els.length && right_rail_el.length ) {            ad_els.bind("mouseover", function(){                if ( right_rail_el.hasClass("fix") ) {                    window.scrollTo(window.scrollX, window.scrollY - 1);                   }                return;            });        }    } catch (e) {            }</script> <script type="text/javascript">jQuery( document ).ready(function( $ ) {    jQuery('#ad_right_rail_flex').prepend("<span class='adflex'></span>");   jQuery('.adflex').append( __('Advertisement'));});</script><style>#ad_right_rail_flex .adflex {color: #999;text-transform: uppercase;font-size: 9px;font-family: arial;padding-bottom: 4px;display: inline-block;padding-left: 2px;}.ad_wrapper_top {background: none !important;}</style>	    </section>        </section>        </section>        <!-- END page_content -->        <!-- page_footer -->        <section class="footer">    <!-- Served from: production-mt-wfe-50-87.use1 -->    <!-- ads_leaderboard_bottom -->         <!-- visual footer -->    <footer>        <!-- Search Box -->        <div class="search"></div>        <!-- Legal and Informational Links -->        <menu class="links">			            															<ul class="group row1">													<li>								[hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]							</li>											</ul>										<ul class="group row2">													<li>								[hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx]							</li>											</ul>								                 </menu>                <!-- Legal Disclaimers -->        <div class="legal">		                                                                                          <span class="copyright">Copyright &copy;2017 The Huffington Post Japan, Ltd. All Rights Reserved.</span>                                                                                  <span class="trademark"> The Huffington Post Japan, Ltd. All Rights Reserved. 2017&copy; </span>		   	           </div>        			<div class="part-of">Part of <span class="part-of-group">HPMG News</span></div>            </footer></section>        <!-- END page_footer -->        <div id="tfm_skyscraper" class="top_right_skyscraper"></div>    </div>    <!-- ads_bottom_code_blocks -->        <!-- ads_bottom_1x1 -->    <div id="modulous_bottom_1x1" class="ad_spot">    <script src="//a.teads.tv/page/58324/tag" async="true"></script><!-- User Insight PCDF Code Start : huffingtonpost.jp --><script type="text/javascript"><!--var _uic = _uic ||{}; var _uih = _uih ||{};_uih['id'] = 51544;_uih['lg_id'] = '';_uih['fb_id'] = '';_uih['tw_id'] = '';_uih['uigr_1'] = ''; _uih['uigr_2'] = ''; _uih['uigr_3'] = ''; _uih['uigr_4'] = ''; _uih['uigr_5'] = '';_uih['uigr_6'] = ''; _uih['uigr_7'] = ''; _uih['uigr_8'] = ''; _uih['uigr_9'] = ''; _uih['uigr_10'] = '';/* DO NOT ALTER BELOW THIS LINE *//* WITH FIRST PARTY COOKIE */(function() {var bi = document.createElement('scri'+'pt');bi.type = 'text/javascript'; bi.async = true;bi.src = ('https:' == document.location.protocol ? 'https://bs' : 'http://c') + '.nakanohito.jp/b3/bi.js';var s = document.getElementsByTagName('scri'+'pt')[0];s.parentNode.insertBefore(bi, s);})();//--></script><!-- User Insight PCDF Code End : huffingtonpost.jp --><script type="text/javascript">  try {     // Make sure the adsDevilAd object exists before putting your function on it     window.adsDevilAd=window.adsDevilAd||{};     adsDevilAd.adinfo=function(n,d,w,h){       // n will be the ad number, we assume the LB ad is #1.        // NOTE: d=divName if you'd rather use that.  And w,h are width and height respectively.         if (window.adsDevilAd.ad[1].aolFormat == "Wallpaper") {           window.floater.destroy();           jQuery('#badges_v2_1').css('display','none !important');         }     };   }   catch (e) {}</script></div>    <!--modulous footer -->    <script>googletag.cmd.push(function() { googletag.display('dfp_sponsorship_2'); });</script><script>// Restrict Most Popular title to 2 lines(function() {if (!window.jQuery) { return; }var $mpt = jQuery('.mp_title');if ($mpt.length == 0) return;function numLines($elem) {  lh = parseFloat($elem.css('line-height').replace('px', ''));  return Math.round($elem.height()/lh);}for (i=0; i<10 && numLines($mpt)>2; i++) {  $mpt.css('font-size', '-=1');}})();</script><script>    (function(){        try {                        var permalink = (window.location.protocol + "//" + window.location.hostname + window.location.pathname);            var allOutbrains = document.querySelectorAll('.OUTBRAIN');            for (var w in allOutbrains){                var __tmpOb = allOutbrains[w].setAttribute && allOutbrains[w].setAttribute('data-src', permalink);            }                            var e = document.createElement('script');            e.async = 1;            e.src = "http://widgets.outbrain.com/outbrain.js";            document.body.appendChild(e);        } catch(e) { console.error(e); }    }());</script><script>googletag.cmd.push(function() { googletag.display('dfp_sponsorship'); });</script>    <!-- END modulous footer -->        <!-- Aol Universal Navbar module -->        <!-- correction -->    <style type="text/css">span.error {	 margin-top: 0;	 display: none;}  span.error.show {	display: block;}.hp_blue_lb_head_subimage {    text-align: center;}</style><div style="display: none;">	<div id="lightbox">        <div class="content">                                <div class="social_modal_content">                <div id="submissions_modal" class="sbm_modal">                    <h4 id="submission_header" class="sbm_heading hd_title">事実誤認、または誤字を知らせる場合はこちらのフォームをお使いください。</h4>                <div id="submission_notify" class="sbm_notify">メッセージをお送りください。</div>                <span class="required">* 必須</span>                <form id="submissions_form" method="post">                    <input type="hidden" name="entry_id" value="17317120">                    <div class="smb-line clearfix group">                        <span class="sbm_asterisk ar_right">*</span>                        <input class="bordered" type="text" placeholder="名前" name="submission_name" id="submission_name" value="">                        <span class="sbm_asterisk ar_right">*</span>                        <input class="bordered nomargin" type="text" placeholder="メールアドレス" name="submission_email" id="submission_email" value="">                    </div>                    <div class="smb-line clearfix">                          <span class="submission_name error"></span>                          <span class="submission_email error"></span>                    </div>                    <div class="sbm_fc">                        <span class="sbm_l"><span class="sbm_asterisk">*</span> <strong>送信内容の種類をお選びください</strong></span>                        <select name="submission_error_kind" id="submission_error_kind" class="sbm_koe sbm_r">                            <option value="">送信内容の種類を選択</option>                            <option value="Factual or typographical">事実誤認または誤字</option>                            <option value="Comment moderation problem">コメントに関する問題</option>                            <option value="Rights and permissions">著作権や記事の転載に関する問題</option>                            <option value="Other">その他</option>                        </select>                    </div>                    <div class="smb-line clearfix">                          <span class="submission_error_kind error"></span>                    </div>                    <div class="sbm_fc">                            <span class="sbm_l float_left"><span class="sbm_asterisk">*</span> 訂正の内容をお書きください</span>                            <span class="sbm_counter" id="sbm_counter">0 count</span>                        <div class="clear_first"></div>                        <textarea id="submission_body" class="basic sbm_textarea sbm_r arial_12" name="submission_body" rows="9" cols="22">訂正の内容をお書きください（1,000文字以内）</textarea>                    </div>                    <div class="smb-line clearfix">                        <span class="submission_body error"></span>                    </div>                    <div class="bottom_block clearfix">                        <p class="small smb_note">                        	<span class="sbm_asterisk">*</span> スパム防止のために、下記の画像の中の単語を入力してください                        </p>                        <!--captcha-->                        <div class="float_left recaptcha_nothad_incorrect_sol recaptcha_isnot_showing_audio" id="submission_recaptcha">                           <!-- Insert PHP captcha code here -->                        </div>                        <!-- end captcha -->                        <div class="float_left" style="padding:20px; width: 227px;">                            <input id="submission_opt_in" class="sbm_checkbox" name="submission_opt_in" type="checkbox">                                                        <label for="submission_opt_in">「今日のヘッドライン」を登録</label>                                                        <br>                            <br>                            <div class="centered" id="submissions_bottom_area">                                <input type="submit" value="送信" id="submission_submit" href="javascript:void(0);" class="button double-extra-large light-blue sbm_send">                            </div>                            <div id="submission_ajax_loader" class="submission_ajax_loader"></div>                        </div>                    </div>                </form>            </div>        </div>        <div id="submission_thanks" class="sbm_thanks">リポートありがとうございます。</div>    </div></div>    <!-- Tracking -->    <!-- Nielson Feed -->    <!-- BEGIN Nielsen Tracking --><script type="text/javascript">  HPTrack.Services.trackTo(['Nielsen']);</script><noscript>   <img src="//secure-us.imrworldwide.com/cgi-bin/m?ci=us-703240h&amp;cg=0&amp;cc=1&amp;ts=noscript" width="1" height="1" alt="" /></noscript><!-- END Nielsen Tracking -->     <!-- Webtrekk Feed -->        <!-- Xiti Tracking -->        <!-- VGWort Tracking -->            <!-- quantcast Tracking -->        <!-- Parsely Tracking -->    <!-- START Parse.ly Include: Standard --><div id="parsely-root" style="display: none">  <div id="parsely-cfg" data-parsely-site="huffingtonpost.jp"></div></div><script>(function(s, p, d) {  var h=d.location.protocol, i=p+"-"+s,      e=d.getElementById(i), r=d.getElementById(p+"-root"),      u=h==="https:"?"d1z2jf7jlzjs58.cloudfront.net"      :"static."+p+".com";  if (e) return;  e = d.createElement(s); e.id = i; e.async = true;  e.src = h+"//"+u+"/p.js"; r.appendChild(e);})("script", "parsely", document);</script><!-- END Parse.ly Include -->    <!-- END page_wrapper -->    <!-- end RUM -->    <script type="text/javascript">huff.use('conf', function(c){ c.set({"mtime":1502503615,"entry":"17317120","vertical":"japan","vertical-id":"129","vertical-name":"Japan","ads\/zone":"","topnav\/version":"2","cookie\/domain":"huffingtonpost.jp","websocket\/enabled":false,"websocket\/url":"fiji-production-ws.use1.huffpo.net","websocket\/init":false,"site_blog_id":42,"auth_secure_domain":"secure.huffingtonpost.com","auth_secure_protocol":"https","auth_method":"frame","static_secure_domain":"s-s.huffpost.com","images_secure_domain":"s-i.huffpost.com","images_secure_www_domain":"s-i.huffpost.com","social_tracking":true,"primary_vertical_id":-1,"primary_vertical_name":false,"primary_vertical_facebook_name":"HuffingtonPost","primary_vertical_twitter_name":"HuffingtonPost","current_vertical_facebook_name":"HuffingtonPost","current_vertical_twitter_name":"HuffingtonPost"}); });</script>    <!-- RUM footer -->    <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"a2134792db","applicationID":"4028938","transactionName":"YFIDbEBYVhJYURBaXFkYIk1BTVcMFkIMXFZZXhkXaVxWFUtLORxZRxgrWUJYVg==","queueTime":0,"applicationTime":274,"ttGuid":"","agentToken":"","atts":"TBUAGghCRRw=","errorBeacon":"bam.nr-data.net","agent":""}</script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=phoenix%2Feditions.js%2Clayouts%2F13.js%2Cphoenix%2Ffloating_share.js" async></script>        <script> jQuery(document).foundation(); </script></body></html>