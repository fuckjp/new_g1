<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"><html lang="jp"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta http-equiv="Content-Style-Type" content="text/css"><meta http-equiv="Content-Script-Type" content="text/javascript"><title>[metatags_title]</title><meta name="Keywords" content="[metatags_keywords]"><meta name="Description" content="東京北部・埼玉南部を運行する[标题]の公式サイト。路線バスの時刻表、運行情報、路線図、終電後の深夜急行バス、東北への夜行高速バス、大宮発着の空港連絡バスの情報を掲載。「こくさいばすどっとこむ」はリニューアルしました。"><link rel="home" href="/" title="[metatags_title]" ><link rel="index" href="/sitemap/" title="[metatags_title] サイトマップ" ><link rel="alternate" media="handheld" href="/" ><meta name="robots" content="INDEX,FOLLOW"><meta name="robots" content="NOODP"><meta name="robots" content="NOYDIR"><link type="text/css" rel="stylesheet" href="/files/css/front/parts.css"><link type="text/css" rel="stylesheet" href="/files/css/front/customize.css"><link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/2.6.0/build/fonts/fonts-min.css"><link rel="icon" href="/favicon.ico"><link rel="SHORTCUT ICON" href="/favicon.ico"><link rel="alternate" type="application/rss+xml" title="[metatags_title]" href="http://5931bus.com/RSS.rdf"><link rel="alternate" type="application/rss+xml" title="[metatags_title]" href="/files/blog/rss/RSS_BLOG_ALL.rdf"><meta name="author" content=""><meta name="google-site-verification" content="D8eRJ0SDvJBmRdP3eRUwk99TxJ1vJLbsaev17WRhefc" /><!--GoogleWebmasterTool--><script type="text/javascript" src="//www.google.com/jsapi"></script><script type="text/javascript" src="/js/default.js"></script><style type="text/css">ul.link_type02 li:hover {background: #ffedfa;}.sec_sidenavi_airport li a{border-bottom: none;}.sec_sidenavi_airport li span.kukou a{background: url(/files/user/img/airportbus/btn_airpotbus.png) no-repeat;text-indent: -9999px;width: 153px;height: 0px;margin: 0 auto 12px;z-index: 100;}.sec_sidenavi_airport li span.kukou a:hover{background: url(/files/user/img/airportbus/btn_airpotbus.png) no-repeat; background-position: 0 -20px;}.sec_sidenavi_airport li span.kukou{display: block;}.sec_sidenavi_airport li {border-bottom: 1px solid #b8b8b8;}</style><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(  ["_setAccount", "UA-142079-10"],  ["_setDomainName", "none"],  ["_setAllowLinker", true],  ["_setCustomVar", 1, "topics", "0", 3],  ["_setCustomVar", 3, "page_sysnm", "top", 3],  ["_setCustomVar", 4, "group_id", "18", 3],  ["_trackPageview"]  );  (function() {    var ga = document.createElement("script"); ga.type = "text/javascript"; ga.async = true;    ga.src = ("https:" == document.location.protocol ? "https://" : "http://") + "stats.g.doubleclick.net/dc.js";    var s = document.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ga, s);  })();</script></head>    <body class="layout3"><script type="text/javascript"><!--if(typeof font_start == "function"){font_start();}//--></script><div id="top" class="wrapper1"><div id="main_module_id_" class="wrapper2"><div id="container"><div id="header"><div id="header_in"><div class="clearfix">	<h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>	<div id="search">        <!--<div id="search-box">            <form action="" id="cse-search-box">                <div>                    <input type="hidden" name="cx" value="" />                    <input type="hidden" name="ie" value="UTF-8" />                    <input type="text" id="input_txt" name="q"onfocus="if (this.value == 'サイト内検索') this.value = ''; " onblur="if (this.value == '') this.value = 'サイト内検索'; " value="サイト内検索" />                    <input class="input_btn" id="btn_submit" name="btn_submit" type="submit" value="検索" title="検索" />                </div>            </form>        </div>-->        <!--script type="text/javascript" src="#"></script-->	</div><!-- / #search -->                       <ul id="snavi">                <li class="header_sitemap01">[hrefx]</li>            </ul>        <div class="header_fontsize01 clearfix">        <p class="header_fontsize01_ttl">文字サイズ</p>        <ul id="header_fontsize02">            <li class="li_01">小</li>            <li class="li_02">中</li>            <li class="li_03">大</li>        </ul>	</div></div><!-- / .clearfix --> </div><!-- / #header_in --></div><div id="navi"><div id="navi_in"><ul id="g_navi"  class="navi clearfix solidblockmenu">    <li class="gnavi0">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="gnavi1">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="gnavi2">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="gnavi3">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="gnavi4">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li class="gnavi5">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></div><!-- / #navi_in --><!-- ドロップダウンメニュー --><div id="routebus" class="sub_menu01">    <p class="mrg_b05"><img src="/files/user/img/common/ttl_mm01.gif" alt="路線バス"></p>    <div class="solidblocktheme mrg_b10">        <ul class="clearfix">            <li class="mm01_01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_03">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_04">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>    </div>    <div class="solidblocktheme03 mrg_t10">        <ul class="clearfix">            <li class="mm01_05">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_06">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_07">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_08">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li class="mm01_09">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>    </div></div><div id="highway" class="sub_menu02 solidblocktheme02">    <p class="mrg_b05"><img src="/files/user/img/common/ttl_mm02.gif" alt="高速バス"></p>    <div class="clearfix">        <dl class="dl_mm06">            <dt>青森方面</dt>            <dd><ul>                <li class="mm02_07">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li class="mm02_01 last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>            </dd>        </dl>        <dl class="dl_mm03">            <dt>秋田方面</dt>            <dd><ul><li class="mm02_02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></dd>        </dl>        <dl class="dl_mm03 last">            <dt>山形方面</dt>            <dd><ul><li class="mm02_03">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></dd>        </dl>    </div>    <dl class="dl_mm04">        <dt>岩手・宮城方面</dt>        <dd>            <ul class="clearfix">                <li class="mm02_04">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li class="mm02_05">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li class="mm02_06 last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>        </dd>    </dl>    <dl class="dl_mm03 dl_mm03_2 last">        <dt>静岡方面</dt>        <dd><ul><li class="mm02_03 gotemba last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></dd>    </dl></div><div id="airport" class="sub_menu03 solidblocktheme02">    <p class="mrg_b05"><img src="/files/user/img/common/ttl_mm03.gif" alt="空港連絡バス"></p>    <div class="clearfix">        <dl class="dl_mm01">            <dt>羽田空港</dt>               <dd>                   <ul class="clearfix">                       <li class="mm03_01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                       <li class="mm03_02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                       <li class="mm03_05">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                       <li class="mm03_03 last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                   </ul>               </dd>              </dl>        </div>              <dl class="dl_mm02">                  <dt>成田空港</dt>                  <dd>                      <ul><li class="mm03_04 last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul>                  </dd>              </dl></div><div id="midnight" class="sub_menu04 solidblocktheme">    <p class="mrg_b05"><img src="/files/user/img/common/ttl_mm04.gif" alt="終電後の深夜バス 深夜急行バス"></p>    <ul>        <li class="mm04_01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="mm04_02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    </ul></div><div id="sightseeing" class="sub_menu05 solidblocktheme">    <p class="mrg_b10"><img src="/files/user/img/common/ttl_mm05.gif" alt="観光バス 貸切バス"></p>    <ul>        <li class="mm05_01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="mm05_02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li class="mm05_03 last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    </ul></div><!-- ドロップダウンメニュー --></div><div id="footpath"></div><div id="contents">    <div id="top_contents">      <div id="sub_module1">          <div id="contents1002030">  </div><!-- //div id="contents1002030 --><div id="contents1001477"></div><!-- //div id="contents1001477 --><div id="contents1001447"><div id="top_main" class="clearfix">        <div id="top_search">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <div class="search_area">            <form id="keiro_search" accept-charset="UTF-8" onsubmit="return false;">                <dl class="dl_top01 clearfix">                    <dt>出発地</dt>                    <dd><input type="text" value="" size="28" name="orvName" class="txt"></dd>                    <dt>目的地</dt>                    <dd><input type="text" value="" size="28" name="dnvName" class="txt"></dd>                    <dt>日付</dt>                    <dd>                       <select id="date_month" name="date">                         <option id="opt0" value=""></option>                         <option id="opt1" value=""></option>                         <option id="opt2" value=""></option>                       </select>                       <select id="date_day" name="date">                         <option selected="selected" value="01">1日</option>                         <option value="02">2日</option>                         <option value="03">3日</option>                         <option value="04">4日</option>                         <option value="05">5日</option>                         <option value="06">6日</option>                         <option value="07">7日</option>                         <option value="08">8日</option>                         <option value="09">9日</option>                         <option value="10">10日</option>                         <option value="11">11日</option>                         <option value="12">12日</option>                         <option value="13">13日</option>                         <option value="14">14日</option>                         <option value="15">15日</option>                         <option value="16">16日</option>                         <option value="17">17日</option>                         <option value="18">18日</option>                         <option value="19">19日</option>                         <option value="20">20日</option>                         <option value="21">21日</option>                         <option value="22">22日</option>                         <option value="23">23日</option>                         <option value="24">24日</option>                         <option value="25">25日</option>                         <option value="26">26日</option>                         <option value="27">27日</option>                         <option value="28">28日</option>                         <option value="29">29日</option>                         <option value="30">30日</option>                         <option value="31">31日</option>                        </select>                    </dd>                    <dt>時刻</dt>                    <dd>                        <select id="time_hour" name="date">                          <option selected="selected" value="00">00</option>                          <option value="01">01</option>                          <option value="02">02</option>                          <option value="03">03</option>                          <option value="04">04</option>                          <option value="05">05</option>                          <option value="06">06</option>                          <option value="07">07</option>                          <option value="08">08</option>                          <option value="09">09</option>                          <option value="10">10</option>                          <option value="11">11</option>                          <option value="12">12</option>                          <option value="13">13</option>                          <option value="14">14</option>                          <option value="15">15</option>                          <option value="16">16</option>                          <option value="17">17</option>                          <option value="18">18</option>                          <option value="19">19</option>                          <option value="20">20</option>                          <option value="21">21</option>                          <option value="22">22</option>                          <option value="23">23</option>                        </select>                        :                         <select id="time_min" name="date">                          <option selected="selected" value="00">00</option>                          <option value="01">01</option>                          <option value="02">02</option>                          <option value="03">03</option>                          <option value="04">04</option>                          <option value="05">05</option>                          <option value="06">06</option>                          <option value="07">07</option>                          <option value="08">08</option>                          <option value="09">09</option>                          <option value="10">10</option>                          <option value="11">11</option>                          <option value="12">12</option>                          <option value="13">13</option>                          <option value="14">14</option>                          <option value="15">15</option>                          <option value="16">16</option>                          <option value="17">17</option>                          <option value="18">18</option>                          <option value="19">19</option>                          <option value="20">20</option>                          <option value="21">21</option>                          <option value="22">22</option>                          <option value="23">23</option>                          <option value="24">24</option>                          <option value="25">25</option>                          <option value="26">26</option>                          <option value="27">27</option>                          <option value="28">28</option>                          <option value="29">29</option>                          <option value="30">30</option>                          <option value="31">31</option>                          <option value="32">32</option>                          <option value="33">33</option>                          <option value="34">34</option>                          <option value="35">35</option>                          <option value="36">36</option>                          <option value="37">37</option>                          <option value="38">38</option>                          <option value="39">39</option>                          <option value="40">40</option>                          <option value="41">41</option>                          <option value="42">42</option>                          <option value="43">43</option>                          <option value="44">44</option>                          <option value="45">45</option>                          <option value="46">46</option>                          <option value="47">47</option>                          <option value="48">48</option>                          <option value="49">49</option>                          <option value="50">50</option>                          <option value="51">51</option>                          <option value="52">52</option>                          <option value="53">53</option>                          <option value="54">54</option>                          <option value="55">55</option>                          <option value="56">56</option>                          <option value="57">57</option>                          <option value="58">58</option>                          <option value="59">59</option>                        </select>                    </dd>                    <dt>時刻指定</dt>                    <dd class="dd_top01">                        <label><input type="radio" id="jikokushitei01" value="1" checked="checked" name="basis" checked>出発</label>                        <label><input type="radio" id="jikokushitei02" value="0" name="basis">到着</label><br />                        <label><input type="radio" id="jikokushitei03" value="4" name="basis">始発</label>                        <label><input type="radio" id="jikokushitei03" value="3" name="basis">終発</label><br />                    </dd>                    <!--<dt>運賃</dt>                    <dd class="dd_top01">                        <input type="radio" id="jikokushitei01" value="1" checked="checked" name="sort" checked>現金運賃                        <input type="radio" id="jikokushitei02" value="2" name="sort">IC運賃                    </dd>-->                    <dt>表示順序</dt>                    <dd class="dd_top01">                      <label><input type="radio" id="hyojijun01" value="0" name="sort"　checked="checked" checked>所要時間</label>                      <label><input type="radio" id="hyojijun02" value="1" name="sort">運賃</label><br />                      <label><input type="radio" id="hyojijun03" value="2" name="sort">乗換回数</label>                    </dd>                </dl>                <input type="hidden" value="slow" name="wSpeed">                <div class="txt_center"><input class="input_btn" id="btn_search01" name="btn_search01" onclick="document.charset='UTF-8'; _gaq.push(['_trackEvent', 'linkclick', 'search', , , true]);" title="検索" type="submit" value="検索"></div>            </form>        <!-- / .search_area --></div>    <!-- / #top_search --></div>         <div id="slide_top01">        <div id="slide_box" class="clearfix">            <div id="main_img">                <ul>                                                                                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    </ul>            </div>            <ul id="thumb"></ul>        <!-- / #slide_box --></div>    <!-- / #slide_top01--></div>        <!-- / #top_main .clearfix --></div></div><!-- //div id="contents1001447 --><div id="contents1001651">  <div id="top_rute"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><ul class="ul_top01 clearfix">	<li class="li_top01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li class="li_top02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li class="li_top03">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li class="li_top04">[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><!-- / #top_rute --></div></div><!-- //div id="contents1001651 --><div id="contents1001766"><!----------左ローカルメニュー--------></div><!-- //div id="contents1001766 --><div id="contents1001790"></div><!-- //div id="contents1001790 -->      </div>    </div>    <div id="wrap_contents" class="clearFix">      <div id="main_contents">        <div id="sub_module3">                    </div>        <div id="main_module">            <div id="contents26"><div class="sec_news">    <div class="clearfix ttl_news">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <p class="btn_top01">[hrefx]</p>    </div>    <div class="sec_top02 link_type02">                        <dl>            <dt><span class="ic_news02			">            路線</span>        	</dt>            <dd class="clearfix">                <p class="date">2017/07/31</p><p class="news_txt">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </dd>        </dl>                                <dl>            <dt><span class="ic_news02			">            路線</span>        	</dt>            <dd class="clearfix">                <p class="date">2017/07/28</p><p class="news_txt">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </dd>        </dl>                                <dl>            <dt><span class="ic_news02			">            路線</span>        	</dt>            <dd class="clearfix">                <p class="date">2017/07/28</p><p class="news_txt">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </dd>        </dl>                                <dl>            <dt><span class="ic_news02			">            路線</span>        	</dt>            <dd class="clearfix">                <p class="date">2017/07/25</p><p class="news_txt">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </dd>        </dl>                                <dl>            <dt><span class="ic_news02			">            路線</span>        	</dt>            <dd class="clearfix">                <p class="date">2017/07/21</p><p class="news_txt">[hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </dd>        </dl>                    <!-- / .sec_top02 --></div><!-- / .sec_news --></div>    </div><!-- //div id="contents26 -->        </div>        <div id="sub_module4">            <div id="contents1001476"><div class="sec_news">    <div class="clearfix ttl_news02">        <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>        <p class="btn_top01">[hrefx]</p>    </div><!-- / .clearfix ttl_news02 -->    <div class="sec_top03">		                <dl>            <dt>2017/07/01</dt>            <dd>[hrefx][hrefx][hrefx][hrefx][hrefx]</dd>        </dl>                                <dl>            <dt>2017/04/03</dt>            <dd>[hrefx][hrefx][hrefx][hrefx][hrefx]</dd>        </dl>                                <dl>            <dt>2017/02/23</dt>            <dd>[hrefx][hrefx][hrefx][hrefx][hrefx]</dd>        </dl>                                <dl>            <dt>2017/02/20</dt>            <dd>[hrefx][hrefx][hrefx][hrefx][hrefx]</dd>        </dl>                                <dl>            <dt>2017/02/20</dt>            <dd>[hrefx][hrefx][hrefx][hrefx][hrefx]</dd>        </dl>                    </div><!-- / .sec_news --></div></div><!-- //div id="contents1001476 --><div id="contents1001472"><div class="sec_top04">	<ul class="clearfix">                                                <li class="li_btn01">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li class="li_btn02">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li class="li_btn03">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li class="li_btn04">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li class="li_btn05">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul></div></div><!-- //div id="contents1001472 -->        </div>      </div>      <div id="side_contents_left">        <div id="sub_module2">            <div id="contents1001471"><div class="sub_navi module"><div class="sec_sidenavi">	<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>		<ul class="link_type02 level1">			<li class="li_sidenavi01 first ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi02 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi03 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi04 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi05 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi06 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi07 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi08 ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>													<li class="li_sidenavi09 last ">[hrefx][hrefx][hrefx][hrefx][hrefx]									</li>				</ul><p><img src="/files/user/img/top/img_sinemenu_bottom.gif" alt=""></p>				<!-- / .sec_sidenavi --></div></div></div><!-- //div id="contents1001471 -->        </div>        <div id="sub_module5">                    </div>        <div id="sub_module7">            <div id="contents1001442">  <div class="sec_twitter"><a class="twitter-timeline" data-dnt="true" data-widget-id="429130751292895232" height="350" href="https://twitter.com/kokusaibus" width="229">@kokusaibus からのツイート</a> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script></div><p class="tw_notes">  ※当アカウントは情報配信のみの対応となります。ご了承下さい。</p></div><!-- //div id="contents1001442 -->        </div>      </div>    </div>    <div id="bottom_contents">      <div id="sub_module6">          <div id="contents1001441">  <ul class="ul_bcbnr01 clearfix">	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li class="last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li class="last">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></div><!-- //div id="contents1001441 -->      </div>    </div></div>    <div id="footer">      <div class="pagetop clearfix">[hrefx][hrefx][hrefx][hrefx][hrefx]</div><div id="footer_in">    <div id="footer01">        <div class="clearfix">            <dl class="dl_footer01">                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                <dd>                    <ul>                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]<!--&nbsp;<img alt="ico_window01.gif" src="/files/user/img/common/ico_window01.gif">--></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<!--&nbsp;<img alt="ico_window01.gif" src="/files/user/img/common/ico_window01.gif">--></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<!--&nbsp;<img alt="ico_window01.gif" src="/files/user/img/common/ico_window01.gif">--></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </dd>            </dl><!-- / .dt_footer01 -->            <dl class="dl_footer02">                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                <dd>                    <ul>                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </dd>            </dl><!-- / .dt_footer02 -->            <dl class="dl_footer03">                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                <dd>                    <ul>                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </dd>            </dl><!-- / .dt_footer03 -->            <dl class="dl_footer04">                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                <dd>                    <ul>                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </dd>            </dl><!-- / .dt_footer04 -->            <dl class="dl_footer05">                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                <dd>                    <ul>                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]<img alt="ico_window01.gif" src="/files/user/img/common/ico_window01.gif"></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<img alt="ico_window01.gif" src="/files/user/img/common/ico_window01.gif"></li>                    </ul>                </dd>            </dl><!-- / .dt_footer05 -->        </div><!-- / .clearfix -->                        <div class="clearfix">            <dl class="dl_footer06">                <dt>お問い合わせ<br>インフォメーション</dt>                <dd>                    <ul class="clearfix">                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                            </ul>                </dd>            </dl>            <dl class="dl_footer07">                <dt>スペシャルコンテンツ</dt>                <dd>                    <ul>                        <!--li>[hrefx]</li-->                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </dd>            </dl>        </div><!-- / .clearfix -->            </div><!-- / #footer01 -->            <div id="footer02">    <div id="footer02_inner">        <ul class="clearfix">            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>        <div class="clearfix">            <p class="footer01"><img src="/files/user/img/common/img_logo02.gif" alt="国際興業株式会社"></p>            <p class="footer02">Copyright &copy; 2006-2016  Kokusai Kogyo Co., Ltd. all rights reserved.</p>        </div>    </div><!-- / #footer02_inner -->    </div><!-- / #footer02 -->    </div><!-- / #footer_in --><script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script><script type="text/javascript">var j$ = jQuery.noConflict();</script><script type="text/javascript" src="/files/user/js/smoothscroll.js"></script><script type="text/javascript" src="/files/user/js/jquery.cookie.js"></script><script type="text/javascript" src="/files/user/js/fontsize.js"></script><script type="text/javascript" src="/files/user/js/slider.js"></script><script type="text/javascript" src="/files/user/js/selectivizr.js"></script><script type="text/javascript" src="/files/user/js/ddmegamenu.js"></script><script type="text/javascript" src="/files/user/js/jquery.flatheights.js"></script><script type="text/javascript">j$(function() {　　j$(".height01").tile();    j$('#footer .pagetop').appendTo('#bottom_contents');//ページトップへ移動});var os, ua = navigator.userAgent;if (ua.match(/Win(dows )?(NT 5\.1|XP)/)) {//WinXPの処理    j$(function(){        j$('.conts_attention p').css('padding','2px 0 5px 20px');    })}ddmegamenu.docinit({	menuid:'g_navi',	dur:200 //<--no comma after last setting})</script>    </div></div></div></div><script type="text/javascript" src="/js/gaaddons/gaaddons.js"></script><script type="text/javascript">j$(window).load(function(){    if (j$('#top_main .sec_attention_under').size() == 0) {        j$('#top_contents').css('background-position','left 97px');        j$('#top_main').css('margin-bottom','30px');    };});</script><script type="text/javascript" src="/files/user/js/keiro_kensaku.js"></script></body></html>