<!DOCTYPE html><html lang="jp" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema/"><head><meta http-equiv="content-type" content="text/html; charset=utf-8"/><link rel='stylesheet' type='text/css' href='https://static.tacdn.com/css2/long_lived_global_legacy-v22157890343b.css' data-rup='long_lived_global_legacy'/><link rel="icon" id="favicon" href="https://static.tacdn.com/favicon.ico" type="image/x-icon"/><link rel="preload" href="https://static.tacdn.com/css2/webfonts/TripAdvisor/TripAdvisor_Regular.woff2?v003.230" as="font" type="font/woff2" crossorigin><link rel="mask-icon" sizes="any" href="https://static.tacdn.com/img2/icons/ta_square.svg" color="#00a680"/><script type='text/javascript' data-rup='global_error'>(function(){var h=false;var i=[];var o=false;var e,k,a,n;function c(v,t,q,s,r,p){var u={error_script:t,line:q,column:s,ready_state:document.readyState};if(!h){i.push({msg:v||"",error:r,evt:p,data:u});return !window.IS_DEBUG}else{if(require.defined("ta/util/Error")){require("ta/util/Error").record(r,"error post load:: "+v,p,u,"ERROR",{isglobal:true})}}}function g(){require(["ta/util/Error"],function p(q){while(i.length){var r=i.shift();if(!r.msg.match(/(^|[^\w.])ta .*defin/)){q.record(r.error,"window.onerror:: "+r.msg,r.evt,r.data,"ERROR",{isglobal:true})}}h=true})}function j(){a=null;o=false;e=k=null}function l(w,t,q,s,r,p){var v=p&&p.target;if(!o){e=r;o=true;k=v;try{n=arguments.callee}catch(u){}}else{if(!e||(r&&r.stack)){e=r}if(!n){try{n=arguments.callee}catch(u){}}if(a){v=a}else{if(!v||(k&&v==window)){v=k}}c(w,t,q,s,e,{target:v,callee:n});j()}}function f(p){p=p||window.event;l(p.message,p.filename,p.lineno,p.colno,p.error||p,p)}function d(p){p=p||window.event;a=p.target||p.srcElement;if(b){clearTimeout(b)}b=setTimeout(function(){b=0;a=null},1)}var b;window.onerror=function m(t,s,p,r,q){l(t,s,p,r,q,window.event);return !window.IS_DEBUG};if(window.addEventListener){window.addEventListener("error",f,false);window.addEventListener("click",d,true);window.addEventListener("load",g)}else{if(window.attachEvent){window.attachEvent("onerror",f);document.attachEvent("onmouseup",d);window.attachEvent("onload",g)}}})();(function(){var a,c=0,d,b=5000;window.uiOverlay=function(e){if(document.readyState in {complete:1,loaded:1}){require(["ta/util/Error"],function(f){f.record("uiOverlay is missing from the rollup","",e)})}else{if(document.addEventListener){a=[].slice.call(arguments);c=(new Date()).getTime();if(!d){d=true;document.addEventListener("DOMContentLoaded",function(){if(Date.now()-c<b){uiOverlay.apply(null,a)}},false)}}}}})();</script><script>(function(w){var q={d:[],r:[],c:[],t:[],v:[]};var r = w.require = function() {q.r.push(arguments);};r.config = function() {q.c.push(arguments);};r.defined = r.specified = function() {return false;};r.taConfig = function() {q.t.push(arguments);};r.taVer = function(v) {q.v.push(v);};r.isQ=true;w.getRequireJSQueue = function() {return q;};})(window);</script><script type='text/javascript' data-rup='amdearly'>(function(f){if(f&&f.requireCallLast){return}var a;var c;var i=false;function b(k){return typeof require==="function"&&require.defined&&require.defined(k)}function h(m,l,k){if(l){m[l].apply(m,k)}else{if(typeof(m)==="function"){m.apply(m,k)}}}var g=f.requireCallLast=function(l,m){a=null;var k=[].slice.call(arguments,2);if(b(l)){h(require(l),m,k)}else{if(b("trjs")){require(["trjs!"+l],function(n){h(n,m,k)})}else{if(!i){c=+new Date();a=[].slice.call(arguments)}}}};var j=f.requireCallIfReady=function(k){b(k)&&g.apply(f,arguments)};var e=function(k,n,o,m){var l=j;if(o&&(o.type==="click"||o.type==="submit")){l=g;o.preventDefault&&o.preventDefault()}m.unshift(n);m.unshift(k);l.apply(f,m);return false};f.remoteModule=function(k,l){return e("remoteModule",null,l,[].slice.call(arguments))};f.requireEvCall=function(n,m,l,k){n=n.match(/^((?:[^\/]+\/)*[^\/\.]+)\.([^\/]*)?$/);return e(n[1],n[2],m,[].slice.call(arguments,1))};f.widgetEvCall=function(n,m,l,k){return e("ta/prwidgets","call",m,[].slice.call(arguments))};f.placementEvCall=function(o,n,m,l,k){return e("ta/p13n/placements","evCall",m,[].slice.call(arguments))};function d(){i=true;if(require.isQ){throw ("Fatal error - this page does not have require")}if(f.getRequireJSQueue){var k=f.getRequireJSQueue();while(k.d.length>0){define.apply(f,k.d.shift())}while(k.r.length>0){require.apply(f,k.r.shift())}f.getRequireJSQueue=null}if(a&&(+new Date()-c<5000)){g.apply(f,a)}}if(document.addEventListener){document.addEventListener("DOMContentLoaded",d)}else{if(f.addEventListener){f.addEventListener("load",d)}else{if(f.attachEvent){f.attachEvent("onload",d)}}}})(window);</script><meta http-equiv="imagetoolbar" content="no"/><title>[metatags_title]</title><meta http-equiv="pragma" content="no-cache"/><meta http-equiv="cache-control" content="no-cache,must-revalidate"/><meta http-equiv="expires" content="0"/><meta property="og:title" content="[metatags_title]"/><meta property="og:description" content="[metatags_description]"/><meta property="og:image" content="https://media-cdn.tripadvisor.com/media/photo-s/08/49/f2/50/caption.jpg"/><meta property="og:image:width" content="338"/><meta property="og:image:height" content="450"/><meta name="keywords" content="[metatags_keywords]"/><meta name="description" content="[metatags_description]"/><link rel="alternate" hreflang="en" href="https://www.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-GB" href="https://www.tripadvisor.co.uk/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-CA" href="https://www.tripadvisor.ca/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="fr-CA" href="https://fr.tripadvisor.ca/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="it" href="https://www.tripadvisor.it/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es" href="https://www.tripadvisor.es/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="de" href="https://www.tripadvisor.de/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="fr" href="https://www.tripadvisor.fr/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="ja" href="https://www.tripadvisor.jp/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="zh-Hans" href="https://cn.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-IN" href="https://www.tripadvisor.in/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="sv" href="https://www.tripadvisor.se/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="nl" href="https://www.tripadvisor.nl/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="pt" href="https://www.tripadvisor.com.br/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="tr" href="https://www.tripadvisor.com.tr/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="da" href="https://www.tripadvisor.dk/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-MX" href="https://www.tripadvisor.com.mx/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-IE" href="https://www.tripadvisor.ie/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="ar" href="https://ar.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="ar-EG" href="https://www.tripadvisor.com.eg/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="cs" href="https://www.tripadvisor.cz/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="de-AT" href="https://www.tripadvisor.at/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="el" href="https://www.tripadvisor.com.gr/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-AU" href="https://www.tripadvisor.com.au/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-MY" href="https://www.tripadvisor.com.my/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-NZ" href="https://www.tripadvisor.co.nz/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-PH" href="https://www.tripadvisor.com.ph/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-SG" href="https://www.tripadvisor.com.sg/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-ZA" href="https://www.tripadvisor.co.za/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-AR" href="https://www.tripadvisor.com.ar/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-CL" href="https://www.tripadvisor.cl/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-CO" href="https://www.tripadvisor.co/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-PE" href="https://www.tripadvisor.com.pe/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="es-VE" href="https://www.tripadvisor.com.ve/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="fi" href="https://www.tripadvisor.fi/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="hu" href="https://www.tripadvisor.co.hu/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="id" href="https://www.tripadvisor.co.id/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="he" href="https://www.tripadvisor.co.il/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="ko" href="https://www.tripadvisor.co.kr/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="nb" href="https://no.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="pl" href="https://pl.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="pt-PT" href="https://www.tripadvisor.pt/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="ru" href="https://www.tripadvisor.ru/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="sk" href="https://www.tripadvisor.sk/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="sr" href="https://www.tripadvisor.rs/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="th" href="https://th.tripadvisor.com/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="vi" href="https://www.tripadvisor.com.vn/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="zh-Hant" href="https://www.tripadvisor.com.tw/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="de-CH" href="https://www.tripadvisor.ch/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="fr-CH" href="https://fr.tripadvisor.ch/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="it-CH" href="https://it.tripadvisor.ch/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="en-HK" href="https://en.tripadvisor.com.hk/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="fr-BE" href="https://fr.tripadvisor.be/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="nl-BE" href="https://www.tripadvisor.be/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><link rel="alternate" hreflang="zh-hk" href="https://www.tripadvisor.com.hk/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"/><meta property="al:ios:app_name" content="TripAdvisor"><meta property="al:ios:app_store_id" content="284876795"><meta property="twitter:app:id:ipad" name="twitter:app:id:ipad" content="284876795"><meta property="twitter:app:id:iphone" name="twitter:app:id:iphone" content="284876795"><meta property="al:ios:url" content="tripadvisor://www.tripadvisor.it/LocationPhotoDirectLink-g1021220-d7570638-i139063888-m33762-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"><meta property="twitter:app:url:ipad" name="twitter:app:url:ipad" content="tripadvisor://www.tripadvisor.it/LocationPhotoDirectLink-g1021220-d7570638-i139063888-m33762-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"><meta property="twitter:app:url:iphone" name="twitter:app:url:iphone" content="tripadvisor://www.tripadvisor.it/LocationPhotoDirectLink-g1021220-d7570638-i139063888-m33762-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"><!--trkP:bot_detection--><!-- PLACEMENT bot_detection --><script type="text/javascript">var taEarlyRoyBattyStatus = 0;var taSecureToken = "TNI1625!ALBiI+QpE7W2FvB7ktak0z7xS7BIEtkwYxJm8FtDf4GeH8Qx1RXNxzzaOOjWrwg1dk4MHATbHedbzTIb4GYhqYiWUuLglHuJGp3x7ja9KxaXzKE+iu7E63iFQHVSlFOUBhNjxitoZWUxSdaqpfC8GEySdoGqMKhBgoKpT5R03JLW";(function() {var cookieDomain = ".tripadvisor.it";var sessionPartition = "-1";try {if (navigator.userAgent.indexOf('MSIE 10.0') < 0) {var val = taSecureToken+",1";val = encodeURIComponent(val);if (cookieDomain) {val += "; domain=" + cookieDomain;}document.cookie = "roybatty="+val+"; path=/";var url="/CookiePingback?early=true";var xhr = null;try {xhr = new XMLHttpRequest();} catch (e1) {try {xhr = new ActiveXObject('MSXML2.XMLHTTP');} catch (e2) {try {xhr = new ActiveXObject('Microsoft.XMLHTTP');} catch (e3) {}}}if (xhr != null) {var seth = function(name, val) {try {xhr.setRequestHeader(name, val)}catch(e){}};xhr.open("POST", url, true);seth('Content-type', 'application/x-www-form-urlencoded; charset=utf-8');seth('X-Requested-With', 'XMLHttpRequest');seth('Accept', 'text/javascript, text/html, application/xml, text/xml, */*');xhr.send('');taEarlyRoyBattyStatus = 2;}} } catch(err) {}})();</script><!--etk--><link rel='stylesheet' type='text/css' media='screen, print' href='https://static.tacdn.com/css2/lpdl_2015-it-v2474459279b.css' data-rup='lpdl_2015'/><style type="text/css"><!--DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_info .blDetails { line-height: 1em; overflow: visible; margin: 2px 0 2px; height: auto; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_info .odcHotel .notLast { margin-right: 15px; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_info .icnLink { margin-top:0px; margin-right:5px; overflow:hidden;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_info .icnLink.grayWeb { margin-top:0px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_info .icnLink.grayEmail { margin-top:0px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 { position:relative; z-index:4; padding:24px 0 16px; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .taLnk:hover { text-decoration:underline;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .header_container { position:relative; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .full_width { position:relative; margin:0 auto;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015.hr_heading .full_width { width:983px; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015.attractions_heading .full_width { box-sizing: border-box; width: 983px; clear: both; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .heading_name_wrapper { display:inline-block; max-width:870px; overflow:hidden;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .heading_name { display:inline-block; width:100%; font:normal 1.5em Arial,Tahoma,"Bitstream Vera Sans",sans-serif; color: #006699; word-wrap:break-word; float:left; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .heading_height { position:absolute; top:0; width:0; height:31px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .claimListing { font-size: 1.3em; font-weight: normal; float:right; margin: 10px 5px 0px 8px; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .heading_ratings { height:100%; overflow:hidden; margin-top:6px; line-height:20px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015.hr_heading .heading_ratings { font-size:1.333em;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .heading_ratings .slim_ranking { color: #00a680; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .slim_ranking a { color:#00a680;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .slim_ranking a:hover { text-decoration:underline;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .with_alt_title { font-size:2em;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .with_alt_title .heading_height { height:52px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .altHead { width:100%; font-size:.68em; clear:left; float:left;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .coeBadgeDiv { display:block; color:#00a680;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .coeBadgeDiv .text { color: #00a680; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .glBadgeDiv { color:#00a680;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .glBadgeDiv .greenLeaderLabelLnk { margin-left:4px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .glBadgeDiv .greenLeaderImg { margin-top:1px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .separator { position:relative; margin:0 23px 4px 0; float:left;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .separator:after { position:absolute; top:0; right:-13px; width:0; height:20px; border-right:1px solid #ddd; content:"";}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .separator:last-child:after { display:none;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .star { margin-top:2px; float:left;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .star.starHover { cursor:pointer;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .popRanking { overflow:visible; margin-bottom:0; padding-left:1px; color:#599442;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .popRanking a { color:#00a680;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .popRanking a:hover { text-decoration:underline;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .header_address .icon { display:inline-block; margin:0 2px 0 0; vertical-align:text-top;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .header_contact_info { margin-top:2px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_item { position:relative; margin-right:21px; height:18px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .contact_item:after { position:absolute; top:0; right:-11px; width:0; height:20px; border-right:1px solid #ddd; content:"";}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .blCouponPromo { margin-top:6px; overflow:visible;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details { height:100%; overflow:hidden;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details .blDetails { display:inline; margin-top:2px; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details .icnLink { margin-top:0px; margin-right:5px; overflow:hidden;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details .icnLink .grayWeb { margin-top:0px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details .icnLink .grayEmail { margin-top:0px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .bl_details .icnLink.sprite-grayMapPinSmall { margin-right: 2px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .icnSO { margin-right:5px; overflow:hidden; float:left;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .amenFloat { display:inline-block; white-space:nowrap;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .amenFloat .icnWeb { overflow:hidden; margin-top:2px; margin-right:5px; margin-right:8px !ie;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .amenFloat .amenities { display:inline; vertical-align:baseline;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .specialLabel { padding-right:12px; font-weight:bold; cursor:pointer; float:left;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .icnAnouncementRewrite { margin:-3px 6px 0 0; float:left;}DIV.ppr_rup.ppr_priv_poi_details .tabs_seperator { height:1px; background-color:#e3e3e3; line-height:1px;}DIV.ppr_rup.ppr_priv_poi_details .starAttributionText { max-width:400px; margin-right:10px;}DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .rblock .wrpButton { padding: 50px 10px 0 0; }DIV.ppr_rup.ppr_priv_poi_details .detail_2015 .report_inaccurate { position: relative; top: -5px; left: 20px; }--></style><style type="text/css"><!--DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .photos_lb_update_links{display: none;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based #META_SBS_TRACKING_DUMMY {display: none;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .xthrough_bad {max-width: 95px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .xthrough_bad span{font-weight: bold;color: rgb(200, 10, 10);position: relative;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .xthrough_bad span:after {border-top: 1px solid rgb(200, 10, 10);content: "";position: absolute;left: 0;right: 0;top: 55%;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .xthrough_bad .asterisk:after {content:"";border-top: none;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .xthrough_bad.small {font-size: 15px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ibFlyoutTransparency .offer.premium,DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ibFlyoutTransparency .textLinks {opacity: 0.2;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ibFlyoutTransparency .offer.premium:hover,DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ibFlyoutTransparency .textLinks:hover {opacity: 1;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .featured_chevron .bc_text_content {border-top: 1px dotted #ccc;padding-top: 6px;margin-top: 12px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .featured_chevron_text {-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;display: inline-block;text-align: center;padding: 16px 26px 12px;font-size: 18px;color: #00a680;}#HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium .providerLogo span.offerClient {font-size: 10px;color: #2C2C2C;margin-top: -2px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .textLink.visited {opacity: 0.4;filter: alpha(opacity=40);zoom: 1;}.ui_tooltip DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based.ui_options .textLink {display: block;float: none;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box {margin: 15px 0 20px 0;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_header {font-size: 18px;font-style: italic;font-family: Georgia,"Times New Roman","Century Schoolbook L",serif;color: #4A4A4A;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price {overflow: hidden;margin: 10px 0;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price .price {font-size: 20px;display: inline-block;max-width: 120px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price.long_price .price {font-size: 16px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .strikethrough_price {color: rgb(200, 10, 10);text-decoration: line-through;margin-right: 12px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_price {font-weight: bold;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box .taxes_and_fees {margin-top: 5px;color: #4A4A4A;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box .taxes_and_fees .amount {margin-right: 5px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_button {width: 310px;font-size: 16px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .partner_block {margin-top: 10px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .partnership_text {font-style: italic;font-family: Georgia,"Times New Roman","Century Schoolbook L",serif;margin-right: 5px;color: #4A4A4A;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .partnership_img {max-height: 48px;max-width: 84px;vertical-align: middle;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .partnership_name {font-weight: bold;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .disclaimerFullLine {overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width: 304px; /* Width of parent container. Firefox doesn't work with width: 100% */}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .arrow_text {width: 7px;margin-left: 3px;vertical-align: middle;background: transparent;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.premium .priceBlock .outArrow {background: url("/img2/hotels/arrow-button.svg");position: absolute;height: 10px;width: 10px;right: 10px;top: 25px;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium.bookableOffer .providerLogo {height: 54px;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium.bookableOffer .book_direct .partnership {margin-top: 30px;line-height: normal;font-size: 11px;text-align: left;display: flex;align-items: center;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium.bookableOffer .book_direct .partnership .provider_img_text {font: italic normal 10px/12px Georgia, "Times New Roman", "Century Schoolbook L", serif;color: #666;line-height: normal;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium .providerLogo img.provider_img {width: 54px;height: auto;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium .priceBlock {padding-top: 0;padding-bottom: 0;line-height: 56px;height: 100%;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium .priceBlock .checkSite{padding-top: 8px; /* Fix for the "Check Site" text in case HAC returned nothing */}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.premium .viewDealText {width: 100%;line-height: normal;display: inline-block;vertical-align: middle;}.flat_buttons.sitewide .overlay DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.premium .priceBlock.arrow_in_link:not(.lte_ie8):after,.flat_buttons #BODYCON DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.premium .priceBlock.arrow_in_link:not(.lte_ie8):after {content: normal;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .standardChevron {display: inline-block;width: 10px;height: 100%;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .standardChevron::after {position: absolute;content: '';top: 50%;right: 13px;width: 6px;height: 6px;margin-top: -4px;border-width: 0 2px 2px 0;border-style: solid;-ms-transform: rotate(-45deg);-webkit-transform: rotate(-45deg);transform: rotate(-45deg);border-color: #000;}.rtl DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .standardChevron::after {border-width: 0 2px 2px 0;-ms-transform: rotate(135deg);-webkit-transform: rotate(135deg);transform: rotate(135deg);}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium .booking_chevron.arrow_in_link {padding-right: 5px;width: 78px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .price.taLnk .comparisonOffer {color:rgb(200,10,10);}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ui_ribbon.lowest_price {line-height: 5px;left: -26px;top: -7px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .premium_offers_area.strikeThroughPresent .offer.premium {height: 60px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price.with_logo .providerLogo {height: 50px;float: left;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price.with_logo .providerLogo img {height: inherit;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_price.with_logo .priceWrap {line-height: 50px;float: right;text-align: right;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .ib_box_header.long_cta {font-size: 17px;width: 250px;margin: 0 auto;}.new_meta_chevron #HR_HACKATHON_CONTENT DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .viewDealChevrons .offer.premium.lowestPriceFlagPresent .providerLogo .ta_with_partner {vertical-align: bottom;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.unclickable {cursor: default;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .longLowestPriceText .ui_ribbon.lowest_price {top: -12px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .showFreeCancellation.ib_box_price {margin-bottom: 0;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .freeCancellation {color: #00a680;font-weight: bold;margin-bottom: 10px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .freeCancellation .cancelUntil {display: inline-block;font-weight: normal;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .premium_offers_area .offer.showFreeCancellation,DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .premium_offers_area.strikeThroughPresent .offer.showFreeCancellation {height: 76px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.showFreeCancellation .viewDealText {font-size: 15px;margin-top: 18px;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .offer.showFreeCancellation .freeCancellation {position: absolute;line-height: initial;top: 44px;left: 18px;width: 180px;text-align: left;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .green_icons {color: #00a680;font-size: 2em;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .external-link-no-box.internal-link {opacity: 0; /* hide arrow, but keep price lined up with other text links */}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .prominentDisclaimer {color: #333;}DIV.prw_rup.prw_meta_hr_mini_meta_pricing_based .no_avail_msg{font-size: 20px;padding: 50px 10px;text-align: center;}--></style><style type="text/css"><!--DIV.prw_rup.prw_meta_view_all_text_links {min-width: 160px;}DIV.prw_rup.prw_meta_view_all_text_links .textLink {display: block;position: relative;float: none;width: 100%;height: 1.5em;line-height: 1.5em;cursor: pointer;}DIV.prw_rup.prw_meta_view_all_text_links .textLink:before {content: '';position: absolute;width: 100%;border-bottom: 1px dotted #006699;bottom: 5px;}DIV.prw_rup.prw_meta_view_all_text_links .textLink .providerName {position: absolute;height: 1.5em;max-width: 100%;line-height: 1.5em;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;float: left !ie;margin-right: 30px;padding-right: 3px;background: #ffffff;}DIV.prw_rup.prw_meta_view_all_text_links .textLink .price {float: right;font-weight: bold;position: relative;padding-left: 3px;background: #ffffff;z-index: 1;}DIV.prw_rup.prw_meta_view_all_text_links .textLink .prohibited {position: relative;background: #ffffff;padding-left: 3px;z-index: 1;}DIV.prw_rup.prw_meta_view_all_text_links .textLink .loading {padding: 6px 0 4px 3px;position: relative;background: #ffffff;}DIV.prw_rup.prw_meta_view_all_text_links .unclickable {cursor: default;}DIV.prw_rup.prw_meta_view_all_text_links .unclickable:before {border-bottom-color: #4a4a4a;}DIV.prw_rup.prw_meta_view_all_text_links .taLnk {color: #006699;}DIV.prw_rup.prw_meta_view_all_text_links .taLnk.comparisonOffer {color: #d80007;}DIV.prw_rup.prw_meta_view_all_text_links .external-link-no-box.internal-link {opacity: 0;}DIV.prw_rup.prw_meta_view_all_text_links .textLink:hover .taLnk {text-decoration: underline;}--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .details_row1 { margin: 20px 0 10px 20px; font-size: 1.167em; color: #4a4a4a; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .details_row1 .separator   { position: relative; margin: 0 23px 4px 0; float: left;  }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .details_row1 .separator:after { position:absolute; top:0; right:-13px; width:0; height:20px; border-right:1px solid #ddd; content:""; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .details_row2 { position: relative; height: 85px; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .details_row2 .dining { padding: 10px 5px 0 20px; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .top_separator { padding-bottom: 10px; margin-bottom: 10px; border-top: 1px solid #F4F3F0; overflow: hidden; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta div.rest_reservation { padding-top: 0; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta div.timeSlots { left: -163px; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta div.timeslots_bar { margin-left: 8px; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_meta .rest_reservation .update_table { margin-left: 0; margin-top: 4px; }DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_availability_search .ui_icon {font-size: 16px;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .restaurant_availability_search .ui_picker {font-size: 14px;padding-right: 0;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .ui_picker .caret-down {display: none;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .resv_header {margin: 20px 0;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .search {margin: 10px 0;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .inputs {margin-bottom: 10px;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_reservation_outer_container{margin: auto;display: table;width: 100%;position: absolute;top: 0;bottom: 0;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_reservation_inner_container{display:table-cell;vertical-align: middle;text-align: center;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_reservation_container_cell{vertical-align: middle;text-align: center;width: 280px;margin-left: auto;margin-right: auto;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_reservation_label{font-size: 18px;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_reservation_button{width: 100%;margin: 16px 0px;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_logo{display: inline-block;float: right;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_logo_ja{width: 55px;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_info_link_container{display: inline-block;font-size: 16px;margin: 0 auto;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_logo_label{float: right;}DIV.ppr_rup.ppr_priv_restaurant_simple_meta .gnavi_logo_line{overflow: hidden;margin-top: 10px;line-height: 17px;}--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .photoImg { position:relative; width:672px; height:528px; overflow:hidden; background-color:#2c2c2c; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg { margin: 1px 0 0 0; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumblpdl { position:relative; float:left; width:95px; height:90px; margin-left: 1px; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumblpdl:hover { opacity: 0.5; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumblpdl .playOverlay { position: absolute; top: 30px; left: 32px; width: 29px; height: 29px; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg .hoverHighlight { width: 48px; height: 90px; position:relative; float:left; overflow: hidden; text-align: center; background: #00a680; box-sizing: border-box;}DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg .right { width: 47px; margin-left: 1px; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg .arrow { width: 12px; height: 12px; content: ""; border-style: solid; -webkit-transform: rotate(-45deg); -ms-transform: rotate(-45deg); transform: rotate(-45deg); border-color: #fff; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg .left .arrow { border-width: 2px 0 0 2px; margin: 38px 0 0 20px; }DIV.ppr_rup.ppr_priv_lpdl_photo_carousel .viewer .thumbImg .right .arrow { border-width: 0 2px 2px 0; margin: 38px 0 0 12px; }--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_attraction_simple_meta .detail_section { padding: 20px 0 10px 20px; }DIV.ppr_rup.ppr_priv_attraction_simple_meta .detail_section .details_wrapper .detail { padding-top: 20px }DIV.ppr_rup.ppr_priv_attraction_simple_meta .detail_section .detailOverlayHide {  display: none; }DIV.ppr_rup.ppr_priv_attraction_simple_meta .multi_tour_module { margin: 30px 10px 40px 10px; }DIV.ppr_rup.ppr_priv_attraction_simple_meta .multi_tour_module .provider_link { padding: 0 10px 10px 0; }DIV.ppr_rup.ppr_priv_attraction_simple_meta .multi_tour_module .dotBullets li { margin: 4px 0; padding-left: 11px; background: url("/img2/bullets/dotBullet_oliveDrab.gif") 0 .45em no-repeat; line-height: 140%; }--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_document_cookie_banner {background-color: #ffffff;color: #4a4a4a;font-size: 12px;line-height: 16px;text-align: center;padding: 8px;position: absolute;left: 0;top: -3000px;}DIV.ppr_rup.ppr_priv_document_cookie_banner.showing {position: relative;top: 0;}DIV.ppr_rup.ppr_priv_document_cookie_banner.showing.smart-banner-top {top: 80px;}DIV.ppr_rup.ppr_priv_document_cookie_banner p {margin: 0;}DIV.ppr_rup.ppr_priv_document_cookie_banner a,DIV.ppr_rup.ppr_priv_document_cookie_banner span {color: #006699;cursor: pointer;}--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner {position: relative;height: 65px;margin: 3px 0 3px 0;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .message {position: absolute;top: -2px;left: 196px;color: #fff;text-align: center;padding: 24px 0 0 0;font-size: 1.4em;text-shadow: 1px 1px 2px black;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .icon {position: relative;top: 20px;left: 80px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .icon img {height: 24px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .btn {position: absolute;top: 14px;right: 10px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .install_btn {min-width: 156px;box-shadow: 1px 1px 2px black;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .install_btn.chrome {padding-left: 56px;background-image: url("/img2/crm/chrome_dt/chrome-dt-icon.png");background-position: 10px;background-size: 40px 40px;background-repeat: no-repeat;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .install_btn.chevron {padding-right: 25px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .install_btn.chevron:after {right: 12px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .install_btn .btn-text {font-size: 1em;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner .ui_ribbon {top: 8px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .ui_ribbon {font-size: 11px;padding: 3px 8px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .icon {top: 24px;left: 42px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .icon img {height: 20px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .message {font-size: 1.25em;top: 1px;left: 140px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .message2 {left: 129px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .icon.message2 {left: 35px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .btn {top: 18px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .install_btn {padding: 4px 12px 4px 6px;min-width: 114px;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.lpdl_2012 .install_btn .btn-text {font-size: 0.9em;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.v1 {background: #00a680;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.v1 .ui_ribbon {background: #ffd671;color: #000;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.v2 {background: #00a680;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.v3 {background: #00a680;}DIV.ppr_rup.ppr_priv_lpdl_ce_promo_banner .ce_promo_photo_banner.v3 .ui_ribbon {background: #ffd671;color: #000;}--></style><style type="text/css"><!--DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .title { width: 295px; font:normal 400 1.5em Arial,Tahoma,"Bitstream Vera Sans",sans-serif; color:#2c2c2c; text-align: center; padding: 45px 0px 15px 0px; border-bottom: 1px solid #e6e6e6; }DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .reviews { padding: 10px 0px 20px 10px; }DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .reviews .one_review { padding: 10px 0 10px 0; }DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .reviews .snippet { font: italic 1.2em Georgia, Tahoma, "Bitstream Vera Sans", sans-serif; }DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .reviews .date { font-family: Arial; font-style: normal; color: #666666; }DIV.ppr_rup.ppr_priv_other_recent_reviews .recent_reviews .total { padding: 0 0 0 10px; }--></style><style type="text/css">body{}</style></head><body id="BODY_BLOCK_JQUERY_REFLOW" class="ltr domn_it lang_it globalNav2011_reset rebrand_2017 flat_buttons sitewide xo_pin_user_review_to_top track_back" data-scroll='OVERVIEW' data-navArea-metaType="QC_Meta_Mini" data-navArea-placement="Unknown"><div id="fb-root"></div><!--trkP:sync_rt_cookie--><!-- PLACEMENT sync_rt_cookie --><DIV ID="taplc_sync_rt_cookie_0" class="ppr_rup ppr_priv_sync_rt_cookie" data-placement-name="sync_rt_cookie"><img class="hidden" src="https://www.tamgrt.com/RT?id=987654321&amp;event=PAGEVIEW&amp;pixel_version=1"/><script type="text/javascript">(function(window, document) {"use strict";var SYNC_AGE = 1000*60*30; var WHITELIST_AGE = 1000*60*60*24; var HTTP_COOKIE = "TART";var SYNC_COOKIE = "SRT";var WHITELIST_COOKIE = "WLRedir";var MSG_PREFIX = "COOKIESYNC:";if (_hasCookie(HTTP_COOKIE)) { return; } var syncFrame = document.createElement('iframe');function _on(element, event, callback) {var legacy = !('addEventListener' in document),   listen = legacy ? 'attachEvent' : 'addEventListener';if (legacy) { event = 'on' + event; }element[listen](event, callback);}function _off(element, event, callback) {var legacy = !('addEventListener' in document),   detach = legacy ? 'detachEvent' : 'removeEventListener';if (legacy) { event = 'on' + event; }element[detach](event, callback);}function _setCookie(name, value, age) {document.cookie = name + '=' + value +';domain=' + window.location.hostname +';path=/' +';expires=' + new Date(new Date().getTime() + age).toUTCString();}function _hasCookie(name) {return !!document.cookie.match(name + '=[^;]+');}function handleMessage(e) {if (!syncFrame || !e || !e.data || !e.data.indexOf || e.data.indexOf(MSG_PREFIX) !== 0) { return; }var cookieValue = e.data.substring(MSG_PREFIX.length);if (cookieValue) {_setCookie(SYNC_COOKIE, cookieValue, SYNC_AGE);} else if(!_hasCookie(WHITELIST_COOKIE)) {_setCookie(WHITELIST_COOKIE, "requested", WHITELIST_AGE);}_off(window, 'message', handleMessage);document.body.removeChild(syncFrame);syncFrame = null;}function _setupSyncFrame() {if (!syncFrame) { return; }syncFrame.src = window.location.protocol + '//' + 'www.tamgrt.com/RT' + "?-sync=true&q=" + new Date().getTime();document.body.appendChild(syncFrame);}_on(window, 'message', handleMessage);syncFrame.style.display = 'none';syncFrame.id = 'ta_cookie_sync';syncFrame.name = new Date().getTime();_setupSyncFrame();})(window, document);</script></DIV><!--etk--><div id="iframediv"></div><div id="PAGE" class=" non_hotels_like desktop scopedSearch"><div class="masthead"><!--trkP:global_nav--><!-- PLACEMENT global_nav --><DIV ID="taplc_global_nav_0" class="ppr_rup ppr_priv_global_nav" data-placement-name="global_nav"><div class="global-nav-no-refresh" id="global-nav-no-refresh-1"><div id="taplc_global_nav_menus_0" class="ppr_rup ppr_priv_global_nav_menus" data-placement-name="global_nav_menus"><!-- PLACEMENT global_nav_menus --><div class="hidden"><div class="global-nav-menus-container"><div class="  tabsBar"><ul class="tabs" onclick=""><li class="tabItem dropDown jsNavMenu"><a href="/Tourism-g1021220-Naka_Ibaraki_Prefecture_Kanto-Vacations.html" class="tabLink arwLink geoLink" onclick="ta.util.cookie.setPIDCookie(4964); ta.setEvtCookie('TopNav', 'click', 'Tourism', 0, this.href)"><span class="geoName" data-title="Naka">Naka</span><span class="ui_icon single-chevron-down"></span></a><ul class="subNav masthead-dropdown-tourism"><li class="subItem"><a class="subLink " href="/Tourism-g1021220-Naka_Ibaraki_Prefecture_Kanto-Vacations.html" onclick="ta.util.cookie.setPIDCookie(4971);">Viaggi: Naka</a></li><li class="subItem"><a class="subLink " href="/Hotels-g1021220-Naka_Ibaraki_Prefecture_Kanto-Hotels.html" onclick="ta.util.cookie.setPIDCookie(4972);" onmousedown="requireCallLast('masthead/header', 'addClearParam', this);">Hotel: Naka</a></li><li class="subItem"><a class="subLink selForums" href="/ShowForum-g1021220-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.util.cookie.setPIDCookie(4980);">Forum Viaggi: Naka</a></li><li class="subItem"><a class="subLink " href="/Restaurants-g1021220-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.util.cookie.setPIDCookie(4974);">Ristoranti: Naka</a></li><li class="subItem"><a class="subLink " href="/Attractions-g1021220-Activities-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.util.cookie.setPIDCookie(4977);">Cose da fare: Naka</a></li><li class="subItem"><a class="subLink " href="/LocationPhotos-g1021220-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.util.cookie.setPIDCookie(4979);">Foto: Naka</a></li><li class="subItem"><a class="subLink " href="/Travel_Guide-g1021220-Naka_Ibaraki_Prefecture_Kanto.html">Guida: Naka</a></li></ul></li><li class="tabItem dropDown jsNavMenu hvrIE6"><ul class="subNav masthead-dropdown-hotels"><li class="subItem"><a class="subLink" href="/Hotels-g1021220-Naka_Ibaraki_Prefecture_Kanto-Hotels.html">Tutti gli hotel a Naka</a> </li><li class="subItem"><a class="subLink" href="/SmartDeals-g1021220-Naka_Ibaraki_Prefecture_Kanto-Hotel-Deals.html">Offerte di hotel a Naka</a> </li><li class="expandSubItem"><span class="expandSubLink" onClick="     ">Vicino ai luoghi d'interesse</span><ul class="secondSubNav" style="top:-0.125em;   "><li class="subItem"><a class="subLink" href="/HotelsNear-g1021220-d1407489-Ibaraki_Botanical_Garden-Naka_Ibaraki_Prefecture_Kanto.html">Hotel vicino alla Ibaraki Botanical Garden</a></li><li class="subItem"><a class="subLink" href="/HotelsNear-g1021220-d8015984-Shizumine_Furusato_Park-Naka_Ibaraki_Prefecture_Kanto.html">Hotel vicino alla Shizumine Furusato Park</a></li><li class="subItem"><a class="subLink" href="/HotelsNear-g1021220-d6406044-Wildlife_Center-Naka_Ibaraki_Prefecture_Kanto.html">Hotel vicino alla Wildlife Center</a></li></ul></li></ul></li></ul> </div></div><ul class="global-nav-links-menu-more"></ul></div><div class="global-nav-overlays-container"></div></div></div><div class="global-nav  has-links "><div class="global-nav-top"><div class="global-nav-bar global-nav-green"><div class="ui_container global-nav-bar-container"><div class="global-nav-hamburger is-hidden-tablet"><span class="ui_icon menu-bars"></span></div>[hrefx][hrefx]</li> </div></div><div class="sidebar-nav-links-container"><p class="sidebar-nav-title">Cerca</p><div class="sidebar-nav-links"></div><div class="sidebar-nav-links-more"></div></div></div></div><div class="sidebar-nav-backdrop is-hidden-tablet is-hidden-desktop"></div></div><div class="global-nav-no-refresh" id="global-nav-no-refresh-2"><div id="taplc_global_nav_onpage_assets_0" class="ppr_rup ppr_priv_global_nav_onpage_assets" data-placement-name="global_nav_onpage_assets"><!-- PLACEMENT global_nav_onpage_assets --><div class="ui_container"><div class="ui_columns easyClear"><div class="ui_column"><h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1><!--trkP:trip_planner_breadcrumbs--><!-- PLACEMENT trip_planner_breadcrumbs --><DIV ID="taplc_trip_planner_breadcrumbs_0" class="ppr_rup ppr_priv_trip_planner_breadcrumbs" data-placement-name="trip_planner_breadcrumbs"><ul class="breadcrumbs"><li class="breadcrumb"><a class="link" href="/Tourism-g2-Asia-Vacations.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', 'Continent', 1, this.href);"><span>Asia</span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb"><a class="link" href="/Tourism-g294232-Japan-Vacations.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', 'Country', 2, this.href);"><span>Giappone</span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb"><a class="link" href="/Tourism-g298156-Kanto-Vacations.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', 'Region', 3, this.href);"><span>Kanto</span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb"><a class="link" href="/Tourism-g298165-Ibaraki_Prefecture_Kanto-Vacations.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', 'State', 4, this.href);"><span>Ibaraki Prefecture</span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb"><a class="link" href="/Tourism-g1021220-Naka_Ibaraki_Prefecture_Kanto-Vacations.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', 'City', 5, this.href);"><span>Naka</span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb"><a class="link" href="/Restaurants-g1021220-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.setEvtCookie('Breadcrumbs', 'click', '', 6, this.href); return setOneTimeCookie('mcreset','true');"><span>Ristoranti a Naka </span></a>&nbsp;<span class="ui_icon single-chevron-right"></span>&nbsp;</li><li class="breadcrumb">Foto di Kura Soba Nakaya</li></ul></DIV><!--etk--></div></div></div></div></div></DIV><!--etk--></div><div id="HEADING_GROUP"><h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1> <div class="below_h1">Dalla recensione:<span class="review_title"><a onclick="return ta.call('ta.servlet.Popup.openInParent', event, $(this), true);" href="/ShowUserReviews-g1021220-d7570638-r285928935-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#UR285928935">酒蔵の中に有る蕎麦屋さんに行きました❗️</a></span>di Kura Soba Nakaya</div></div><div id="MAINWRAP" class=" "><div id="MAIN" class="LocationPhotoDirectLink         prodp13n_jfy_overflow_visible    "><div id="BODYCON" class="col easyClear poolA adjust_padding new_meta_chevron new_meta_chevron_v2"><div class="wrpHeader"><div id="headingWrapper" class="headerNoSaves jfy_beta " style=""></div></div><div id="LOC_PHOTOS_TOP"><div class="hotel_details"><!--trkP:poi_details--><!-- PLACEMENT poi_details --><DIV ID="taplc_poi_details_0" class="ppr_rup ppr_priv_poi_details" data-placement-name="poi_details"><div class="detail_2015"><div class="header_container"><div class="full_width"><div class="headingWrapper easyClear ""><div class="heading_name_wrapper"><div property="name" class="heading_name "><div class="heading_height"></div><a href="/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"> Kura Soba Nakaya</a></div></div><div class="rblock fr"><span class="wrpButton fl"> <a class="ui_button primary small" href="/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html">Vedi tutte le 7 recensioni</a> </span></div><div class="clear"></div><div class="heading_ratings"><div class="heading_rating separator"><div class="rs rating"><span class="rate sprite-rating_no rating_no"> <img class="sprite-rating_no_fill rating_no_fill no45" width='72' property="ratingValue" content="4.5" src="https://static.tacdn.com/img2/x.gif" alt="Punteggio 4.5 su 5"></span><a class="more taLnk" href="/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#REVIEWS" property='reviewCount' content='7'>7 recensioni</a></div></div><div class="heading_rating separator"><!-- Best rank --><span onclick="ta.util.cookie.setPIDCookie(15191); ta.trackEventOnPage('RATINGS_INFO', 'Ristoranti', 'click');"><div class="slim_ranking"><b class="rank_text wrap"><span class="">N. 8</span></b> di 185 [hrefx][hrefx] </div></span></div></div> <div class="contact_info"><div class="odcHotel blDetails"><div class="fl notLast"><img width="16" height="13" class="grayWeb sprite-grayWeb fl icnLink" src="https://static.tacdn.com/img2/x.gif"><div class="fl"><span class="taLnk hvrIE6" onclick="ta.trackEventOnPage('Eatery_Listing', 'Website', 7570638, 1); ta.util.cookie.setPIDCookie(15190); ta.call('ta.util.link.targetBlank', event, this, {'aHref':'LqMWJQzZYUWJQpEcYGII26XombQQoqnQQQQoqnqgoqnQQQQoqnQQQQoqnQQQQoqnqgoqnQQQQoqnQQCJ9JgJQQoqnQQQQoqnxioqnQQQQoqnQQnnQQoqnQQQQoqnqgoqnQQQQoqnQQtGi2QQoqnQQQQoqnqgoqnQQQQoqnQQ9pEJtiHJQQoqnQQQQoqnxioqnQQQQoqnQQGIacWJQzhYXndUJn3HmJTkUoKUHB', 'isAsdf':true})" class="taLnk hvrIE6">Sito web</span> </div></div><div class="fl notLast"><img width="9" height="14" class="grayPhone sprite-grayPhone fl icnLink" src="https://static.tacdn.com/img2/x.gif"><div class="fl phoneNumber">+81 29-298-0105</div></div><div class="fl notLast"><img width="13" height="10" class="grayEmail sprite-grayEmail fl icnLink" src="https://static.tacdn.com/img2/x.gif"><div class="taLnk hvrIE6 fl" onclick="ta.trackEventOnPage('Eatery_Listing', 'Email', 7570638, 1);                      ta.plc_poi_details_0_handlers.checkEmailAction (event,this,'kiuchi@kodawari.cc', 7570638,                     '\x55\x6e\x61\x20\x72\x69\x63\x68\x69\x65\x73\x74\x61\x20\x64\x27\x69\x6e\x66\x6f\x72\x6d\x61\x7a\x69\x6f\x6e\x69\x20\x73\x75\x20\x4b\x75\x72\x61\x20\x53\x6f\x62\x61\x20\x4e\x61\x6b\x61\x79\x61\x20\x64\x61\x20\x75\x6e\x20\x75\x74\x65\x6e\x74\x65\x20\x64\x69\x20\x54\x72\x69\x70\x41\x64\x76\x69\x73\x6f\x72',                      'Restaurant_Url_LocationPhotoDirectLink'); return false; "><script><!--function escramble_285(){var a,b,ca='E'b='i'a+='-m'b+='l 'c='a'document.write(a+c+b)}escramble_285()//--></script></div> </div></div></div><address><span property="address" typeof="PostalAddress"><span class="format_address"><span class="street-address">1257 Konosu</span> | <span class="extended-address">Kiuchi Shuzo Honten</span>, <span class="locality">Naka 311-0133, </span>Ibaraki Prefecture </span></span></address><div class="fl local_address"><div class="ui_icon refresh-zapper fl"></div><span class="test taLnk hvrIE6" onclick="uiOverlay(event, this);      Asset.css('css2/accommodations/local_address.css',{id:'localAddressStyle'});      Asset.javascript('https://static.tacdn.com/js3/src/tools/locationtool/locationtool-v2226724975b.js');      ta.util.action.recordPid(39239);" data-modal="no_padding" data-position="center" data-options="autoReposition" data-element="#localAddressDiv">Nome/indirizzo nella lingua locale <div id="localAddressDiv" class="hidden"><div id="localAddressInnerDiv"><div class="localAddressHeader"><div class="thumbnail"><div class="sizedThumb  " style="height: 50px; width: 50px; "><a href="/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="photo_link " onClick=" " data-navArea-linkType="Thumbnail"><img src="https://media-cdn.tripadvisor.com/media/photo-t/09/74/a5/7f/soba.jpg" class="photo_image" style="height: 50px; width: 50px;" alt="Kura Soba Nakaya" width="50" height="50"/></a></div></div><div class="rightCol"><div class="localAddressTitle">Foto: “十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦”</div><div class="address"> <span class="format_address"><span class="street-address">1257 Konosu</span> | <span class="extended-address">Kiuchi Shuzo Honten</span>, <span class="locality">Naka 311-0133, </span>Ibaraki Prefecture </span></div><div class="userRating"><div class="rs rating"><span class="rate sprite-rating_no rating_no"> <img class="sprite-rating_no_fill rating_no_fill no45" width='72' src="https://static.tacdn.com/img2/x.gif" alt="Punteggio 4.5 su 5"></span><span class="more">7 recensioni</span> </div></div><div class="separator">&nbsp;&nbsp;|&nbsp;&nbsp;</div><div class="popIndexRating">Posizione n. 8 di 185 </div></div></div><div class="text">Per aiutarti negli spostamenti a Naka, ecco il nome e l'indirizzo di questa struttura nella lingua locale:</div><hr><div class="localAddressName"><span class="localName">Nome locale</span> <span class="localNameValue">蔵+蕎麦 な嘉屋</span></div><div class="localAddressAddres"><span class="localAddress">Indirizzo locale</span> <span class="localAddressValue"><span>〒311-0133</span><span class="street-address">鴻巣1257</span><span class="extended-address">木内酒造本店</span></span></div><div class="localAddressMap"></div><div class="buttonContainer"><div class="localAddressPrint" onClick="ta.util.action.recordPid(39240);__printLocationAddress()"><div class="printText">Stampa </div> <script>function __printLocationAddress(){var win = window.open('','','left=0,top=0,width=552,height=477,toolbar=0,scrollbars=0,status=0');win.document.write('<html><head><link rel="stylesheet" type="text/css" href="css2/accommodations/local_address.css"></head>' +'<body onload="window.print(); window.close()">' +document.getElementById('localAddressDiv').innerHTML +'<\/body><\/html>');win.document.close();}</script></div></div></div></div></span></div></div></div></div></div></DIV><!--etk--></div> </div><div id="LOC_PHOTOS_MID"><div class="top_left_bar"><div class="meta"><!--trkP:restaurant_simple_meta--><!-- PLACEMENT restaurant_simple_meta --><DIV ID="taplc_restaurant_simple_meta_0" class="ppr_rup ppr_priv_restaurant_simple_meta" data-placement-name="restaurant_simple_meta"><div class="restaurant_meta above_the_fold"><div class="details_row1"><div class="separator">€€ - €€€</div><div class="cuisines">[[metatags_descriptionx][metatags_descriptionx]]</div></div></DIV><!--etk--></div><div class="below_meta "><div class="recent_reviews"><!--trkP:other_recent_reviews--><!-- PLACEMENT other_recent_reviews --><DIV ID="taplc_other_recent_reviews_0" class="ppr_rup ppr_priv_other_recent_reviews" data-placement-name="other_recent_reviews"><div class="recent_reviews"><div class="title">Altre recensioni recenti</div><div class="reviews"><div class="one_review"><a class="snippet" href="/ShowUserReviews-g1021220-d7570638-r511278547-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#REVIEWS" id="rcom.TripResearch.userreview.UserReviewDisplayInfo@233612bf.id">&#x201c;シンプルな蕎麦&#x201d;&#x09;</a><span class="date">11/08/2017</span></div> <div class="one_review"><a class="snippet" href="/ShowUserReviews-g1021220-d7570638-r508381186-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#REVIEWS" id="rcom.TripResearch.userreview.UserReviewDisplayInfo@5f2ad31f.id">&#x201c;大きなかき揚げそば&#x201d;&#x09;</a><span class="date">03/08/2017</span></div> </div><div class="total">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div> </div></DIV><!--etk--></div></div></div><div class="big_photo"><!--trkP:lpdl_photo_carousel--><!-- PLACEMENT lpdl_photo_carousel --><DIV ID="taplc_lpdl_photo_carousel_0" class="ppr_rup ppr_priv_lpdl_photo_carousel" data-placement-name="lpdl_photo_carousel"><div class="viewer"><div class="photos" itemprop="video" itemscope itemtype="http://schema.org/VideoObject"><div id="photo_189586109" style="display:none;"><input type="hidden" id="photo_189586109_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_189586109')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_189586109')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 395px; height: 528px; margin-right: 138px; " src="https://media-cdn.tripadvisor.com/media/photo-s/0b/4c/da/bd/caption.jpg" alt="Kura Soba Nakaya: 蔵+蕎麦 な嘉屋" title="蔵+蕎麦 な嘉屋" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick='ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(189586106, 373928509);'></div> </div></div> </div><div id="photo_189586106" style="display:none;"><input type="hidden" id="photo_189586106_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_189586106')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_189586106')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 395px; height: 528px; margin-right: 138px; " src="https://media-cdn.tripadvisor.com/media/photo-s/0b/4c/da/ba/caption.jpg" alt="Kura Soba Nakaya: 蔵+蕎麦 な嘉屋" title="蔵+蕎麦 な嘉屋" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick='ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(189586105, 373928509);'></div> </div></div> </div><div id="photo_189586105" style="display:none;"><input type="hidden" id="photo_189586105_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_189586105')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_189586105')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 395px; height: 528px; margin-right: 138px; " src="https://media-cdn.tripadvisor.com/media/photo-s/0b/4c/da/b9/caption.jpg" alt="Kura Soba Nakaya: 蔵+蕎麦 な嘉屋" title="蔵+蕎麦 な嘉屋" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick='ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(141740812, 292224409);'></div> </div></div> </div><div id="photo_141740812" style="display:none;"><input type="hidden" id="photo_141740812_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_141740812')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_141740812')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 672px; height: 504px; " src="https://media-cdn.tripadvisor.com/media/photo-s/08/72/cb/0c/taste.jpg" alt="Kura Soba Nakaya: 2階席です。" title="2階席です。" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick='ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(139063888, 285928935);'></div> </div></div> </div><div id="photo_139063888"><input type="hidden" id="photo_139063888_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_139063888')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_139063888')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 396px; height: 528px; margin-right: 138px; " src="https://media-cdn.tripadvisor.com/media/photo-s/08/49/f2/50/caption.jpg" alt="Kura Soba Nakaya: 十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦" title="十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick='ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(139063886, 285928935);'></div> </div></div> </div><div id="photo_139063886" style="display:none;"><input type="hidden" id="photo_139063886_mediatype" value="photo"><div class="photoBox"><div class="photoImg" onmouseover="window.showMainImageNav && showMainImageNav('photo_139063886')" onmouseout="window.hideMainImageNav && hideMainImageNav('photo_139063886')"><div class="imgBx"><img class="taLnk big_photo" style="display: block; width: 396px; height: 528px; margin-right: 138px; " src="https://media-cdn.tripadvisor.com/media/photo-s/08/49/f2/4e/caption.jpg" alt="Kura Soba Nakaya: 十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦" title="十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦" oncontextmenu="return ta.call('ta.servlet.Photos.rightClick', event, this, imageClickData)" onclick="return ta.servlet.Photos.handlePagedFilterOption('/LocationPhotoDirectLink-g1021220-d7570638-i139062982-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html');"></div> </div></div> </div><div class="thumbImg wrap"><a onclick="return ta.servlet.Photos.handlePagedFilterOption('/LocationPhotoDirectLink-g1021220-d7570638-i228309461-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html');" href="/LocationPhotoDirectLink-g1021220-d7570638-i228309461-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"><div class="hoverHighlight left"><div class="arrow"></div></div></a><div class="thumblpdl"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i189586109-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(189586109, 373928509); return false;"><img id="thumb_189586109" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/0b/4c/da/bd/caption.jpg" alt="蔵+蕎麦 な嘉屋"></a></div><div class="thumblpdl"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i189586106-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(189586106, 373928509); return false;"><img id="thumb_189586106" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/0b/4c/da/ba/caption.jpg" alt="蔵+蕎麦 な嘉屋"></a></div><div class="thumblpdl"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i189586105-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(189586105, 373928509); return false;"><img id="thumb_189586105" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/0b/4c/da/b9/caption.jpg" alt="蔵+蕎麦 な嘉屋"></a></div><div class="thumblpdl"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i141740812-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(141740812, 292224409); return false;"><img id="thumb_141740812" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/08/72/cb/0c/taste.jpg" alt="2階席です。"></a></div><div class="thumblpdl"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(139063888, 285928935); return false;"><img id="thumb_139063888" class="thumbSelected" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/08/49/f2/50/caption.jpg" alt="十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦"></a></div><div class="thumblpdl last"><a href="/LocationPhotoDirectLink-g1021220-d7570638-i139063886-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" class="last" onclick="ta.plc_lpdl_photo_carousel_0_handlers.switchPhoto(139063886, 285928935); return false;"><img id="thumb_139063886" style="width:95px; height:90px; " src="https://media-cdn.tripadvisor.com/media/photo-l/08/49/f2/4e/caption.jpg" alt="十種野菜のかき揚げ蕎麦・ああたかいかけ蕎麦・冷たいもり蕎麦"></a></div><a onclick="return ta.servlet.Photos.handlePagedFilterOption('/LocationPhotoDirectLink-g1021220-d7570638-i139062982-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html');" href="/LocationPhotoDirectLink-g1021220-d7570638-i139062982-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html"><div class="hoverHighlight right"><div class="arrow"></div></div></a></div> </div> </div></DIV><!--etk--></div></div><div id="LOC_PHOTOS" class="gridA"><div class="col balance"><div id="REVIEWS"><div id="review_285928935" class="reviewSelector"><div class="review basic_review inlineReviewUpdate provider0"><div class="col1of2"><div class="member_info"><div id="UID_6D7D02CB00AA28334278636A2B97789C-SRC_285928935" class="memberOverlayLink" onmouseover="requireCallIfReady('members/memberOverlay', 'initMemberOverlay', event, this, this.id, 'Reviews', 'user_name_photo');" data-anchorWidth="90"><div class="avatar profile_6D7D02CB00AA28334278636A2B97789C "><a onclick=><img width="74" id="lazyload_-1262891220_0" class="avatar" height="74" src='https://static.tacdn.com/img2/x.gif'/></a></div><div class="username mo"><span class="expand_inline scrname mbrName_6D7D02CB00AA28334278636A2B97789C" onclick="ta.trackEventOnPage('Reviews', 'show_reviewer_info_window', 'user_name_name_click')"> s_taka091</span></div></div><div class="location"></div></div><div class="memberBadging g10n"><div id="UID_6D7D02CB00AA28334278636A2B97789C-CONT" class="no_cpu" onclick="ta.util.cookie.setPIDCookie('15984'); requireCallIfReady('members/memberOverlay', 'initMemberOverlay', event, this, this.id, 'Reviews', 'review_count');" data-anchorWidth="90"><div class="levelBadge badge lvl_06">Contributore livello <span><span class="ui_level_badge"><span class="contribution-count">6</span> <span class="ui_icon level-badge"></span></span></span> </div><div class="reviewerBadge badge"><img alt="" width="20" id="lazyload_-1262891220_1" class="icon lazy" height="20" src='https://static.tacdn.com/img2/x.gif'/><span class="badgeText">114 recensioni</span> </div><div class="contributionReviewBadge badge"><img alt="" width="20" id="lazyload_-1262891220_2" class="icon lazy" height="20" src='https://static.tacdn.com/img2/x.gif'/><span class="badgeText">77 recensioni di ristoranti</span></div></div><div id="UID_6D7D02CB00AA28334278636A2B97789C-HV" class="helpfulVotesBadge badge no_cpu" onclick="ta.util.cookie.setPIDCookie('15983'); requireCallIfReady('members/memberOverlay', 'initMemberOverlay', event, this, this.id, 'Reviews', 'helpful_count');" data-anchorWidth="90"><img alt="common_n_restaurant_reviews_1bd8" width="20" id="lazyload_-1262891220_3" class="icon lazy " height="20" src='https://static.tacdn.com/img2/x.gif'/><span class="badgeText">26 voti utili </span></div></div></div><div class="col2of2"><div class="innerBubble"><div class="wrap"><div class="quote"><a href="/ShowUserReviews-g1021220-d7570638-r285928935-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#REVIEWS" onclick="ta.setEvtCookie('Reviews','title','',0,this.href); ta.util.cookie.setPIDCookie('4442');" id="rn285928935"></a></div><div class="rating reviewItemInline"><span class="ui_bubble_rating bubble_50"></span><span class="ratingDate">Recensito il 6 luglio 2015</span><a class="viaMobile" href="/apps" target="_blank" onclick="ta.util.cookie.setPIDCookie(24687)"><span class="ui_icon mobile-phone"></span>tramite dispositivo mobile</a></div><div class="googleTranslation reviewItem"><span class="link" onclick="ta.call('ta.overlays.Factory.reviewTranslate', event, this, '/MachineTranslation?g=1021220&amp;d=7570638&amp;r=285928935&amp;page=review&amp;sl=ja&amp;tl=it'); ta.trackEventOnPage('Reviews', 'google_translate')"><img alt="Google Traduttore" src="https://static.tacdn.com/img2/langs/it/buttons/googleTranslation.gif"/></span></div><div class="entry"><p id="review_text_285928935" class="partial_entry"></p><span class="partnerRvw"><span class="taLnk hvrIE6 tr285928935 moreLink ulBlueLinks" onclick="      ta.util.cookie.setPIDCookie(4444); ta.call('ta.servlet.Reviews.expandReviews', {type: 'dummy'}, ta.id('review_285928935'), 'review_285928935', '1', 4444);  ">Altro&nbsp; </span><span class="ui_icon caret-down"></span></span></div><div class="wrap"><div id="helpfulq285928935_collapsed" class="helpful redesigned white_btn_container "><span class="isHelpful">È utile?</span> <div class="tgt_helpfulq285928935 rnd_white_thank_btn" onclick="ta.call('ta.servlet.Reviews.helpfulVoteHandlerOb', event, this, 'LeJIVqd4EVIpECri1GII26mbqgqguuuxizSxiSIqgRinJISiCwGiIixMSEVnIRSC9qHyUKXUXXKqHMkokK3mvqHSUmAK3mvvvqHxbpEJQQoqnQQhiHJQQoqnQQZJ9JgJqHZJ9JQQoqnQQlHJEJ9SQQoqnQQwEVTVnIpEVQQoqnQQxbJCIixiGIac6XoXmqoTpcXvoAXvAmo0tEn1XvoAXvAmo0zH1UKXUXXK0pSM13xMkxMKXf7KKbbXvmmdXkv3m3bX7AkkvAf0npEEeJIV1K0EJIVqiJcpV1U0Ii9VC1rZlU3Xozxb5dkNJdq8zCUkqnvEOHSJSSawHGwfOxbKlxEHyClrszCtZTyuqiRxXzC7x2njAItx2x2sOnjkklxEdTUmAx5w2xdhEzzxXxbx5uzsEqnemmkMmKq8hqiSzzR3xdpqiysNx2AIwGx5fnIjlcueqngSx2KpJpHqIc9q82yD2qn2xMiyDKJxdScK79NTqQGrlxMyqQxGciqQTCDrxEON2cxdV'); ta.trackEventOnPage('HELPFUL_VOTE_TEST', 'helpfulvotegiven_v2');"><span class="helpful_thumbs_up white ui_icon thumbs-up-fill"></span><span class="helpful_thumbs_up green ui_icon thumbs-up-fill"></span><span class="helpful_text">Grazie, s_taka0911</span> </div></div><div class="tooltips vertically_centered"></div></div></div></div> </div> </div></div></div><div class="add_r_p"><div class="cta">Sei stato a Kura Soba Nakaya? Condividi la tua esperienza.</div><div class="cta_buttons"><span class="wrpButton"> <a class="ui_button primary small" href="/UserReview-g1021220-d7570638-ehttp%3A__2F____2F__www__2E__tripadvisor__2E__it__2F__LocationPhotoDirectLink__2D__g1021220__2D__d7570638__2D__i139063888__2D__Kura__5F__Soba__5F__Nakaya__2D__Naka__5F__Ibaraki__5F__Prefecture__5F__Kanto__2E__html-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html" onclick="ta.setEvtCookie('LocationPhotoDirectLink', 'write_review', '', 0, '/UserReviewEdit')"> Scrivi una recensione</a> </span><span class="wrpButton"> <a class="ui_button primary small" href="/PostPhotos-g1021220-d7570638-ehttp%3A__2F____2F__www__2E__tripadvisor__2E__it__2F__LocationPhotoDirectLink__2D__g1021220__2D__d7570638__2D__i139063888__2D__Kura__5F__Soba__5F__Nakaya__2D__Naka__5F__Ibaraki__5F__Prefecture__5F__Kanto__2E__html-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html">Aggiungi foto</a> </span></div></div><div class="wrpButton"> <a class="ui_button primary small" href="/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html">Leggi tutte le 7 recensioni di Kura Soba Nakaya</a> </div></div><div class="col sidebar"><div class="lpbox"><div class="ad iab_medRec"><div id="gpt-ad-300x250-300x600" class="adInner gptAd"></div></div></div></div></div></div></div> </div><div id="FOOT_CONTAINER"><!--trkP:global_footer--><!-- PLACEMENT global_footer --><DIV ID="taplc_global_footer_0" class="ppr_rup ppr_priv_global_footer" data-placement-name="global_footer"><div class="foot"><div class="ui_container"><div class="ui_columns is-multiline is-mobile"><div class="ui_column bottom_on_mobile is-7-tablet is-12-mobile"><div class="logo_slogan"><img class="logo_svg " src="https://static.tacdn.com/img2/langs/it/branding/rebrand/TA_logo_primary.svg" alt="TripAdvisor"/><span class="footer-tag-line">informati meglio <span class="ui_icon ui_single_bubble_rating"></span> prenota meglio <span class="ui_icon ui_single_bubble_rating"></span> viaggia meglio </span></div><div class="legal_section">© 2017 TripAdvisor LLC Tutti i diritti riservati. <DIV class="prw_rup prw_homepage_tripadvisor_horizontal_footer_links" data-prwidget-name="homepage_tripadvisor_horizontal_footer_links" data-prwidget-init="handlers">[hrefx][hrefx]<span class="footerLink ui_link js_click" data-id="help_center" data-url="/uvpages/helpCenterOverlay.html" data-track-action="help_center">Centro Assistenza</span></div></DIV></div></div><div class="ui_column top_on_mobile is-3-tablet is-12-mobile"><div class="footer_section section_with_border_separator_mobile"><DIV class="prw_rup prw_homepage_footer_pickers" data-prwidget-name="homepage_footer_pickers" data-prwidget-init="handlers"><div class="ftrHeader">VALUTA/PAESE</div><div class="unified-picker" onclick="(ta.prwidgets.getjs(this,&#39;handlers&#39;)).showCurrency(event, this)" data-sg-overlay="above right"data-header="Valuta"><span class="picker-inner"><span class="picker-label"><span class="currency_symbol">CN¥</span><span>CNY</span></span><span class="ui_icon caret-down open-close"></span><span class="ui_icon caret-up open-close hidden"></span></span></div><div class="unified-picker" onclick="(ta.prwidgets.getjs(this,&#39;handlers&#39;)).showPos(event, this)" data-sg-overlay="above right"data-overlay="point_of_sale_picker"data-header="Paese"><span class="picker-inner"><span class="picker-label"><img class="flag" src="https://static.tacdn.com/img2/langs/it/flags/flag.gif" alt="Italia" title="Italia" width="16" height="11"/><span>Italia</span><span class="point_of_sale_data hidden" data-page-feature="" data-locale-codes="" data-current-locale="it"></span></span><span class="ui_icon caret-down open-close"></span><span class="ui_icon caret-up open-close hidden"></span></span></div></DIV></div></div></div></div></div></DIV><!--etk--><img width="0" id="p13n_tp_stm" class="tracking hidden" height="0" src='https://static.tacdn.com/img2/x.gif'/></div></div><!--trkP:document_cookie_banner--><!-- PLACEMENT document_cookie_banner --><DIV ID="taplc_document_cookie_banner_0" class="ppr_rup ppr_priv_document_cookie_banner" data-placement-name="document_cookie_banner"><p>TripAdvisor utilizza i cookie per migliorare la tua esperienza durante la visita sul sito. [hrefx][hrefx] o modifica le tue <span class="" onclick="">impostazioni</span>. Per continuare è necessario autorizzare i nostri cookie.</p></DIV><!--etk--><script type="text/javascript">(function () {if (typeof console == "undefined") console = {};var funcs = ["log", "error", "warn"];for (var i = 0; i < funcs.length; i++) {if (console[funcs[i]] == undefined) {console[funcs[i]] = function () {};}}})();var pageInit = new Date();var hideOnLoad = new Array();var WINDOW_EVENT_OBJ = window.Event;var IS_DEBUG = false;var CDNHOST = "https://static.tacdn.com";var cdnHost = CDNHOST;var MEDIA_HTTP_BASE = "https://media-cdn.tripadvisor.com/media/";var POINT_OF_SALE = "it";if (typeof DUST_GLOBAL === 'undefined') {var DUST_GLOBAL = {"IS_IELE8":false,"LOCALE":"it","IS_IE10":false,"CDN_HOST":"https://static.tacdn.com","DEVICE":"desktop","IS_RTL":false,"LANG":"it","DEBUG":false,"READ_ONLY":false,"POS_COUNTRY":187768};}</script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js3/jquery-c-v22626659988b.js' data-rup='jquery'></script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js3/mootools-c-v23900594016b.js' data-rup='mootools'></script><script type="text/javascript">var jsGlobalMonths =     new Array("Gennaio","Febbraio","Marzo","Aprile","Maggio","Giugno","Luglio","Agosto","Settembre","Ottobre","Novembre","Dicembre");var jsGlobalMonthsAbbrev =     new Array("gen","feb","mar","apr","mag","giu","lug","ago","set","ott","nov","dic");var jsGlobalDayMonthYearAbbrev =     new Array("{0} gen {1}","{0} feb {1}","{0} mar {1}","{0} apr {1}","{0} mag {1}","{0} giu {1}","{0} lug {1}","{0} ago {1}","{0} set {1}","{0} ott {1}","{0} nov {1}","{0} dic {1}");var jsGlobalDaysAbbrev =     new Array("lun","mar","mer","gio","ven","sab","dom");var jsGlobalDaysShort =     new Array("L","M","M","G","V","S","D");var jsGlobalDaysFull =     new Array("domenica","lunedì","martedì","mercoledì","giovedì","venerdì","sabato");var sInvalidDates = "Le date inserite non sono valide. Reinserire le date corrette ed effettuare una nuova ricerca.";var sSelectDeparture = "Seleziona un aeroporto di partenza.";var DATE_FORMAT_MMM_YYYY = "MMM YYYY";var DATE_PICKER_CLASSIC_FORMAT = "dd/MM/yyyy";var DATE_PICKER_SHORT_FORMAT = "dd/MM";var DATE_PICKER_META_FORMAT = "EEE d MMM";var DATE_PICKER_DAY_AND_SLASHES_FORMAT = "EEE dd/MM/yyyy";var jsGlobalDayOffset = 2 - 1;var DATE_FORMAT = { pattern: /(\d{1,2})\/(\d{1,2})\/(\d{2,4})/, month: 2, date: 1, year: 3 };var formatDate = function(d, m, y) {return [d,++m,y].join("/");};var cal_month_header = function(month, year) {return cal_months[month]+"&nbsp;"+year;};</script><script type="text/javascript">var currencySymbol = new Array();var cur_prefix = false;var cur_postfix = true;var curs=[,'CHF','JPY','SEK','BRL','TRY','DKK','MXN','TWD','HKD','NOK','PLN','AED','AFN','ALL','AMD','ANG','AOA','ARS','AWG','AZN','BAM','BBD','BDT','BGN','BHD','BIF','BMD','BND','BOB','BSD','BTN','BWP','BYR','BZD','CDF','CLP','COP','CRC','CVE','CZK','DJF','DOP','DZD','EGP','ERN','ETB','FJD','FKP','GEL','GHS','GIP','GMD','GNF','GTQ','GYD','HNL','HRK','HTG','HUF','IDR','IQD','IRR','ISK','JMD','JOD','KES','KGS','KHR','KMF','KRW','KWD','KYD','KZT','LAK','LBP','LKR','LRD','LSL','LYD','MAD','MDL','MGA','MKD','MNT','MOP','MRO','MUR','MVR','MWK','MYR','MZN','NAD','NGN','NIO','NPR','OMR','PAB','PEN','PGK','PHP','PKR','PYG','QAR','RON','RSD','RUB','RWF','SAR','SBD','SCR','SGD','SHP','SLL','SOS','SRD','STD','SZL','TJS','TMT','TND','TOP','TTD','TZS','UAH','UGX','UYU','UZS','VEF','VUV','WST','YER','ZAR','CUP','KPW','MMK','SDG','SYP'];for(var i=1;i<curs.length;i++){currencySymbol[curs[i]]=new Array(curs[i],true);}var curs = [,'USD','GBP','EUR','CAD','AUD','RMB','INR','ILS','NZD','THB','VND','XAF','XCD','XOF','XPF']var curs2 = [,'US$','£','€','CA$','A$','CN¥','₹','₪','NZ$','฿','₫','FCFA','EC$','CFA','CFPF']for(var i=1;i<curs.length;i++){currencySymbol[curs[i]]=new Array(curs2[i],true);}var groupingSize = 3;var groupingSeparator = ".";var JS_location_not_found = "Non abbiamo trovato la tua località.";var JS_click_to_expand = "Fai clic qui per espandere";var JS_choose_valid_city = "Seleziona una città valida dalla lista. ";var JS_select_a_cruise_line = "Please select a cruise line.";var JS_loading = "Caricamento in corso...";var JS_Ajax_failed="Ci scusiamo per il disguido tecnico. Ti preghiamo di riprovare più tardi. Grazie.";var JS_maintenance="Al momento il nostro sito \u00e8 in manutenzione.  Ci scusiamo per l\'inconveniente... ritorneremo presto on-line.";var JS_Stop_search = "interrompi la ricerca";var JS_Resume_search = "Continua la ricerca";var JS_Thankyou = "Grazie";var JS_DateFormat = "gg/mm/aaaa";var JS_review_lost = "La tua recensione non verrà conservata.";var JS_coppa_sorry = "Ci dispiace....";var JS_coppa_privacy = "Secondo le informazioni inviateci, la tua iscrizione a TripAdvisor non rispetta i requisiti delle nostra <a href='/pages/privacy.html'>normativa sulla privacy</a>.";var JS_coppa_deleted = "La tua iscrizione è stata cancellata.";var JS_close = "Chiudi";var JS_close_image = "https://static.tacdn.com/img2/langs/it/buttons/closeButton.gif";var JS_CHANGES_SAVED = "Modifiche salvate";var JS_community_on = "La community è stata attivata.";var lang_Close = JS_close;var JS_UpdatingYourResults = "Aggiornamento risultati &#8230;";var JS_OwnerPhoto_heading = "Grazie per aver inviato la tua richiesta a TripAdvisor. ";var JS_OwnerPhoto_subheading = "Elaboriamo la maggior parte degli elenchi e delle modifiche entro 5 giorni lavorativi. ";var JS_OwnerPhoto_more = "Aggiungete altre foto al tuo profilo";var JS_OwnerPhoto_return = "Ritorna al Centro per i Proprietari";var JS_NMN_Timeout_title = "Vuoi fare un altro tentativo?";var JS_NMN_Timeout_msg = "Il riconoscimento della località sta durando più a lungo del previsto.";var JS_NMN_Error_title = "Errore località";var JS_NMN_Error_msg   = "Abbiamo riscontrato un errore nell'identificazione della località";var JS_KeepTrying = "Prova ancora";var JS_TryAgain   = "Riprova";var js_0001 = "Scegli almeno un venditore dalla lista."; var js_0002 = "Scegli le date future."; var js_0003 = "Scegli una data di uscita che sia almeno un giorno dopo quella di entrata."; var js_0004 = "Scegli le date entro 330 giorni da oggi.";   var js_0005 = "Stiamo cercando un\'offerta ... l\'operazione potrebbe richiedere qualche minuto."; var js_0006 = "Ciò che hai scelto non ha subito modifiche."; var js_0010 = "Clicca nuovamente per aprire tutte le finestre o per regolare le impostazioni del browser per disattivare i pop-up blockers."; var js_0011 = "Aggiorna"; var js_0012 = "Prossima offerta"; var js_0013 = "Please click the \"Check Rates!\" button above to open each window."; var js_0014 = 'Verrà aperta una finestra per ogni offerta. Disattiva il sistema di blocco popup';var js_0015 = 'Confronta i prezzi';var js_invalid_dates_text = "Le date inserite non sono corrette. Modificale e poi effettua una nuova ricerca."; var js_invalid_dates_text_new = "Indica le date e controlla i prezzi"; var js_invalid_dates_text_new2 = "Indica le date per vedere i prezzi";var qcErrorImage = '<center><img src="https://static.tacdn.com/img/langs/it/action_required_blinking.gif" /></center>';var selectedHotelName = ""; var cr_loc_vend = 'https://static.tacdn.com/img2/langs/it/checkrates/cr.gif';var cr_loc_vend_ch = 'https://static.tacdn.com/img2/langs/it/checkrates/cr_check.gif';var cr_loc_logo = 'https://static.tacdn.com/img2/checkrates/logo.gif';var cd_loc_vend = 'https://static.tacdn.com/img2/langs/it/checkrates/cd.png';var cd_loc_vend_ch = 'https://static.tacdn.com/img2/langs/it/checkrates/cd_check.png';var JS_Any_Date = "data";var JS_Update_List = "Aggiorna la lista";var sNexusTitleMissing = "The title must be populated";var JS_Challenge="Challenge";var JS_TIQ_Level="Level";var JS_TIQ="Travel IQ";var JS_TIQ_Pts="pts";var RATING_STRINGS = ["Fai clic per votare","Pessimo","Scarso","Nella media","Molto buono","Eccellente"];var overlayLightbox = false;if("" != ""){overlayLightbox = true;}var isTakeOver = false;var overlayOptions = "";var overlayBackupLoc = "";var gmapDomain = "maps.google.com";var mapChannel = "ta.desktop";var bingMapsLang = "it".toLowerCase();var bingMapsCountry = "".toLowerCase();var bingMapsBaseUrl = "http://www.bing.com/maps/default.aspx?cc=it&";var googleMapsBaseUrl = "http://maps.google.it/?";var yandexMapsBaseUrl = "http://maps.yandex.com";var serverPool = "A";var posLocale = "it";var cssPhotoViewerAsset = "https://static.tacdn.com/css2/photos_with_inline_review-v23979816284b.css";var cssAlbumViewerExtendedAsset = "https://static.tacdn.com/css2/media_albums_extended-v21936885807b.css";var jsPhotoViewerAsset = 'https://static.tacdn.com/js3/src/ta/photos/Viewer-v22467600457b.js';var jsAlbumViewerAsset = ["https://static.tacdn.com/js3/album_viewer-c-v23077607682b.js"];var jsAlbumViewerExtendedAsset = ["https://static.tacdn.com/js3/media_albums_extended-c-v22464222210b.js"];var cssInlinePhotosTabAsset = "https://static.tacdn.com/css2/photo_albums_stacked-v21477396084b.css";var cssPhotoLightboxAsset = "https://static.tacdn.com/css2/photo_albums_stacked-v21477396084b.css";var jsDesktopBackboneAsset = ["https://static.tacdn.com/js3/desktop_modules_modbone-c-v21146691696b.js"];var jsPhotoViewerTALSOAsset = 'https://static.tacdn.com/js3/src/TALSO-v21232481152b.js';var g_jsIapVote = ["https://static.tacdn.com/js3/inappropriate_vote_dlg-c-v2533138922b.js"];</script><script type="text/javascript">var VERSION_MAP = {"ta-widgets-typeahead.js": "https://static.tacdn.com/js3/ta-widgets-typeahead-c-v22272654372b.js","ta-media.js": "https://static.tacdn.com/js3/ta-media-c-v21042049182b.js","ta-overlays.js": "https://static.tacdn.com/js3/ta-overlays-c-v2353595374b.js","ta-registration-RegOverlay.js": "https://static.tacdn.com/js3/ta-registration-RegOverlay-c-v23900849243b.js","ta-mapsv2.js": "https://static.tacdn.com/js3/ta-mapsv2-gmaps3-c-v22664907195b.js"};</script><script type="text/javascript">var cookieDomain = ".tripadvisor.it";var modelLocaleCountry = "";var ipCountryId = "294211";var pageServlet = "LocationPhotoDirectLink";var crPageServlet = "LocationPhotoDirectLink";var userLoggedIn = false;</script><script type="text/javascript">var migrationMember = false;var savesEnable = true;var flagsUrl = '/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html';var noPopClass = "no_cpu";var flagsSettings = [];var isIPad = false;var isTabletOnFullSite = false;var tabletOnFullSite = false;var lang_Close  = "Chiudi";var isSmartdealBlueChevron = false;var img_loop    = "https://static.tacdn.com/img2/generic/site/loop.gif";var communityEnabled = truevar footerFlagFormat = "PhotoC_fffffc5b";var modelLocId = "7570638";var modelGeoId = "1021220";var gClient = 'gme-tripadvisorinc';var gKey = '';var gLang = '&language=it_IT';var mapsJs = 'https://static.tacdn.com/js3/ta-maps-gmaps3-c-v2555295278b.js';var mapsJsLite = 'https://static.tacdn.com/js3/lib/TAMap-v22716202300b.js';var memoverlayCSS = 'https://static.tacdn.com/css2/pages/memberoverlay-v23870953781b.css';var flagsFlyoutCSS = 'https://static.tacdn.com/css2/build/less/overlays/build/flags/flags_flyout-v24046149648b.css';var globalCurrencyPickerCSS = 'https://static.tacdn.com/css2/build/less/overlays/build/global_currency_picker-v24258863981b.css';var g_emailHotelCSS = 'https://static.tacdn.com/css2/t4b/emailhotel-v23480412318b.css';var g_emailHotelJs = ["https://static.tacdn.com/js3/t4b_emailhotel-c-v22034857376b.js"];var passportStampsCSS = 'https://static.tacdn.com/css2/modules/passport_stamps-v21996473260b.css';var autocompleteCss = "https://static.tacdn.com/css2/modules/autocomplete-v22602962033b.css";var globalTypeAheadCss = "https://static.tacdn.com/css2/global_typeahead-v22202600247b.css";var globalTypeAheadFontCss = "https://static.tacdn.com/css2/proxima_nova-v21536367270b.css";var wiFriHasMember =  false  ;var JS_SECURITY_TOKEN = "TNI1625!ALBiI+QpE7W2FvB7ktak0z7xS7BIEtkwYxJm8FtDf4GeH8Qx1RXNxzzaOOjWrwg1dk4MHATbHedbzTIb4GYhqYiWUuLglHuJGp3x7ja9KxaXzKE+iu7E63iFQHVSlFOUBhNjxitoZWUxSdaqpfC8GEySdoGqMKhBgoKpT5R03JLW";var addOverlayCloseClass = "";var isOverlayServlet = "";var IS_OVERLAY_DEBUG = "false";</script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js3/lpdl_2015-c-v21855639867b.js' data-rup='lpdl_2015'></script><script type="text/javascript">ta.queueForLoad(function() {if (ta.has("price_finder")) {require("ta/servlet/HRPriceFinder").setup();}}, "Price finder /LPDL");</script><script type="text/javascript">var taSecureToken = "TNI1625!ALBiI+QpE7W2FvB7ktak0z7xS7BIEtkwYxJm8FtDf4GeH8Qx1RXNxzzaOOjWrwg1dk4MHATbHedbzTIb4GYhqYiWUuLglHuJGp3x7ja9KxaXzKE+iu7E63iFQHVSlFOUBhNjxitoZWUxSdaqpfC8GEySdoGqMKhBgoKpT5R03JLW";</script><script type="text/javascript">if(window.ta && ta.store) {ta.store('photo.viewer.localization.videoError', 'Spiacenti, impossibile caricare il lettore video');     }</script><script type="text/javascript">var geoParam = "&geo=1021220";</script><!-- web325b.b.tripadvisor.com --><!-- PRODUCTION --><!-- releases/PRODUCTION_1114377_20170811_1333 --><!-- Rev 1114378 --><script type="text/javascript" src="https://static.tacdn.com/js3/src/trsupp-v23584999669b.js"></script><script type="text/javascript">if(typeof define !== 'undefined') {define('page-model', [], function () {var model = {"session":{"analyticsInfo":{"cv1Key":null,"cv1Value":null,"evtCookiePUID":null,"promosStringForCurrentPageview":null,"cv47Key":null,"cv47Value":null,"enabled":true,"pageview":true,"trackerId":"UA-30198665-1","campaignParams":"utm_source=tripadvisor&utm_medium=domain direct&utm_campaign=TripAdvisor","customVariablesForSession":[{"variable":"Member","scope":3,"name":"Member","value":"-","slot":2},{"variable":"EntryDetail","scope":3,"name":"EntryDetail","value":"Kura Soba Nakaya-7570638","slot":9},{"variable":"EntryGeo","scope":3,"name":"EntryGeo","value":"Naka-1021220","slot":3},{"variable":"EntryCountry","scope":3,"name":"EntryCountry","value":"Japan-294232","slot":4},{"variable":"EntryServlet","scope":3,"name":"EntryServlet","value":"LocationPhotoDirectLink","slot":5},{"variable":"Pool","scope":3,"name":"Pool","value":"A","slot":6},{"variable":"Slice","scope":3,"name":"Slice","value":"2607","slot":7},{"variable":"MCID","scope":3,"name":"MCID","value":"TripAdvisor-0","slot":18},{"variable":"PageType","scope":3,"name":"PageType","value":"Desktop Page","slot":21},{"variable":"DeviceType","scope":3,"name":"DeviceType","value":"Desktop","slot":22},{"variable":"IPGeo","scope":3,"name":"IPGeo","value":"Baoji-799520","slot":23},{"variable":"ProductType","scope":3,"name":"ProductType","value":"Browser","slot":24},{"variable":"WebServer","scope":3,"name":"WebServer","value":"web325b","slot":48}],"jsonForCurrentPageview":"{\"cv\":[[\"_deleteCustomVar\",1],[\"_deleteCustomVar\",47],[\"_setCustomVar\",11,\"Detail\",\"Kura Soba Nakaya-7570638\",3],[\"_setCustomVar\",12,\"Country\",\"Japan-294232\",3],[\"_setCustomVar\",19,\"Region\",\"Kanto-298156\",3],[\"_setCustomVar\",25,\"Continent\",\"Asia-2\",3],[\"_setCustomVar\",13,\"Geo\",\"Naka-1021220\",3],[\"_setCustomVar\",20,\"PP\",\"--\",3],[\"_deleteCustomVar\",14],[\"_deleteCustomVar\",8],[\"_deleteCustomVar\",10]],\"url\":\"/LocationPhotoDirectLink\"}","pagePropertyStringForCurrentPageview":"","hasEvent":false,"jsonForEvent":null,"memberState":"-","domain":""},"cookieDomain":".tripadvisor.it","uid":"WY5wjAoQK2oAAWDg6MwAAAAg","posLocale":"it","MEDIA_HTTP_BASE":"https://media-cdn.tripadvisor.com/media/","user_id":"","loggedIn":false,"securelyLoggedIn":false,"lazyObf":"{\"given\":\"abcdefghijklmopqrsuvwxyzABCDEFGHIJKLMOPQRSUVWXYZ1234567890\", \"replace\":\"mopqrsuvwxyzabcdefghijklSUVWXYZABCDEFGHIJKLMOPQR4567890123\",\"token\":\"###Obf###\",\"validator\":\"<!-- amSZ03nt -->\"}","pageServlet":"LocationPhotoDirectLink","sessionId":"5EEBF323FF128B2931C9A80AA2CDA034","cdnHost":"https://static.tacdn.com"},"DUST_GLOBAL":{"IS_IELE8":false,"LOCALE":"it","IS_IE10":false,"CDN_HOST":"https://static.tacdn.com","DEVICE":"desktop","IS_RTL":false,"LANG":"it","DEBUG":false,"READ_ONLY":false,"POS_COUNTRY":187768},"JS_SECURITY_TOKEN":"TNI1625!AE3I0cyqnfNImCUPUkkFbyq1YzvFo19vxNvVS1DCgClp8dur4IRZx7FJqxaLr2jYI4jrSrKb0SX1jZNyZraENFQUmU5ZY3VlKBNpTDinYX0W/G6op6y90efV+fzqNlAJeZ23DTG8NnrnGWl8Bcmshxqi+JwabHm3pOUYXRfYeTxZ","GEO_ID":"1021220","isMobile":false,"isRtl":false};return model;});}</script><script class="allowAbsoluteUrls" type="text/javascript">function hideByClass(c){hideElement(c,3);}function hideElement(c,n){if ($(c)){$(c).hide();}else if (n > 0){setTimeout("hideElement('"+c+"',"+(n-1)+")",200);}}function moveAd(){var adE = $$('#LOC_PHOTOS div.iab_leaBoa');if( adE && adE.length == 0){moveElement('div.iab_leaBoa', 'div.banner', 3);}}function moveElement(fromClass, toClass, n){if(document.getElement(fromClass)){var addiv = document.getElement(fromClass);addiv.inject(document.getElement(toClass), 'after');}else if (n > 0){setTimeout("moveElement('"+fromClass+"','"+toClass+"',"+(n-1)+")",200);}}function selfInitialize (){setTimeout(function(){if (isPopup){$(document.body).addClass('pop');$('LOC_PHOTOS').addClass('pop');hideByClass('FOOT');hideByClass('HEAD');hideByClass('LEFTNAV');hideByClass('USER_PREFS');hideByClass('HEADING');if ($('TOPROWTEMPLATE')) {hideByClass('TOPROWTEMPLATE');}hideByClass('RATING');hideByClass('INLINE_REVIEW_FILTER');moveAd();}}, 20);}window.addEvent('load', selfInitialize);var currentId = 139063888;var lastId = 139063886;function showFirstVideo(id) {var divnew = ta.id("photo_"+id);var mediaTypeElmt = ta.id("photo_" + id + "_mediatype");if (mediaTypeElmt) {if (mediaTypeElmt.value == "video")  {showVideo(id);}else {var videoPlayerElmt = ta.id("LOC_PHOTOS_VIDEO_PLAYER");if (videoPlayerElmt) {videoPlayerElmt.style.display = "none";}}}}function refreshImage() {var myId = currentId;currentId = 0;showImage(myId, null, true);}function showImage(id, opts, ignoreImpression){ta.servlet.Photos.rightClickHide();// If they left the teaser open, then close itta.servlet.Photos.closeReportIAPTeaser();if (id != currentId){var divnew = ta.id("photo_"+id);var thumbNew = ta.id("thumb_"+id);if (divnew){selectIAPReportDiv(id);var divold = ta.id("photo_"+currentId);var thumbOld = ta.id("thumb_"+currentId);if (divold){divold.style.display="none";var oldMediaTypeElmt = ta.id("photo_" + currentId + "_mediatype");if (oldMediaTypeElmt && oldMediaTypeElmt.value == "video"){stopLocationVideo();}}if (thumbOld){$(thumbOld).removeClass("thumbSelected");if(ta.has('responsiveCMS')) {$(thumbOld).getParent('a').removeClass("linkSelected");}}divnew.style.display="block";if (thumbNew){$(thumbNew).addClass("thumbSelected");if(ta.has('responsiveCMS')) {$(thumbNew).getParent('a').addClass("linkSelected");}}var twitterUrl = divnew.get("data-twitterurl")if (twitterUrl) {var twitterAnchor = ta.id("TWITTER_LINK")if (twitterAnchor) {twitterAnchor.setProperty("href",twitterUrl)}}currentId=id;if(imageClickData && imageClickData.pageUrl && currentId) {var currentUrl = imageClickData.pageUrl;var pattern=/\#[0-9]+/currentUrl = currentUrl.replace(pattern, '\#' + currentId);imageClickData.pageUrl = currentUrl;}var mediaTypeElmt = ta.id("photo_" + id + "_mediatype");if (mediaTypeElmt) {if (mediaTypeElmt.value == "video") {showVideo(id);}else {var videoPlayerElmt = ta.id("LOC_PHOTOS_VIDEO_PLAYER");if (videoPlayerElmt) {videoPlayerElmt.style.display = "none";}}}}// update the URL in the textarea of the right hand side.updatePhotoUrlBox(id);// AGOF tracking (only for .de)// we want to ignore any impressions from loadDesignatedPhoto since it would cause two impressions on page loadif(!ignoreImpression && typeof szm_reload_lightbox == 'function'){szm_reload_lightbox();}}}var updatePhotoUrlBox = function(id){try{// update only when PhotoUrlBox is enabled.if(typeof enabledPhotoUrlBox == 'undefined' || enabledPhotoUrlBox != 1){return;}var pubContainer = document.getElement('.photoUrlBox');if (!pubContainer){return;}var ownerPhotoMask = ta.id("ownerPhoto_"+id);if (ownerPhotoMask && ownerPhotoMask.value == 1){pubContainer.style.display = 'none';}else{if (pubContainer.style.display == 'none'){pubContainer.style.display = 'block';}var elmInnerCode = ta.id("innerCode_"+id);if (elmInnerCode){var innerCode = elmInnerCode.value;var elmPubCode = ta.id('pubCODE');if (elmPubCode){elmPubCode.value = innerCode;}if (typeof isPhotoUrlCopied != 'undefined'){isPhotoUrlCopied = 0;   // reset to send pid to ActionRecord when user copies the contnets of the textarea.}} // if (elmInnerCode)}}catch(e){ta.util.error.record(e, 'location_photos.vm.updatePhotoUrlBox()');}}function showVideo(id) {var success = false;try {var videoPlayerElmt = ta.id("LOC_PHOTOS_VIDEO_PLAYER");var videoPlayerCntrNew = ta.id("photo_" + id + "_player");if (videoPlayerElmt && videoPlayerCntrNew) {videoPlayerElmt.parentNode.removeChild(videoPlayerElmt);videoPlayerCntrNew.appendChild(videoPlayerElmt);videoPlayerElmt.style.display = "block";var playerWidth = null;var playerHeight = null;if (videoPlayerCntrNew.style && videoPlayerCntrNew.style.width && videoPlayerCntrNew.style.height) {pWidth = parseInt(videoPlayerCntrNew.style.width);pHeight = parseInt(videoPlayerCntrNew.style.height);}var locId = "7570638";if (typeof locId != "undefined" && locId != null && locId != "" && !isNaN(Number(locId))) {locId = Number(locId);}else {locId = 0;}success = loadLocationVideoIntoPlayer(ta.id("photo_" + id + "_player_path").value,             ta.id("photo_" + id + "_player_tmb").value,             ta.id("photo_" + id + "_player_id").value,             locId,pWidth,pHeight);videoPlayerCntrNew.style.display = (success ? "block" : "none");var imgBx = document.getElement("#photo_" + id + " .imgBx");if (imgBx) {var previewImg = document.getElement("#photo_" + id + " .imgBx img");if (previewImg) {previewImg.style.display = (success ? "none" : "block");}var vidErr = document.getElement("#photo_" + id + "_player .videoError");if (vidErr) {vidErr.style.display = (success ? "none" : "block");}else if (!success) {new Element("div", {"html": 'Spiacenti, impossibile caricare il lettore video',"class": "videoError"}).inject(imgBx);}}}}catch (e) {ta.util.error.record(e, "location_photos.vm - showVideo", null, { mediaId:id });success = false;}return success;}function stopLocationVideo(){try {if(ta.has('jwplayer.player') && ta.retrieve('jwplayer.player')) {ta.retrieve('jwplayer.player').stop();}}catch (e) {ta.util.error.record(e, "location_photos.vm - stopLocationVideo");}}/*** Loads the given video srcUrl into Jwplayer version 7*/function loadLocationVideoIntoPlayer(srcUrl, thumbUrl, mediaId, locId, pWidth, pHeight){try {var flvUrl = srcUrl + ".flv";if (!ta.media.JWPlayer) {return false;}var options = {containerId: 'JWPLAYER',videoUrl: flvUrl,previewUrl: thumbUrl,mediaId: mediaId,locationId: locId,initFailureCallback: refreshImage};if (typeof(pWidth) !== 'undefined' && typeof(pHeight) !== 'undefined' && pWidth != null && pHeight != null ) {options.playerHeight = pHeight;options.playerWidth = pWidth;}var player = ta.media.JWPlayer.createPlayer(options);if(player) {ta.store('jwplayer.player', player);}}catch (e) {ta.util.error.record(e, "location_photos.vm - loadLocationVideoIntoPlayer");return false;}return true;}function selectIAPReportDiv(id){var oldReportedIAP = $('reportedIAP_'+currentId);if (oldReportedIAP){oldReportedIAP.hide();}var reportIAPLnk = $('reportIAPLnk_' + id);if (reportIAPLnk){var newReportedIAP = $('reportedIAP_'+id);if (newReportedIAP) {newReportedIAP.style.display="block";reportIAPLnk.style.display="none";}else{reportIAPLnk.style.display="block";}}}function showMainImageNav(photoElemId) {// show all pageNav elements (to prevent them from seeming to disappear on click)var elems = document.getElements(".pageNav");for (var i = 0; i < elems.length; i++) {elems[i].setStyle("display", "block");}}function hideMainImageNav(photoElemId) {var elem = document.getElement("#" + photoElemId + " .pageNav");if (elem) {elem.setStyle("display", "none");}}function checkImage(opts, event) {}function showLastImage(){showImage(lastId);}function loadDesignatedPhoto(){setTimeout(function(){var h=document.location.href;var mat = /\#([0-9]+)/.exec(h);if (mat){showImage(mat[1], null, true);}else if (h.indexOf("#last") != -1){showLastImage();}}, 10);}var photoVote = Cookie.read('PhotoVote');var showVote = function(){var elmtId = "voteBox_";var elmt;var h=document.location.href;var mat = /\#([0-9]+)/.exec(h);if (mat){elmt = elmtId + mat[1];elmt = $(elmt);}else{elmt = document.getElement('.viewer').getFirst().getElement('.photoVoteBox');}if(elmt){// Set thank you text.elmt.innerHTML = "<span class='photoVote photoVoteCaption'>" + JS_Thankyou + "</span>";if (photoVote == "1"){new ta.overlays.RelativeOverlayAbove({showCloseButton: true,remoteContent: '/uvpages/photoNoVote.html'}, elmt);}}}var locPhotoLoad = function() {loadDesignatedPhoto();if(!isPopup && photoVote && (photoVote == "1" || photoVote == "5")){Cookie.dispose('PhotoVote', {domain:cookieDomain, path:"/"});showVote.delay(500);}}window.addEvent('load', locPhotoLoad);var locks = {'IVO':false, 'IVS':false};var locationId = '';locationId = '7570638';var userLoggedIn = false;var fp_default = 'E1F83CF7A58631994AC591A8E6955427';function getFootprint(){var fp = TALSO.get('CookieId');if(!fp && fp_default && TALSO.is_able()) // fp_default is defined in iap_head.vm, which gets included by showuserreviews.vm{TALSO.set('CookieId',fp_default);fp = fp_default;}return fp;}function getIAPVoteOptions(){ta.servlet.Photos.closeReportIAPTeaser();var sourceLnk = ta.id('reportIAPLnk_' + currentId);if(sourceLnk) {ta.overlays.Factory.iapFlyout({type: 'dummy'}, sourceLnk, {voteContentType:'MEDIA', contentId: currentId});}}var imageClickData = {boxHead: "Volete usare questa immagine?",boxCopy: "Copiate e incollate questo codice sul vostro sito:",boxRequire: "Le immagini devono essere di esclusivo riferimento a TripAdvisor.",boxMore: "Scoprite di pi\u00f9",boxWhyFull: "\074p\076Le immagini di TripAdvisor possono essere utilizzate soltanto in un contesto riferito a TripAdvisor. Usando il codice integrato di TripAdvisor, comparir\u00e0 automaticamente un riferimento testuale che soddisfa tale requisito. \074/p\076\074p\076Inoltre, utilizzando il codice integrato, il vostro server web risulter\u00e0 pi\u00f9 leggero poich\u00e9 le foto sono ospitate sulla piattaforma di TripAdvisor invece che sul vostro server.\074/p\076",boxAbout: "Info sul codice incorporato",pageUrl: "https://www.tripadvisor.it/LocationPhotoDirectLink-g1021220-d7570638-i139063888-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html#139063888",pageText: "\u5341\u7a2e\u91ce\u83dc\u306e\u304b\u304d\u63da\u3052\u854e\u9ea6\u30fb\u3042\u3042\u305f\u304b\u3044\u304b\u3051\u854e\u9ea6\u30fb\u51b7\u305f\u3044\u3082\u308a\u854e\u9ea6 - Foto di Kura Soba Nakaya, Naka",detailUrl: "https://www.tripadvisor.it/Restaurant_Review-g1021220-d7570638-Reviews-Kura_Soba_Nakaya-Naka_Ibaraki_Prefecture_Kanto.html",detailName: "Kura Soba Nakaya",detailText: "Questa foto di {0} \u00e8 offerta da TripAdvisor."};</script><script>var isPopup = false;ta.queueForLoad(function() { ta.store('lpdl_default_photo', 139063888); ta.store('lpdl_default_review', 285928935) }, 'lpdl_photo_carousel');</script><script type='text/javascript'>                           injShowReview('285928935', 'partial');</script><script>var _comscore = _comscore || [];_comscore.push({ c1: '2', c2: '6036461', c3: '', c4: '' });var _csload = function() {var s = document.createElement('script'), el = document.getElementsByTagName('script')[0]; s.async = true;s.src = (document.location.protocol == 'https:' ? 'https://sb' : 'http://b') + '.scorecardresearch.com/beacon.js';el.parentNode.insertBefore(s, el);};ta.queueForLoad(_csload, 5, 'comscore');</script><noscript><img class='tracking' height='1' width='1' src='https://sb.scorecardresearch.com/p?c1=2&c2=6036461&c3=&c4=&c5=&c6=&c15=&cv=2.0&cj=1'/></noscript><script type='text/javascript'>ta.store('hac_timezone_awareness', true);ta.store('ta.hac.locationTimezoneOffset', 32400000);</script><script type='text/javascript'>if (ta.localStorage && ta.localStorage.enabled) {var previousSessionId = ta.localStorage.get('qualaroo-session-id');var currentSessionId = '5EEBF323FF128B2931C9A80AA2CDA034';if (previousSessionId && previousSessionId == currentSessionId) {var views = Number(ta.localStorage.get('qualaroo-page-views')) + 1;ta.localStorage.set('qualaroo-page-views', views);} else {ta.localStorage.set('qualaroo-session-id', currentSessionId);ta.localStorage.set('qualaroo-page-views', 1);}}</script><script type="text/javascript">ta.queueForReady( function() {ta.localStorage && ta.localStorage.updateSessionId('5EEBF323FF128B2931C9A80AA2CDA034');}, 1, "reset localStorage session id");</script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js-webpack/dist/CNY/vendor-prod-v22486935892b.js'></script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js-webpack/dist/CNY/i18n/formatters-prod-it-IT-v21476126488b.js'></script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js-webpack/dist/CNY/app-prod-v22629532556b.js'></script><script type="text/javascript">ta.store("hr_pricefinder_add_copy", true);</script><script type="text/javascript">ta.store("price_finder", true);</script><script type="text/javascript">ta.store('ta.commerce.suppress_commerce_impressions.enabled', true);</script><script type="text/javascript">ta.store('ib_price_click_tracking.enabled', true);</script><script type="text/javascript">require(['ta/Core/TA.Store'], function(taStore) {taStore.store('typeahead.typeahead2_mixed_ui', true);taStore.store('typeahead.typeahead2_geo_segmented_ui', true);taStore.store('typeahead.geoArea', 'nelle vicinanze di Naka ');     taStore.store('typeahead.worldwide', 'Worldwide');     taStore.store('typeahead.noResultsFound', 'Nessun risultato trovato.');taStore.store('typeahead.flight_enabled', true);taStore.store('typeahead.localAirports', [{"lookbackServlet":null,"autobroadened":"false","normalized_name":"aeroporto di internazionale di pechino","title":"Destinazioni","type":"AIRPORT","is_vr":false,"url":"\/Tourism-g7917497-Beijing-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Aeroporto di Internazionale di Pechino ","fallback_url":"\/Tourism-g7917497-Beijing-Vacations.html","type":"GEO","url":"\/Tourism-g7917497-Beijing-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Aeroporto di Internazionale di Pechino","fallback_url":"\/VacationRentalsNear-g294212-d7917497-Capital_Airport-Beijing.html","type":"VACATION_RENTAL","url":"\/VacationRentalsNear-g294212-d7917497-Capital_Airport-Beijing.html"},{"url_type":"eat","name":"Ristoranti: Aeroporto di Internazionale di Pechino","fallback_url":"\/Restaurants-g7917497-Beijing.html","type":"EATERY","url":null},{"url_type":"attr","name":"Attrazioni: Aeroporto di Internazionale di Pechino","fallback_url":"\/Attractions-g7917497-Activities-Beijing.html","type":"ATTRACTION","url":null},{"url_type":"hotel","name":"Hotel Aeroporto di Internazionale di Pechino","fallback_url":"\/HotelsNear-g294212-qPEK-Beijing.html","type":"HOTEL","url":"\/HotelsNear-g294212-qPEK-Beijing.html"},{"url_type":"flights_to","name":"Voli per Aeroporto di Internazionale di Pechino","fallback_url":"\/FlightsTo-g294212-qPEK-Beijing-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/FlightsTo-g294212-qPEK-Beijing-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Aeroporto di Internazionale di Pechino","fallback_url":"\/NeighborhoodList-g7917497-Beijing.html","type":"NEIGHBORHOOD","url":null},{"url_type":"tg","name":"Guide di viaggio: Aeroporto di Internazionale di Pechino","fallback_url":"\/Travel_Guide-g7917497-Beijing.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Aeroporto di Internazionale di Pechino, Pechino, Cina","data_type":"LOCATION","details":{"parent_name":"Pechino","grandparent_name":"Cina","highlighted_name":"Pechino, Cina (PEK-Capital Intl.)","name":"Pechino, Cina (PEK-Capital Intl.)","parent_ids":[294212,294211,2,1],"geo_name":"Pechino, Cina"},"airportCode":"PEK","value":7917497,"coords":"40.07786,116.60376"}]);taStore.store('typeahead.recentHistoryList', []);taStore.store('typeahead.popularDestinations', [{"lookbackServlet":null,"autobroadened":"false","normalized_name":"istanbul","title":"Destinazioni","type":"GEO","is_vr":true,"url":"\/Tourism-g293974-Istanbul-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Istanbul ","fallback_url":"\/Tourism-g293974-Istanbul-Vacations.html","type":"GEO","url":"\/Tourism-g293974-Istanbul-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Istanbul","fallback_url":"\/VacationRentals-g293974-Reviews-Istanbul-Vacation_Rentals.html","type":"VACATION_RENTAL","url":"\/VacationRentals-g293974-Reviews-Istanbul-Vacation_Rentals.html"},{"url_type":"eat","name":"Ristoranti: Istanbul","fallback_url":"\/Restaurants-g293974-Istanbul.html","type":"EATERY","url":"\/Restaurants-g293974-Istanbul.html"},{"url_type":"attr","name":"Attrazioni: Istanbul","fallback_url":"\/Attractions-g293974-Activities-Istanbul.html","type":"ATTRACTION","url":"\/Attractions-g293974-Activities-Istanbul.html"},{"url_type":"hotel","name":"Hotel Istanbul","fallback_url":"\/Hotels-g293974-Istanbul-Hotels.html","type":"HOTEL","url":"\/Hotels-g293974-Istanbul-Hotels.html"},{"url_type":"flights_to","name":"Voli per Istanbul","fallback_url":"\/Flights-g293974-Istanbul-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/Flights-g293974-Istanbul-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Istanbul","fallback_url":"\/NeighborhoodList-g293974-Istanbul.html","type":"NEIGHBORHOOD","url":"\/NeighborhoodList-g293974-Istanbul.html"},{"url_type":"tg","name":"Guide di viaggio: Istanbul","fallback_url":"\/Travel_Guide-g293974-Istanbul.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Istanbul, Turchia, Europa","data_type":"LOCATION","details":{"parent_name":"Turchia","grandparent_name":"Europa","rac_enabled":true,"highlighted_name":"Istanbul","name":"Istanbul","parent_ids":[293969,4,1],"geo_name":"Turchia, Europa"},"value":293974,"coords":"41.00986,28.95707"},{"lookbackServlet":null,"autobroadened":"false","normalized_name":"roma","title":"Destinazioni","type":"GEO","is_vr":true,"url":"\/Tourism-g187791-Rome_Lazio-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Roma ","fallback_url":"\/Tourism-g187791-Rome_Lazio-Vacations.html","type":"GEO","url":"\/Tourism-g187791-Rome_Lazio-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Roma","fallback_url":"\/VacationRentals-g187791-Reviews-Rome_Lazio-Vacation_Rentals.html","type":"VACATION_RENTAL","url":"\/VacationRentals-g187791-Reviews-Rome_Lazio-Vacation_Rentals.html"},{"url_type":"eat","name":"Ristoranti: Roma","fallback_url":"\/Restaurants-g187791-Rome_Lazio.html","type":"EATERY","url":"\/Restaurants-g187791-Rome_Lazio.html"},{"url_type":"attr","name":"Attrazioni: Roma","fallback_url":"\/Attractions-g187791-Activities-Rome_Lazio.html","type":"ATTRACTION","url":"\/Attractions-g187791-Activities-Rome_Lazio.html"},{"url_type":"hotel","name":"Hotel Roma","fallback_url":"\/Hotels-g187791-Rome_Lazio-Hotels.html","type":"HOTEL","url":"\/Hotels-g187791-Rome_Lazio-Hotels.html"},{"url_type":"flights_to","name":"Voli per Roma","fallback_url":"\/Flights-g187791-Rome_Lazio-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/Flights-g187791-Rome_Lazio-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Roma","fallback_url":"\/NeighborhoodList-g187791-Rome_Lazio.html","type":"NEIGHBORHOOD","url":"\/NeighborhoodList-g187791-Rome_Lazio.html"},{"url_type":"tg","name":"Guide di viaggio: Roma","fallback_url":"\/Travel_Guide-g187791-Rome_Lazio.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Roma, Lazio, Italia","data_type":"LOCATION","details":{"parent_name":"Italia","grandparent_name":"Europa","rac_enabled":true,"highlighted_name":"Roma","name":"Roma","parent_ids":[187789,187768,4,1],"geo_name":"Lazio, Italia"},"value":187791,"coords":"41.893623,12.495978"},{"lookbackServlet":null,"autobroadened":"false","normalized_name":"londra","title":"Destinazioni","type":"GEO","is_vr":true,"url":"\/Tourism-g186338-London_England-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Londra ","fallback_url":"\/Tourism-g186338-London_England-Vacations.html","type":"GEO","url":"\/Tourism-g186338-London_England-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Londra","fallback_url":"\/VacationRentals-g186338-Reviews-London_England-Vacation_Rentals.html","type":"VACATION_RENTAL","url":"\/VacationRentals-g186338-Reviews-London_England-Vacation_Rentals.html"},{"url_type":"eat","name":"Ristoranti: Londra","fallback_url":"\/Restaurants-g186338-London_England.html","type":"EATERY","url":"\/Restaurants-g186338-London_England.html"},{"url_type":"attr","name":"Attrazioni: Londra","fallback_url":"\/Attractions-g186338-Activities-London_England.html","type":"ATTRACTION","url":"\/Attractions-g186338-Activities-London_England.html"},{"url_type":"hotel","name":"Hotel Londra","fallback_url":"\/Hotels-g186338-London_England-Hotels.html","type":"HOTEL","url":"\/Hotels-g186338-London_England-Hotels.html"},{"url_type":"flights_to","name":"Voli per Londra","fallback_url":"\/Flights-g186338-London_England-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/Flights-g186338-London_England-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Londra","fallback_url":"\/NeighborhoodList-g186338-London_England.html","type":"NEIGHBORHOOD","url":"\/NeighborhoodList-g186338-London_England.html"},{"url_type":"tg","name":"Guide di viaggio: Londra","fallback_url":"\/Travel_Guide-g186338-London_England.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Londra, Inghilterra, Regno Unito","data_type":"LOCATION","details":{"parent_name":"Inghilterra","grandparent_name":"Regno Unito","rac_enabled":false,"highlighted_name":"Londra","name":"Londra","parent_ids":[186217,186216,4,1],"geo_name":"Inghilterra, Regno Unito"},"value":186338,"coords":"51.51924,-0.096654"},{"lookbackServlet":null,"autobroadened":"false","normalized_name":"pechino","title":"Destinazioni","type":"GEO","is_vr":true,"url":"\/Tourism-g294212-Beijing-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Pechino ","fallback_url":"\/Tourism-g294212-Beijing-Vacations.html","type":"GEO","url":"\/Tourism-g294212-Beijing-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Pechino","fallback_url":"\/VacationRentals-g294212-Reviews-Beijing-Vacation_Rentals.html","type":"VACATION_RENTAL","url":"\/VacationRentals-g294212-Reviews-Beijing-Vacation_Rentals.html"},{"url_type":"eat","name":"Ristoranti: Pechino","fallback_url":"\/Restaurants-g294212-Beijing.html","type":"EATERY","url":"\/Restaurants-g294212-Beijing.html"},{"url_type":"attr","name":"Attrazioni: Pechino","fallback_url":"\/Attractions-g294212-Activities-Beijing.html","type":"ATTRACTION","url":"\/Attractions-g294212-Activities-Beijing.html"},{"url_type":"hotel","name":"Hotel Pechino","fallback_url":"\/Hotels-g294212-Beijing-Hotels.html","type":"HOTEL","url":"\/Hotels-g294212-Beijing-Hotels.html"},{"url_type":"flights_to","name":"Voli per Pechino","fallback_url":"\/Flights-g294212-Beijing-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/Flights-g294212-Beijing-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Pechino","fallback_url":"\/NeighborhoodList-g294212-Beijing.html","type":"NEIGHBORHOOD","url":null},{"url_type":"tg","name":"Guide di viaggio: Pechino","fallback_url":"\/Travel_Guide-g294212-Beijing.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Pechino, Cina, Asia","data_type":"LOCATION","details":{"parent_name":"Cina","grandparent_name":"Asia","rac_enabled":false,"highlighted_name":"Pechino","name":"Pechino","parent_ids":[294211,2,1],"geo_name":"Cina, Asia"},"value":294212,"coords":"39.909336,116.39452"},{"lookbackServlet":null,"autobroadened":"false","normalized_name":"praga","title":"Destinazioni","type":"GEO","is_vr":true,"url":"\/Tourism-g274707-Prague_Bohemia-Vacations.html","urls":[{"url_type":"geo","name":"Turismo: Praga ","fallback_url":"\/Tourism-g274707-Prague_Bohemia-Vacations.html","type":"GEO","url":"\/Tourism-g274707-Prague_Bohemia-Vacations.html"},{"url_type":"vr","name":"Case vacanza: Praga","fallback_url":"\/VacationRentals-g274707-Reviews-Prague_Bohemia-Vacation_Rentals.html","type":"VACATION_RENTAL","url":"\/VacationRentals-g274707-Reviews-Prague_Bohemia-Vacation_Rentals.html"},{"url_type":"eat","name":"Ristoranti: Praga","fallback_url":"\/Restaurants-g274707-Prague_Bohemia.html","type":"EATERY","url":"\/Restaurants-g274707-Prague_Bohemia.html"},{"url_type":"attr","name":"Attrazioni: Praga","fallback_url":"\/Attractions-g274707-Activities-Prague_Bohemia.html","type":"ATTRACTION","url":"\/Attractions-g274707-Activities-Prague_Bohemia.html"},{"url_type":"hotel","name":"Hotel Praga","fallback_url":"\/Hotels-g274707-Prague_Bohemia-Hotels.html","type":"HOTEL","url":"\/Hotels-g274707-Prague_Bohemia-Hotels.html"},{"url_type":"flights_to","name":"Voli per Praga","fallback_url":"\/Flights-g274707-Prague_Bohemia-Cheap_Discount_Airfares.html","type":"FLIGHTS_TO","url":"\/Flights-g274707-Prague_Bohemia-Cheap_Discount_Airfares.html"},{"url_type":"nbrhd","name":"Quartieri di Praga","fallback_url":"\/NeighborhoodList-g274707-Prague_Bohemia.html","type":"NEIGHBORHOOD","url":"\/NeighborhoodList-g274707-Prague_Bohemia.html"},{"url_type":"tg","name":"Guide di viaggio: Praga","fallback_url":"\/Travel_Guide-g274707-Prague_Bohemia.html","type":"TRAVEL_GUIDE","url":null}],"is_broad":false,"scope":"global","name":"Praga, Repubblica Ceca, Europa","data_type":"LOCATION","details":{"parent_name":"Repubblica Ceca","grandparent_name":"Europa","rac_enabled":false,"highlighted_name":"Praga","name":"Praga","parent_ids":[274685,274684,4,1],"geo_name":"Repubblica Ceca, Europa"},"value":274707,"coords":"50.076847,14.427817"}]);taStore.store('typeahead.restaurant', "Ristorante");         taStore.store('typeahead.attraction', "Attrazione");         taStore.store('typeahead.hotel', "Hotel");                       taStore.store('typeahead.restaurant_list', "Ristoranti");       taStore.store('typeahead.attraction_list', "Attrazioni ");       taStore.store('typeahead.things_to_do', "Attività");                 taStore.store('typeahead.hotel_list', "Hotel");                 taStore.store('typeahead.flight_list', "Voli");                   taStore.store('typeahead.vacation_rental_list', "Case vacanza");     taStore.store('typeahead.scoped.static_local_label', 'nelle vicinanze di % ');     taStore.store('typeahead.scoped.result_title_text', 'Inizia a digitare o prova a usare uno di questi suggerimenti...');     taStore.store('typeahead.scoped.poi_overview_geo', '<span class="poi_overview_item">Panoramica</span> su %');     taStore.store('typeahead.scoped.poi_hotels_geo', '<span class="poi_overview_item">Hotel</span> a %');     taStore.store('typeahead.scoped.poi_hotels_geo_near', '<span class="poi_overview_item">Hotel</span> vicino a: %');     taStore.store('typeahead.scoped.poi_vr_geo', '<span class="poi_overview_item">Case vacanza</span> a %');     taStore.store('typeahead.scoped.poi_vr_geo_near', '<span class="poi_overview_item">Case vacanza</span> vicino a: %');     taStore.store('typeahead.scoped.poi_attractions_geo', '<span class="poi_overview_item">Attività</span> a %');     taStore.store('typeahead.scoped.poi_eat_geo', '<span class="poi_overview_item">Ristoranti</span> a %');     taStore.store('typeahead.scoped.poi_flights_geo', '<span class="poi_overview_item">Voli</span> per %');     taStore.store('typeahead.scoped.poi_nbrhd_geo', '<span class="poi_overview_item">Quartieri</span> di %');     taStore.store('typeahead.scoped.poi_travel_guides_geo', '<span class="poi_overview_item">Guide di viaggio</span> di %');     taStore.store('typeahead.scoped.overview', 'Dettagli');     taStore.store('typeahead.scoped.neighborhoods', 'Quartieri');     taStore.store('typeahead.scoped.travel_guides', 'Guide di viaggio');     taStore.store('typeahead.scoped.geo_area_template', 'nelle vicinanze di % ');     taStore.store('typeahead.searchMore', 'Trova altri risultati per "%"');taStore.store('typeahead.history', 'Visti di recente');     taStore.store('typeahead.history.all_caps', 'CERCATI DI RECENTE');     taStore.store('typeahead.popular_destinations', 'DESTINAZIONI PIÙ RICHIESTE');});</script><script></script><script type="text/javascript">ta.store('metaCheckRatesUpdateDivInline', 'PROVIDER_BLOCK_INLINE');ta.store('metaInlineGeoId', '');</script><script></script><script type="text/javascript">ta.store('metaCheckRatesUpdateDiv', 'PROVIDER_BLOCK');ta.store('checkrates.meta_ui_sk_box_v3', true)ta.store('checkrates.one_second_xsell', true);</script><script>ta.store("lightbox_improvements", true);ta.store("checkrates.hr_bc_see_all_click.lb", true);</script><script type="text/javascript"></script><script type="text/javascript">var metaCheckRatesCSS = 'https://static.tacdn.com/css2/meta_lightbox_overlay-v21370973169b.css';ta.store('metaCheckRatesFeatureEnabled', true);</script><script type="text/javascript">ta.store('mapProviderFeature.maps_api','ta-maps-gmaps3');</script><script type="text/javascript">ta.store('meta.isHackathonBC', true);ta.store('meta.bc.noConfirmedAvailability', 'Nessuna disponibilit\u00e0 confermata nei siti dei partner nelle date indicate.');         ta.store('meta.bc.noConfirmedAvailabilityWithXSell', 'Nessuna disponibilit\u00e0 confermata nei siti dei partner nelle date indicate. Prova altre date o controlla questi siti per vedere la disponibilit\u00e0.');         ta.store('meta.bc.noAvailability', 'Nessuna disponibilit\u00e0 nei siti dei partner nelle date indicate.');         ta.store('meta.bc.noAvailabilityWithXSell', 'Nessuna disponibilit\u00e0 in queste date. Prova uno di questi hotel simili.');ta.store('meta.bc.bestPricesForYourStay', 'Miglior prezzo per il tuo soggiorno');ta.store('meta.bc.pricesTravelSitesNotAvailDates', 'I prezzi di questi siti di viaggi non sono disponibili per le date indicate');ta.store('meta.bc.isRevisedUnavailability', true);</script><script type="text/javascript">var dropdownMetaCSS = "https://static.tacdn.com/css2/meta_drop_down_overlay-it-v21193225416b.css";</script><script type="text/javascript">ta.store('metaDatePickerEnabled', true);var common_skip_dates = "Cerca senza date specifiche";ta.store('multiDP.skipDates', "Cerca senza date specifiche");         ta.store('multiDP.inDate', "");ta.store('multiDP.outDate', "");ta.store('multiDP.minCheckInDate', '2017-08-12');ta.store('multiDP.multiNightsText', "2 notti");         ta.store('multiDP.singleNightText', "1 notte");         ta.store('calendar.preDateText', "gg/mm/aaaa");ta.store('multiDP.adultsCount', "2");ta.store('multiDP.singleAdultsText', "1 ospite");         ta.store('multiDP.multiAdultsText', "2 ospiti");         ta.store('multiDP.enterDatesText', "Inserisci date");                 ta.store('multiDP.isMondayFirstDayOfWeek', true);ta.store('multiDP.dateSeparator', " - ");ta.store('multiDP.dateRangeEllipsis', "Ricerca per il %%%...");ta.store('multiDP.abbrevMonthList', ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"]);ta.store('multiDP.checkIn', "Arrivo");           ta.store('multiDP.checkOut', "Partenza");             </script><script type="text/javascript">(function(window,ta,undefined){try {ta = window.ta = window.ta || {};ta.uid = 'WY5wjAoQK2oAAWDg6MwAAAAg';var xhrProto = XMLHttpRequest.prototype;var origSend = xhrProto.send;xhrProto.send = function(data) {try {var localRE = new RegExp('^(/[^/]|(http(s)?:)?//'+window.location.hostname+')');if(this._url && localRE.test(this._url)) {this.setRequestHeader('X-Puid', 'WY5wjAoQK2oAAWDg6MwAAAAg');}}catch (e2) {}origSend.call(this, data);}var origOpen = xhrProto.open;xhrProto.open = function (method, url) {this._url = url;return origOpen.apply(this, arguments);};ta.userLoggedIn = false;ta.userSecurelyLoggedIn = false;if (require.defined('ta/Core/TA.Prerender')) {require('ta/Core/TA.Prerender')._init(true);}require(['ta/Core/TA.Record'], function(taRecord) {taRecord.pushPageData(JSON.parse('{\"cv\":[[\"_deleteCustomVar\",1],[\"_deleteCustomVar\",47],[\"_setCustomVar\",11,\"Detail\",\"Kura Soba Nakaya-7570638\",3],[\"_setCustomVar\",12,\"Country\",\"Japan-294232\",3],[\"_setCustomVar\",19,\"Region\",\"Kanto-298156\",3],[\"_setCustomVar\",25,\"Continent\",\"Asia-2\",3],[\"_setCustomVar\",13,\"Geo\",\"Naka-1021220\",3],[\"_setCustomVar\",20,\"PP\",\"--\",3],[\"_deleteCustomVar\",14],[\"_deleteCustomVar\",8],[\"_deleteCustomVar\",10]],\"url\":\"/LocationPhotoDirectLink\"}'));});require(['ta/Core/TA.Store'], function(taStore) {taStore.keep("partials.pageProperties","");taStore.store("gaMemberState","-");});}catch (e) {if (require.defined('ta/util/Error')) {require('ta/util/Error').record(e,'global_ga.vm');}}}(window,ta));</script><script type="text/javascript">var lazyImgs = [{"data":"https://media-cdn.tripadvisor.com/media/photo-l/08/35/21/83/s-taka0911.jpg","scroll":true,"tagType":"img","id":"lazyload_-1262891220_0","priority":100,"logerror":false},   {"data":"https://static.tacdn.com/img2/badges/20px/rev_06.png","scroll":true,"tagType":"img","id":"lazyload_-1262891220_1","priority":100,"logerror":false},   {"data":"https://static.tacdn.com/img2/badges/20px/Foodie.png","scroll":true,"tagType":"img","id":"lazyload_-1262891220_2","priority":100,"logerror":false},   {"data":"https://static.tacdn.com/img2/badges/20px/Appreciated.png","scroll":false,"tagType":"img","id":"lazyload_-1262891220_3","priority":100,"logerror":false},   {"data":"https://p.smartertravel.com/ext/pixel/ta/seed.gif?id=NY1QkB0y0N6c6NAXrKFYUxyDxTC2nZBLsWFndZMUNLIzQb8vraXyBiKYL2xSBpDB","scroll":false,"tagType":"img","id":"p13n_tp_stm","priority":1000,"logerror":false}];var lazyHtml = [];ta.queueForLoad( function() {require('lib/LazyLoad').init({}, lazyImgs, lazyHtml);}, 'lazy load images');</script><script type="text/javascript">ta.keep('startOffset', '');ta.store('page.geo', "1021220");ta.store('page.location', "7570638");ta.store('page.urlSafe', "http%3A__2F____2F__www__2E__tripadvisor__2E__it__2F__LocationPhotoDirectLink__2D__g1021220__2D__d7570638__2D__i139063888__2D__Kura__5F__Soba__5F__Nakaya__2D__Naka__5F__Ibaraki__5F__Prefecture__5F__Kanto__2E__html");ta.store('facebook.disableLogin', false);ta.store('facebook.apiKey', "f1e687a58f0cdac60b7af2317a5febb3");ta.store('facebook.appId', "162729813767876");ta.store('facebook.appName', "tripadvisor");ta.store('facebook.taServerTime', "1502507148");ta.store('facebook.skip.session.check',"false");ta.store('facebook.apiVersion', "v2.5");ta.store("facebook.invalidFBCreds", true);window.fbAsyncInit = ta.support.Facebook.init;ta.queueForLoad(function(){ta.support.Facebook.loadSdkLite("//connect.facebook.net/en_US/sdk.js");}, 0, 'LoadFBJSLite');ta.store('fb.name', "");ta.store('fb.icon', "");if (window.require && require.defined && require.defined('facebook/ip_header_lite')) {require('facebook/ip_header_lite').requestFor(null);} else {ta.keep('facebook.data.request', ['IP_HEADER']);}ta.store('ads.reverseScroll', true);ta.store('ads.disableEventRefresh', true);ta.store('ads.deferEnabled', true);ta.store('ads.gptEnabled', true);ta.store('jwplayerHelper.adUrl', '//pubads.g.doubleclick.net/gampad/ads?env=vp&gdfp_req=1&impl=s&output=xml_vast2&iu=/5349/ta.ta.cn.s/as.japan.kanto&sz=640x480&unviewed_position_start=1&url=//www.tripadvisor.it&ciu_szs=300x250');ta.store('jwplayerHelper.localize.videoWillResume', 'Il video riprenderà tra xx secondi');          ta.store('jwplayerHelper.localize.skipAd', 'Salta');                     ta.store('jwplayerHelper.localize.skipAdTimerText', 'Salta tra xx secondi');var googletag=googletag||{};googletag.cmd=googletag.cmd||[];ta.queueForLoad(function() {ta.store('ads.pageTargeting', {"country": "294232","drs": ["MOB_97","BRAND_5","FL_67","REV_9","REVB_96","REVH_44","RNA_69","SALES_71","SEARCH_65","SEM_67","SITEX_64","VR_40","TTD_90","HSX_17","HSXB_19","ENGAGE_75"],"sess": "5EEBF323FF128B2931C9A80AA2CDA034","pool": "A","kw": "Kura_Soba_Nakaya","dest": ["natparks"],"loctype": "restaurants","platform": "desktop","geo": "1021220","rd": "it","slice": "shared_29","detail": "7570638","PageType": "LocationPhotoDirectLink","hname": "Kura_Soba_Nakaya"});var adStubsJSON = {"adTypes": [{"tgt": "gpt-ad-728x90-970x66","size": [[728,90],[970,66]],"type": "leaderboard_top","base": "/5349/ta.ta.cn.s/as.japan.kanto","custom_targeting": {"pos": "top"}},{"tgt": "gpt-ad-300x250-300x600","size": [[300,250],[300,600]],"type": "medium_rectangle_top","base": "/5349/ta.ta.cn.s/as.japan.kanto","custom_targeting": {"pos": "top","companion": true}},{"tgt": "gpt-ad-preroll","size": [[0,0]],"type": "other","base": "/5349/ta.ta.cn.s/as.japan.kanto","custom_targeting": {"pos": "top"}},{"tgt": "gpt-ad-336x280","size": [[336,280]],"type": "other","base": "/5349/ta.ta.cn.s/as.japan.kanto","custom_targeting": {"pos": "top"}},{"tgt": "gpt-ad-728x90-b","size": [[728,90]],"type": "leaderboard_b","base": "/5349/ta.ta.cn.s/as.japan.kanto","custom_targeting": {"pos": "b"}}]};if( adStubsJSON && adStubsJSON.adTypes ) {ta.store('ads.adStubs', adStubsJSON.adTypes);}ta.store('ads.gptBase', '/5349/ta.ta.cn.s/as.japan.kanto' );ta.common.ads.initDoubleClick();}, 'Load GPT Ad JS');var avlb_hero_photos = "https://static.tacdn.com/css2/modules/avlb_hero_photos-v23083351147b.css";var regflowCss = "https://static.tacdn.com/css2/registration-v23998709377b.css";var overlayCss = "https://static.tacdn.com/css2/overlays_defer-v22795893918b.css";var amenityOverlayCss = "https://static.tacdn.com/css2/amenities_flyout-v21660573287b.css";var amenityLightboxCss = "https://static.tacdn.com/css2/amenities_lightbox-v2806140742b.css";var avlbCss = "https://static.tacdn.com/css2/overlays/alsoViewed-v22190906332b.css";var avlbTestCss = "https://static.tacdn.com/css2/overlays/alsoViewed_test-v2430392620b.css";var VRCrossSellCss = "https://static.tacdn.com/css2/modules/vr_cross_sell-v21748436213b.css";var chkMoreCss = "https://static.tacdn.com/css2/modules/checkmore-v22165273330b.css";var chkMoreSpritesCss = "https://static.tacdn.com/css2/checkmore_pack-it.css";var privateMsgCSS = "https://static.tacdn.com/css2/modules/private_messaging-v2580065107b.css";var recentViewedCSS = "https://static.tacdn.com/css2/common/recently_viewed-v2628695694b.css";var checkRatesLBCss = "https://static.tacdn.com/css2/check_rates_lb-v23816938361b.css";var jfyOverlayCss = "https://static.tacdn.com/css2/p13n/jfy_onboarding.css";ta.queueForReady(function() { new Asset.css("https://static.tacdn.com/css2/overlays/guests_rooms_overlay-v21208296734b.css")});var floatingMapCSS = "https://static.tacdn.com/css2/modules/floating_map-v21951364473b.css";var g_mapV2Css = "https://static.tacdn.com/css2/ta-mapsv2-v22376338078b.css";var t4bSlideshowCSS = "https://static.tacdn.com/css2/modules/t4b_slideshow-v21730547471b.css";var dhtml_cr_redesign_basic = "https://static.tacdn.com/css2/overlays/cr_flyout-v22873065740b.css";var dhtml_cr_redesign_png24 = "https://static.tacdn.com/css2/overlays/cr_flyout-v22873065740b.css";ta.store('checkrates.check_more_re',true);ta.store('checkrates.check_more_re_center_large_hero_photos',true);ta.store('checkrates.check_more_hero_photos',true);ta.store('checkrates.center_overlay',true);ta.store('popunder.similar_hotels', true);ta.store('popunder.similar_hotels_new_rules', true);ta.store('popunder.suppress_half_day', true);ta.store('checkrates.chrome_dates_entry_holding',true);ta.store('checkrates.cr_popunder_by_shift_ctrl',true);ta.store('p13n_client_tracking_tree',true);ta.store('commerce_on_srp',true);ta.store('useHotelsFilterState', true);ta.store('similar_hotels_exit_window_chevron', true);ta.store('hotel_review_low_price_message', true);ta.store('ta.media.uploader.cssAsset', 'https://static.tacdn.com/css2/overlays/media_uploader-v2202388428b.css')ta.meta && ta.meta.linkTracking && ta.queueForLoad(function() { ta.meta.linkTracking.setup(); }, 'setup meta link tracking event');ta.store('assisted_booking_clicks_new_tab', true);try {if(true || false) {if (require.defined('ta/common/behavior/dmp/DMPStore')) {require(['ta/common/behavior/dmp/DMP', 'ta/common/behavior/dmp/DMPStore'], function(dmp, dmpStore) {dmpStore.storeValue("dmpEnabled", true);dmpStore.storeValue("dmpBlueKaiEnabled", true);dmpStore.storeValue("dmpPerfLoggingEnabled", false);dmpStore.storeValue("dmpConsoleDebugEnabled", false);dmpStore.storeValue("dmpMetaExposedEnabled", false);dmpStore.storeValue("dmpBlueKaiEnableMultipleIframes", true);if (require.defined('ta/common/behavior/dmp/Bluekai')) {dmpStore.setActiveDMP(require('ta/common/behavior/dmp/Bluekai'));}else if (require.defined('ta/util/Error')) {require('ta/util/Error').record(null, "DMP JavaScript not found");}dmpStore.storeValue("taUUID", "ZMGapcuykyZmE8eAReoc1F6a7uGtUVlGHx/ANnFEJNQI5Eu9a5JrgQ==");dmpStore.setBehaviors({"ServletName" : ["LocationPhotoDirectLink"],  "POS" : ["dd"],  "p2p_geos_viewed" : ["0"],  "p2p_geos_countries_viewed" : ["0"],  "p2p_geos_us_states_viewed" : ["0"],  "RestaurantID" : ["d7570638"],  "RestaurantRating" : ["4.5"],  "Zone" : ["as.japan.kanto"],  "GeoAudience" : ["natparks",  "natparks_b"],  "GeoID" : ["1021220"]});});}if (ta.common && ta.common.dmp && ta.common.dmp.store) {ta.common.dmp.store.storeValue('dmpMeasureTest', false);ta.common.dmp.store.storeValue('dmpReviewReadTest', false);}if (ta.queueForAfterLoad) {ta.queueForAfterLoad(function() {if (ta.common && ta.common.dmp) {ta.common.dmp.init();}},"initialize DMP framework");}}}catch(e) {if (window.ta && ta.util && ta.util.error && ta.util.error.record) {ta.util.error.record.apply(this, [e, "generic exception in ads_dmp_js.vm"]);}};ta.store('access_control_headers', true);ta.store('secure_registration.enabled',true);ta.store( 'meta.disclaimerLinkText', 'Disclaimer' );ta.store('restaurant_reserve_ui',true);ta.store('hotels_placements_short_cells.overlaysCss', "https://static.tacdn.com/css2/hotels_list_short_cells_overlays-v24192463931b.css" );</script><script class="allowAbsoluteUrls" type="text/javascript">ta.store('ta.registration.currentUrlDefaults', {'url' : 'http%3A__2F____2F__www__2E__tripadvisor__2E__it__2F__LocationPhotoDirectLink__2D__g1021220__2D__d7570638__2D__i139063888__2D__Kura__5F__Soba__5F__Nakaya__2D__Naka__5F__Ibaraki__5F__Prefecture__5F__Kanto__2E__html','partnerKey' : '1','urlKey' : 'c0515c1d078d7fc23'} );</script><script type="text/javascript">ta.store('ta.isIE11orHigher', false);</script><script type='text/javascript'>ta.store("calendar.serverTime", 1502507148953);</script><script type="text/javascript">ta.store("commerce_clicks_in_new_tab.isEnabled", true);</script><script type="text/javascript">ta.store('meta.meta_chevron_module_2014', true);</script><script type="text/javascript">ta.store('assisted_booking_desktop_entry', false);ta.store('ibdm_impression_tracking', true);ta.store('assisted_booking_desktop_entry.logTreePoll', true);</script><script type="text/javascript">ta.store('hr_chevron_redesign', true);ta.queueForLoad(function() { ta.commerce.meta.alignPriceBlocks(); }, 'ta.commerce.meta.alignPriceBlocks');</script><script type="text/javascript">ta.store('guests_rooms_picker.enabled', true);ta.store('guests_rooms_picker_3.enabled', true);ta.store('guests_rooms_picker_4.enabled', true);ta.queueForLoad(function() {ta.widgets.calendar.updateGuestsRoomsPickerDataFromCookie();ta.widgets.calendar.updateGuestsRoomsPickerUI();}, 'update_guests_picker');</script><script type="text/javascript">require(['ta/Core/TA.Store'], function(taStore) {taStore.store('singular_room_da', 'camera');taStore.store('plural_rooms_da', 'camere');taStore.store('rgPicker.nRooms',   ['0 camera','1 camera','2 camere','3 camere','4 camere','5 camere','6 camere','7 camere','8 camere'    ]);taStore.store('singular_guest_da', 'ospite');taStore.store('plural_guests_da', 'ospiti');taStore.store("rgPicker.nGuests",   ['0 ospite','1 ospite','2 ospiti','3 ospiti','4 ospiti','5 ospiti','6 ospiti','7 ospiti','8 ospiti','9 ospiti','10 ospiti','11 ospiti','12 ospiti','13 ospiti','14 ospiti','15 ospiti','16 ospiti','17 ospiti','18 ospiti','19 ospiti','20 ospiti','21 ospiti','22 ospiti','23 ospiti','24 ospiti','25 ospiti','26 ospiti','27 ospiti','28 ospiti','29 ospiti','30 ospiti','31 ospiti','32 ospiti','33 ospiti','34 ospiti','35 ospiti','36 ospiti','37 ospiti','38 ospiti','39 ospiti','40 ospiti','41 ospiti','42 ospiti','43 ospiti','44 ospiti','45 ospiti','46 ospiti','47 ospiti','48 ospiti','49 ospiti','50 ospiti','51 ospiti','52 ospiti','53 ospiti','54 ospiti','55 ospiti','56 ospiti','57 ospiti','58 ospiti','59 ospiti','60 ospiti','61 ospiti','62 ospiti','63 ospiti','64 ospiti'    ]);taStore.store("rgPicker.nAdults",   ['0 ospite','1 ospite','2 ospiti','3 ospiti','4 ospiti','5 ospiti','6 ospiti','7 ospiti','8 ospiti','9 ospiti','10 ospiti','11 ospiti','12 ospiti','13 ospiti','14 ospiti','15 ospiti','16 ospiti','17 ospiti','18 ospiti','19 ospiti','20 ospiti','21 ospiti','22 ospiti','23 ospiti','24 ospiti','25 ospiti','26 ospiti','27 ospiti','28 ospiti','29 ospiti','30 ospiti','31 ospiti','32 ospiti'    ]);taStore.store('rooms_guests_picker_update_da', 'Aggiorna');taStore.store("best_prices_with_dates_21f3", 'Migliori tariffe per il periodo dal \074span class=\"dateHeader inDate\"\076checkIn\074/span\076 al \074span class=\"dateHeader outDate\"\076checkOut\074/span\076');});</script><script type="text/javascript"></script><script type="text/javascript">ta.store('commerce_history_injection.enabled', true);ta.queueForLoad(function() {if( !window.history || !window.history.state || !window.history.state.fromBackClick ) {return;}delete window.history.state.fromBackClick;ta.trackEventOnPage("COMMERCE_HISTORY_INJECT", "back_button_clicked", "");ta.fireEvent('backToHistoryInject', 'abcFocus');}, 'commerce_history_injection');</script><script type="text/javascript">ta.localStorage && ta.localStorage.set('latestPageServlet', 'LocationPhotoDirectLink');</script><script type="text/javascript">ta.queueForLoad(function() {if(!ta.overlays || !ta.overlays.Factory) {var cancel = pageServlet == 'Hotels' && document.location.href.match(/-g\d/);if (!cancel) {ta.load('ta-overlays');}}}, 'preload ta-overlays');</script><script type="text/javascript">ta.store("feature.hr_css_reduction", true);</script><script type='text/javascript'>ta.store('feature.flat_buttons', true);</script><script type='text/javascript'>ta.store('feature.flat_buttons_sitewide', true);</script><script type='text/javascript'>ta.loadInOrder(["https://static.tacdn.com/js3/bounce_user_tracking-c-v22815385785b.js"])</script><script type="text/javascript">ta.store('tablet_google_search_app_open_same_tab', true);</script><script type='text/javascript'>ta.store("suppressOverlaysAlways", true);</script><script type='text/javascript'>ta.store("js_impression_unified_ajax", true);</script><script type="text/javascript">/* <![CDATA[ */require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'poi_details','handlers',['handlers']);// private JS for POI detailsdefine(["placement"], function(placement) {function checkEmailAction(event, elem, email, locId, emailSubj, action) {window.location = 'mailto:' + email + '?subject=' + emailSubj;new Request({url: "/ActionRecord?excludeFromVS=false&action=" + action + "&d=" + locId}).send();}return {checkEmailAction: checkEmailAction};});});require(['ta/p13n/placements','$prp/poi_details/handlers'], function(placements, impl) {window.ta.plc_poi_details_0_handlers = placements.load('poi_details','handlers.js', { 'name': 'poi_details', 'occurrence': 0, 'id': 'taplc_poi_details_0', 'location_id': 1021220, 'servletName': 'LocationPhotoDirectLink','servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'meta_hr_mini_meta_pricing_based','handlers',['handlers']);/*jshint nonew: false *//*jshint unused:false */define(["widget", "vanillajs", "commerce/offerclick", "ta/Core/TA.Record", "api-mod", 'overlays/Overlay', 'overlays/styles/popover', 'overlays/position', 'overlays/options/fadeInOut', 'overlays/options/maxWidth'], (function(widget, vanilla, offerclick, taRecord, api, Overlay, Popover, Position, FadeInOut, MaxWidth) {// get the widget element with all the required classvar _packagesToolTipControlElement = widget.element && widget.element.querySelector('.packagesTooltipControl');// if such an element exists (is truthy) then we have found a packages chevron, which has hac complete, and// our test is on.if (!!_packagesToolTipControlElement) {var contentSpan = _packagesToolTipControlElement.querySelector('.packagesOverlayContents');var container = contentSpan.querySelector('.packagesOverlayContentsContainer');container.className += " " + widget.element.className;var overlay = new Overlay(_packagesToolTipControlElement,Popover(_packagesToolTipControlElement, 'right', 'small', '', contentSpan.innerHTML),MaxWidth(100),Position.right(),FadeInOut('fade_normal', 5000));overlay.show();}return {clickOffer: function(event, elem) {var token=elem.getAttribute("data-clickToken");if (token) {offerclick.clickEvent(event, elem, token);} else {ta.meta.link.click(event, elem);}// HOT:5307: Track when the user clicks an offer without taxes and fees (they are probably included in the price)var taxesValue = elem.getAttribute('data-taxesvalue');if (!taxesValue || taxesValue === "0") {taRecord.trackEventOnPage("COMMERCE_CLICK", elem.hasClass("bookableOffer") ? "sherpa_click" : "meta_click", "zero_tax");}//HOT-7336: Track when the user clicks on an Expedia offer with free cancellationif (api.hasClass(elem, "hasFreeCancellation")) {taRecord.trackEventOnPage("Meta_Free_Cancel_Click", "Hotel_Review", "Commerce");}}};}).bind({}));});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'common_base_dropdown','handlers',['handlers']);define(["widget", "vanillajs", "ta/Core/TA.Record"], function (widget, vanilla, taRecord) {function track(action) {action && taRecord.trackEventOnPage(action, 'viewall_click');}return {track: track};});});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'meta_view_all_text_links','handlers',['handlers']);define(["widget", "vanillajs", "commerce/offerclick"], function (widget, vanilla, offerclick) {function clickOffer(event, elem) {var token = elem.getAttribute("data-clickToken");offerclick.clickEvent(event, elem, token);}return {clickOffer: clickOffer};});});if (require) {require(['ta/rollupAmdShim'], function(rollupAmdShim) { rollupAmdShim.install([], ["page-model"]); });}else {if (window.ta&&ta.rollupAmdShim) {ta.rollupAmdShim.install([],["page-model"]);}}define('common/DustRenderer', ['Logging'], function(Logging) {return function(template, data) {var dustGlobal = {};if (require.defined('page-model')) {dustGlobal = require('page-model').DUST_GLOBAL;} else {dustGlobal = DUST_GLOBAL;}if (!template || !dust.cache[dustGlobal.LOCALE + template]) {throw new Error('Template is missing for ' + template);}var start = new Date().getTime();var blob = dust.makeBase(dustGlobal).push(data);var output = '';dust.render(dustGlobal.LOCALE + template, blob, function (err, out) {if (err) {throw err;}output = out;});var totalTime = (new Date().getTime() - start);if (totalTime > 5) {Logging.warn('Template ' + template + ' took ' + totalTime + 'ms to render');}return output;};});define('overlays/styles/flyout', ['vanillajs', 'api-mod'], function(vanilla, api) {'use strict';function buildDOM(classes) {this.container = api.createElement('div', {'class': 'ui_overlay ui_flyout ' + classes});this.contentElement = this.container;}var Overlay = function(content, classes) {return function() {buildDOM.call(this, classes || this.sourceElement.getAttribute('data-flyout') || '');this.updateContent(content);};};return Overlay;});define('overlays/options/destroyOnHide', ['vanillajs'], function(vanilla){return function() {this.hide = function(hideTrigger) {if (!this.container.overlay) {return;}delete this.container.overlay;this.domParent.removeChild( this.container );this.emit('hide', { trigger: hideTrigger });this.emit('destroy', { trigger: hideTrigger });this.sourceElement = null;this.contentElement = null;return this;};};});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'global_nav_action_trips','handlers',['handlers']);/*** Created by huihongwang on 6/1/17.*/define(['placement', 'lib/jquery-amd', 'page-model', 'common/Radio','ta/Core/TA.Record', 'utils/localstorage', 'common/DustRenderer','overlays/position', 'overlays/styles/flyout', 'overlays/options/destroyOnHide', 'overlays/options/autoReposition'], function(placement, $, pageModel, Radio,Tracking, Storage, DustRenderer,Position, Flyout, DestroyOnHide, AutoReposition) {'use strict';var radio = Radio('global-nav');var $root = $('#' + placement.id);var $testEl = $root.find('.my-trips-dropdown-test');var $controlEl = $root.find('.my-trips-dropdown-control');var OVERLAY_NAME = 'my-trips-dropdown-test-overlay';var OVERALY_AUTOCLOSE_TIMEOUT = 7 * 60 * 1000;var STORAGE_TEST_KEY_PREFIX = 'my-trips-dropdown-test';var STORAGE_CONTROL_KEY_PREFIX = 'my-trips-dropdown-control';var STORAGE_SKIP_KEY = 'my-trips-dropdown-skip';var csrf_token = require('page-model').JS_SECURITY_TOKEN;var servletName = require('page-model').session.pageServlet;var _getRecentLocations = function(onSuccess) {$.ajax({type: 'GET',url: '/data/1.0/recent/locations',data: {limit: 21},beforeSend: function(xhr) {xhr.setRequestHeader('X-Requested-By', csrf_token);},success: onSuccess});};var _getTripLists = function(onSuccess) {$.ajax({type: 'GET',url: '/data/1.0/trips/list',data: {limit: 3},beforeSend: function(xhr) {xhr.setRequestHeader('X-Requested-By', csrf_token);},success: onSuccess});};var _isTimeWithin2Hours = function(time) {return (new Date().getTime() - time) < (2 * 60 * 60 * 1000);};var _displayOverlay = function() {var overlayMixins = [new Flyout($testEl[0], 'global-nav-flyout global-nav-utility my-trips-dropdown-test-flyout'),Position.bottomLeft([-20, -3]),DestroyOnHide,AutoReposition];$testEl.on('click', '.ui_close_x', function() {radio.trigger('hide-overlays', OVERLAY_NAME);});radio.trigger('show-overlay', OVERLAY_NAME, $root.find('.masthead-saves')[0], overlayMixins, function() {setTimeout(function(){radio.trigger('hide-overlays', OVERLAY_NAME);}, OVERALY_AUTOCLOSE_TIMEOUT);});};var _isOverlayOnPage = function() {// Detect if there is any existing overlay, notification popup or qualaroo survery on the pagereturn $.find('.ui_notification_container').length || $.find('.ui_overlay').length || $.find('#qual_ol').length;};var _showTest1IfNeeded = function(isInControl, storageKey) {// Current page is POI detailif (!/Hotel_Review|Attraction_Review|Restaurant_Review/.test(servletName)) {return;}_getRecentLocations(function(response) {if (response.data && response.data.length > 2 && _isTimeWithin2Hours(response.data[2].date)) {if (_isOverlayOnPage()) {Storage.set(STORAGE_SKIP_KEY, true);return;}if (!isInControl) {_displayOverlay();}Storage.set(storageKey, true);Tracking.trackEventOnPage(storageKey, "flyout_shown", servletName + "|recents_" + response.data.length, 0, false);}});};var _showTest2IfNeeded = function(isInControl, storageKey) {_getRecentLocations(function(response) {if (response.data && response.data.length >= 2 && !_isTimeWithin2Hours(response.data[1].date)) {if (_isOverlayOnPage()) {Storage.set(STORAGE_SKIP_KEY, true);return;}if (!isInControl) {var message = DustRenderer('saves_masthead_dropdown_test2_string', {numOfItems: response.data.length});$testEl.find('.test-content').html(message);_displayOverlay();}Storage.set(storageKey, true);Tracking.trackEventOnPage(storageKey, "flyout_shown", servletName + "|recents_" + response.data.length, 0, false);}});};var _showTest3IfNeeded = function(isInControl, storageKey) {if (servletName === 'Hotel_Review') {return;}_getRecentLocations(function(response) {if (response.data && response.data.length >= 2 && !_isTimeWithin2Hours(response.data[1].date)) {var openMyTripsIfNeeded = function(isInControl, storageKey) {if (_isOverlayOnPage()) {Storage.set(STORAGE_SKIP_KEY, true);return;}Storage.set(storageKey, true);if (!isInControl) {// Tracking for test group is fired in the "My trips" dropdownradio.trigger('run-my-trips-test-3');} else {Tracking.trackEventOnPage(storageKey, "flyout_shown", servletName + "|recents_" + response.data.length, 0, false);}};if (require('page-model').session.user_id) {_getTripLists(function(response) {if (!response.data || response.data.length == 0) {openMyTripsIfNeeded(isInControl, storageKey);}});} else {openMyTripsIfNeeded(isInControl, storageKey);}}});};var _showTestFlyout = function() {setTimeout(function() {if (Storage.has(STORAGE_SKIP_KEY)) {return;}if ($root.find('.test-container')) {var isTAReferrer = $root.find('.test-container').attr('data-is-ta-referrer');}if ($testEl.length) {var testVersion = $testEl.attr('data-test-version');var storageKey = STORAGE_TEST_KEY_PREFIX + testVersion;// Attempt to show the test flyout base on test versionif (testVersion == '1' && !Storage.has(storageKey)) {_showTest1IfNeeded(false, storageKey);} else if (testVersion == '2' && !isTAReferrer && !Storage.has(storageKey)) {_showTest2IfNeeded(false, storageKey);} else if (testVersion == '3' && !isTAReferrer && !Storage.has(storageKey)) {_showTest3IfNeeded(false, storageKey);}} else if ($controlEl.length) {// The user could have seen overlay if he/she in test groupif (!Storage.has(STORAGE_CONTROL_KEY_PREFIX + '1')) {_showTest1IfNeeded(true, STORAGE_CONTROL_KEY_PREFIX + '1');}if (!Storage.has(STORAGE_CONTROL_KEY_PREFIX + '2') && !isTAReferrer) {_showTest2IfNeeded(true, STORAGE_CONTROL_KEY_PREFIX + '2');}if (!Storage.has(STORAGE_CONTROL_KEY_PREFIX + '3') && !isTAReferrer) {_showTest3IfNeeded(true, STORAGE_CONTROL_KEY_PREFIX + '3');}}}, 800);};if (Storage.enabled) {if (document.readyState === 'complete') {_showTestFlyout();} else {$(window).ready(_showTestFlyout);}}});});require(['ta/p13n/placements','$prp/global_nav_action_trips/handlers'], function(placements, impl) {window.ta.plc_global_nav_action_trips_0_handlers = placements.load('global_nav_action_trips','handlers.js', { 'name': 'global_nav_action_trips', 'occurrence': 0, 'id': 'taplc_global_nav_action_trips_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});if (require) {require(['ta/rollupAmdShim'], function(rollupAmdShim) { rollupAmdShim.install([], ["ta"]); });}else {if (window.ta&&ta.rollupAmdShim) {ta.rollupAmdShim.install([],["ta"]);}}require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'masthead_search','handlers',['deferred/lateHandlers','handlers']);/*** Private javascript for masthead_search placement*/define(["placement","lib/jquery-amd","ta","ta/Core/TA.Store",'ta/Core/TA.Event','utils/throttle','common/Radio'],function (placement, $, ta, taStore, taEvent, throttle, Radio) {var radio = Radio('global-nav');function prepareTypeaheadParameters() {if (placement.params && 'typeahead_to_store' in placement.params) {var propertiesToStore = placement.params['typeahead_to_store'];if (propertiesToStore) {for (var property in propertiesToStore) {if (propertiesToStore.hasOwnProperty(property)) {taStore.store(property, propertiesToStore[property]);}}}}}function hideIfLinksCollapsed() {var searchText =  $('.masthead_search_text');searchText.toggleClass('hidden', radio.request('is-hidden-link'));}prepareTypeaheadParameters();var options = taStore.retrieve("typeahead_dual_search_options");if (document.activeElement === $("#GEO_SCOPED_SEARCH_INPUT")[0]) {placement.require(["trjs!deferred/lateHandlers"], function (lh) {lh.whereFocused({type: "dummy"}, document.activeElement);});}else if (document.activeElement === $("#mainSearch")[0]) {placement.require(["trjs!deferred/lateHandlers"], function (lh) {lh.whatFocused({type: "dummy"}, document.activeElement);});}$(window).on('resize', throttle(hideIfLinksCollapsed, 100));return {getOptions: function () {return options;}};});});require(['ta/p13n/placements','$prp/masthead_search/handlers'], function(placements, impl) {window.ta.plc_masthead_search_0_handlers = placements.load('masthead_search','handlers.js', { 'name': 'masthead_search', 'occurrence': 0, 'id': 'taplc_masthead_search_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["deferred/lateHandlers","handlers"], 'params': {"typeahead_to_store":{"typeahead_new_location_label":"NUOVA LOCALITÀ","typeahead_divClasses":null,"typeahead.aliases.travel_forums":["forum","forum","Forum Viaggi","Forum Viaggi"],"typeahead.aliases.travel_guides":["guide","Guide della città"],"typeahead.aliases.flight_reviews":["recensioni sui voli","recensioni di compagnie aeree"],"typeahead.aliases.vacation_rentals":["case vacanza","casa vacanza","Airbnb","Casa vacanza","Case vacanza"],"typeahead_throttle_requests":"true","typeahead.aliases.flights":["Voli","Volo","Volo per","voli per","voli diretti","voli Business Class","voli di ritorno","voli","voli","voli low cost","volo da","voli più economici","solo volo","voli solo andata","voli diretti","voli nazionali","tariffa aerea","voli low cost per","voli per","voli per","voli Business Class per","voli più economici per","voli diretti per","voli nazionali per","voli diretti per","voli solo andata per","tariffe aeree","tariffa aerea","tariffe aeree","tariffa aerea per","tariffe aeree per","tariffa aerea per","tariffe aeree per"],"typeahead_moved_label":"SPOSTATO","typeahead_dual_search_options":{"geoID":1021220,"bypassSearch":true,"staticTypeAheadOptions":{"minChars":3,"defaultValue":"Cerca","injectNewLocation":true,"typeahead1_5":true,"geoBoostFix":true},"debug":false,"navSearchTypeAheadEnabled":true,"isMobileWeb":false,"geoInfo":{"geoId":1021220,"geoName":"Naka","parentName":"Giappone","shortParentName":"Giappone","categories":{"GEO":{"url":"/Tourism-g1021220-Naka_Ibaraki_Prefecture_Kanto-Vacations.html"},"HOTEL":{"url":"/Hotels-g1021220-Naka_Ibaraki_Prefecture_Kanto-Hotels.html"},"ATTRACTION":{"url":"/Attractions-g1021220-Activities-Naka_Ibaraki_Prefecture_Kanto.html"},"EATERY":{"url":"/Restaurants-g1021220-Naka_Ibaraki_Prefecture_Kanto.html"},"FLIGHTS_TO":{"url":"/Flights-g1021220-Naka_Ibaraki_Prefecture_Kanto-Cheap_Discount_Airfares.html"}}}},"typeahead_closed_label":"CHIUSO","typeahead.scoped.all_of_trip":"In tutto il mondo","typeahead_attraction_activity_search":"true","typeahead.aliases.hotels":["hotel","hotel","alloggi","sistemazioni","dove soggiornare","alloggio","alloggi","recensioni di hotel","Hotel e motel","I migliori hotel","I migliori posti dove soggiornare","I migliori alloggi","I migliori hotel e motel","Alloggi","Posto dove soggiornare","Gli hotel più belli","I posti più belli dove soggiornare","Gli alloggi più belli","Gli hotel e i motel più belli ","I 10 hotel più belli","I 10 posti più belli dove soggiornare","Gli 10 alloggi più belli","I 10 hotel e motel più belli "],"typeahead.aliases.things_to_do":["Cose da fare","Attività","attrazioni","attività","cosa fare","visite turistiche","Attrattive","Attrazioni turistiche","Attività","Attrazione","Cosa vedere","Dove andare","Cosa visitare","Le migliori attrazioni","Le migliori attività","Le migliori attrazioni turistiche","Le migliori gite turistiche","Le attrazioni più amate","Le attività più amate","Le attrazioni turistiche più amate","Le gite turistiche più amate","Le 10 attrazioni più amate","Le 10 attività più amate","Le 10 attrazioni turistiche più amate","Le 10 gite turistiche più amate"],"typeahead.aliases.restaurants":["cibo","ristoranti","ristoranti","ristorazione","ristoranti","ristorante","Posto dove mangiare","Ristorante","Dove mangiare","Cosa mangiare","I migliori ristoranti","I migliori posti dove mangiare","Le migliori specialità gastronomiche","Le migliori cucine","I ristoranti più amati","I posti dove mangiare più amati","Le specialità gastronomiche più buone","Le cucine più amate","I 10 ristoranti più amati","I 10 posti dove mangiare più amati","Le 10 specialità gastronomiche più buone","Le 10 cucine più buone"],"typeahead.searchMore.v2":"Cerca \"%\"","typeahead.searchSessionId":"5EEBF323FF128B2931C9A80AA2CDA0341502507148979ssid"}}, 'data': {}});});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'global_nav','handlers',['handlers']);/* jshint newcap:false */define(['placement', 'lib/jquery-amd', 'api-mod', 'utils/throttle', 'ta/Core/TA.Record', 'common/Radio','overlays/Overlay', 'overlays/position', 'overlays/styles/flyout', 'overlays/styles/modal','overlays/options/closeOnMouseOut', 'overlays/options/closeOnMouseAway','overlays/options/destroyOnHide', 'overlays/options/closeOnDocClick','overlays/options/closeOnSourceClick', 'overlays/options/closeOnEscape','overlays/options/ajax', 'overlays/options/autoReposition', 'common/DustRenderer'], function(placement, $, api, throttle, taRecord, Radio,Overlay, Position, Flyout, Modal,CloseOnMouseOut, CloseOnMouseAway, DestroyOnHide, CloseOnDocClick,CloseOnSourceClick, CloseOnEscape, Ajax, AutoReposition, DustRenderer) {'use strict';var placementEl = $('#' + placement.id);var radio = Radio('global-nav');var oldOverlay = null;var overlays = {};var mastheadSavesApp = null;radio.on('hide-overlays', function(overlayName){if (overlayName) {overlays[overlayName] && overlays[overlayName].hide('hide-overlay') && (overlays[overlayName] = null);} else {oldOverlay && oldOverlay.hide('replace-el');}});radio.on('show-overlay', function(overlayName, sourceEl, mixins, onSuccess) {oldOverlay && oldOverlay.hide('new-overlay');var overlay = new Overlay(sourceEl, mixins);overlay.domParent = placementEl.find('.global-nav-overlays-container')[0];overlay.show();onSuccess && onSuccess(overlay);oldOverlay = overlay;overlayName && (overlays[overlayName] = overlay);});radio.reply('is-hidden-link', function() {var allEls = placementEl.find(".global-nav-links-container li");var collapsedEls = allEls.filter(function(idx, el) { return $(el).offset().top > allEls.offset().top; });return collapsedEls.length > 0;});radio.on('run-my-trips-test-3', function() {openMyTrips(false, true);});function checkForPersistentGlobalNav() {var persistentGlobalNav = $('.global-nav-persistent', placementEl);if (persistentGlobalNav.length) {persistentGlobalNav.toggleClass('fixed', $(window).scrollTop() > placementEl.offset().top);}}var _onSuccessLoginRefresh = (function(response) {window.userLoggedIn = true;// Update the masthead, but keep some of the old content.// This is because the AJAX servlet does not generate the correct content// for the original page (instead, it generates it for /MetaPlacementAjax).// Note this uses the IDs to match each "old" element with its corresponding "new" element.var oldMenus = $("<div>").append(placementEl.find('.global-nav-no-refresh'));placementEl.html(response);placementEl.find('.global-nav-no-refresh').each(function(idx, el) {$(el).replaceWith(oldMenus.find('#' + el.getAttribute('id'))[0]);});if (mastheadSavesApp) {var isInCreateTripFlow = mastheadSavesApp.isInCreateTripFlow();mastheadSavesApp && mastheadSavesApp.destroy() && (mastheadSavesApp = null);openMyTrips(isInCreateTripFlow, false);} else {if (oldOverlay) {oldOverlay.hide('replace-el');}}}).bind(placementEl);var _getRequestOptionsForLoginRefresh = function() {return {// This should not be necessary, but for some reason placements// seems tightly coupled with the location storeskipLocation: placement.location_id <= 0,returnTo: document.location.pathname + (document.location.search||'') + (document.location.hash||'')};};var _trackNavClick = function(elmt, category) {var trackingLabel = $(elmt).data('trackingLabel');// Handle links to /# (Help Center) or links opening new windowif(/\/#\s*$/.test(elmt.href) || elmt.target == '_blank') {taRecord.trackEventOnPage(category, 'click', trackingLabel);} else {taRecord.setEvtCookie(category, 'click', trackingLabel, 0, elmt.href);}};// When login state changes, request the updated global navapi.addEvent(document, 'regOverlay:success',function() {placement.requestAJAXPlacement( _onSuccessLoginRefresh, null, _getRequestOptionsForLoginRefresh());});// Intercept registration links and show the reg overlay insteadplacementEl.on('click', 'a.login-button', function(evt) {if (oldOverlay) {oldOverlay.hide('replace-el');}require('ta/registration/RegOverlay').show(evt, evt.target, {flow: 'CORE_COMBINED',pid: 427,userRequestedForce: 'true'});evt.preventDefault();});// When mousing over the global nav links, show their submenusplacementEl.on('mouseenter', '.global-nav-links-container [data-element]', function(evt) {var elmt = $(this);var linkEl = elmt.find('a').first();if (oldOverlay) {oldOverlay.hide('new-overlay');}// Is there a submenu to show?var menuEl = placementEl.find(elmt.data('element')).clone();if (!menuEl.length) {return;}var overlay = new Overlay(this, new Flyout(menuEl[0], 'global-nav-flyout global-nav-menu'), CloseOnMouseAway, Position.bottomRight([0, 1]), DestroyOnHide);overlay.domParent = placementEl.find('.global-nav-overlays-container')[0];overlay.show();// For tracking clicks to submenu links, we add an attribute to the link being hovered over so we can retrieve// the tracking prefix from the link's tracking-label attribute.linkEl.attr('data-active-menu-trigger', true);$(evt.currentTarget).find('.ui_tab').addClass('hovering');overlay.on('hide', function() {// Remove attribute used for trackinglinkEl.removeAttr('data-active-menu-trigger');$(evt.currentTarget).find('.ui_tab').removeClass('hovering');});oldOverlay = overlay;});// If we're opening the more menu, add any elements that are hidden or collapsed due to spaceplacementEl.on('mouseenter', '.global-nav-links-ellipsis', function(evt) {if (oldOverlay) {oldOverlay.hide('new-overlay');}var allEls = placementEl.find(".global-nav-links-container li");var hiddenEls = allEls.filter(":hidden");var collapsedEls = allEls.filter(function(idx, el) { return $(el).offset().top > allEls.offset().top; });var elsToShow = $().add(hiddenEls).add(collapsedEls).clone();var menuEl = placementEl.find('.global-nav-links-menu-more').clone();menuEl.prepend(elsToShow);var overlay = new Overlay(this, new Flyout(menuEl[0], 'global-nav-flyout global-nav-menu'), CloseOnMouseAway, Position.bottomRight([0, 1]), DestroyOnHide);overlay.domParent = placementEl.find('.global-nav-overlays-container')[0];overlay.show();$(evt.currentTarget).find('.ui_tab').addClass('hovering');overlay.on('hide', function() {$(evt.currentTarget).find('.ui_tab').removeClass('hovering');});oldOverlay = overlay;});// When clicking on a utility link, open the submenu, if one is availableplacementEl.on('click', '.global-nav-utility-activator', function(evt) {var elmt = $(this);// Is there a submenu to show?var menuEl = placementEl.find(elmt.data('element')).clone();if (!menuEl.length) {return;}if (oldOverlay) {if (oldOverlay.sourceElement == this){oldOverlay.isOpen() ? oldOverlay.hide('close') : oldOverlay.show();return; // don't re-open the same overlay.}else {oldOverlay.hide('new-overlay');}}// Create a new overlaymenuEl = menuEl.clone();var overlay = new Overlay(this,new Flyout(menuEl[0], 'global-nav-flyout global-nav-utility'),CloseOnDocClick,Position.bottomLeft([-20, -3]),AutoReposition);overlay.domParent = placementEl.find('.global-nav-overlays-container')[0];overlay.show();elmt.addClass('menu-open');$(evt.currentTarget).find('.ui_icon').addClass('hovering');overlay.on('hide', function() {elmt.removeClass('menu-open');$(evt.currentTarget).find('.ui_icon').removeClass('hovering');});oldOverlay = overlay;});placementEl.on('click', '[data-track-profile-dropdown-open]', function() {var event = require('page-model').session.loggedIn ? "Signed_in_profile_dropdown" : "Signed_out_profile_dropdown";taRecord.trackEventOnPage('UtilityNav', 'open', event);});// When mousing over a menu in the dropdown, open the submenuplacementEl.on('mouseenter', '.expandSubItem', function() {var elmt = $(this);elmt.addClass('active');elmt.siblings('.expandSubItem').removeClass('active');var submenuEl = elmt.find('.secondSubNav').clone();var targetEl = elmt.parents('.ui_overlay');var overlay = new Overlay(this, new Flyout(submenuEl[0]), CloseOnMouseOut, DestroyOnHide);overlay.domParent = targetEl[0];submenuEl.css('display', 'block');overlay.show();});// When clicking on my tripsplacementEl.on('click', '.masthead-saves', function(evt) {if (mastheadSavesApp) {if (oldOverlay) {oldOverlay.hide('new-overlay');}mastheadSavesApp && mastheadSavesApp.destroy() && (mastheadSavesApp = null);taRecord.trackEventOnPage('TopNav', 'mytrips_dropdown_cancel');} else {openMyTrips(false, false, evt.currentTarget);$(evt.currentTarget).find('.ui_icon').addClass('hovering');}});var openMyTrips = function(inCreateTripFlow, runTest3, elmt) {if (oldOverlay) {oldOverlay.hide('new-overlay');}// Create a new overlayvar overlay = new Overlay(placementEl.find('.masthead-saves')[0],new Flyout('', 'global-nav-flyout global-nav-utility trips-flyout-container'),CloseOnDocClick.withoutTouchEvents,Position.bottomLeft([-20, -3]),DestroyOnHide,AutoReposition);overlay.domParent = placementEl.find('.global-nav-overlays-container')[0];overlay.show();placementEl.find('.trips-flyout-container').addClass('hide-arrow'); // To make sure the overlay arrow is shown together with the masthead saves viewoldOverlay = overlay;require(['trdust!masthead-saves-dust', 'trdust!styleguide-dust', 'trjs!masthead-saves', 'trcss!masthead-saves'],function(dustModule, module, styleSheetOK) {setTimeout(function () {mastheadSavesApp = new window.MastheadSavesApp();mastheadSavesApp.start({inCreateTripFlow: inCreateTripFlow,runTest3: runTest3});overlay.on('hide', function(evt) {mastheadSavesApp && mastheadSavesApp.destroy() && (mastheadSavesApp = null);taRecord.trackEventOnPage('TopNav', 'mytrips_dropdown_cancel');if (elmt) {$(elmt).find('.ui_icon').removeClass('hovering');}});placementEl.find('.trips-flyout-container').removeClass('hide-arrow');}, 0);});}.bind(placementEl);var clone = function(from, to) {var toEl = $(to, placementEl);if (!toEl.length) {return;}toEl.empty();var fromEl = $(from, placementEl);if (!fromEl.length) {return;}fromEl.clone().appendTo(toEl);};placementEl.on('click', '.global-nav-hamburger', function() {taRecord.trackEventOnPage('TopNav', 'open', 'sidebar');clone('.global-nav-links-menu', '.sidebar-nav-links');$('.sidebar-nav-container', placementEl).removeClass('off-canvas');$('.sidebar-nav-backdrop', placementEl).addClass('showing');$('body').addClass('has-modal-open');});placementEl.on('click', '.sidebar-nav-close,.sidebar-nav-backdrop', function() {taRecord.trackEventOnPage('TopNav', 'close', 'sidebar');$('.sidebar-nav-container', placementEl).addClass('off-canvas');$('.sidebar-nav-backdrop', placementEl).removeClass('showing');$('body').removeClass('has-modal-open');});placementEl.on('click', '#global-nav-HelpDesk', function () {var sourceElem = this;placement.require(["trcss!src/build/required/help_center_overlay"], function(){var overlay = new Overlay(sourceElem, [Modal(null, '', 'help_center'),CloseOnEscape,Position.cssCentered(),CloseOnDocClick,Ajax("/uvpages/helpCenterOverlay.html")]);overlay.show();});});placementEl.on('click', '.global-nav-profile-menu a.subLink[data-tracking-label], .sidebar-nav-profile a.subLink[data-tracking-label]', function() {_trackNavClick(this, 'UtilityNav');});// Catches all of the non-submenu links that require tracking// Links only qualify if they have the data-tracking-label attribute.placementEl.on('click', 'a.global-nav-link[data-tracking-label]', function() {_trackNavClick(this, 'TopNav');});// Tracking for links in submenus works by looking up the active-menu-trigger// (link that triggered the dropdown) and using it's tracking-label as a prefixplacementEl.on('click', 'a.subLink', function() {var triggerEl = placementEl.find("[data-active-menu-trigger][data-tracking-label]");if(!triggerEl.length){return; // Continue request without tracking}var trackingLabel = triggerEl.data('trackingLabel') + "_sublink";// Handle links to /# (Help Center) or links opening new windowif(/\/#\s*$/.test(this.href) || this.target ) {taRecord.trackEventOnPage('TopNav', 'click', trackingLabel);} else {taRecord.setEvtCookie('TopNav', 'click', trackingLabel, 0, this.href);}});// Track logo clicksplacementEl.on('click', '.global-nav-logo', function() {taRecord.setEvtCookie('TopNav', 'click', 'TAlogo', 0, '/Home');});$(window).on('scroll', throttle(checkForPersistentGlobalNav, 100));});});require(['ta/p13n/placements','$prp/global_nav/handlers'], function(placements, impl) {window.ta.plc_global_nav_0_handlers = placements.load('global_nav','handlers.js', { 'name': 'global_nav', 'occurrence': 0, 'id': 'taplc_global_nav_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'lpdl_photo_carousel','handlers',['handlers']);// private JS to render big photo carousel on /HRdefine(["placement"], function(placement) {var _currentPhotoId = -1;var _currentReviewId = -1;function switchPhoto(photoId, reviewid) {if (-1 == _currentPhotoId) {if (!ta.has('lpdl_default_photo')) {return; // TODO WARN}_currentPhotoId = ta.retrieve('lpdl_default_photo');}if (-1 == _currentReviewId) {if (ta.has('lpdl_default_review')) {_currentReviewId = ta.retrieve('lpdl_default_review');}}// Switch the Photoif (_currentPhotoId == photoId){return;}var divnew = ta.id("photo_"+photoId);var divold = ta.id("photo_"+_currentPhotoId);if (null == divnew || null == divold) {// TODO errorreturn ;}divold.style.display="none";var oldMediaTypeElmt = ta.id("photo_" + _currentPhotoId + "_mediatype");if (oldMediaTypeElmt && oldMediaTypeElmt.value == "video"){stopLocationVideo();}divnew.style.display="block";var mediaTypeElmt = ta.id("photo_" + photoId + "_mediatype");if (mediaTypeElmt) {if (mediaTypeElmt.value == "video") {showVideo(photoId);}else {var videoPlayerElmt = ta.id("LOC_PHOTOS_VIDEO_PLAYER");if (videoPlayerElmt) {videoPlayerElmt.style.display = "none";}}}_currentPhotoId = photoId;// Switch the reviewif ( -1 == _currentReviewId || typeof reviewid === 'undefined' || reviewid === null) {return; // WARN}if (reviewid < 0) {return; // WARN}var revid = "review_" + _currentReviewId.toString();var divRev = ta.id(revid);if (null == divRev) {// TODO warnreturn;}var sreview = reviewid.toString();divRev.id = "review_" + sreview;_currentReviewId = reviewid;if (reviewid == 0) {divRev.innerHTML = "";  // Photo has no review, clear the review}else {showReviewBlock(sreview,'rblock', '0', true); // call /UserReviewController to get the review}}return {switchPhoto: switchPhoto};});});require(['ta/p13n/placements','$prp/lpdl_photo_carousel/handlers'], function(placements, impl) {window.ta.plc_lpdl_photo_carousel_0_handlers = placements.load('lpdl_photo_carousel','handlers.js', { 'name': 'lpdl_photo_carousel', 'occurrence': 0, 'id': 'taplc_lpdl_photo_carousel_0', 'location_id': 1021220, 'servletName': 'LocationPhotoDirectLink','servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'global_footer','handlers',['handlers']);define(['placement', 'vanillajs', 'utils/ajax'], function(placement, vanillajs, ajax) {return {getFullDisclaimerText: function(el){ajax({url: "/TAMGFooterAjax",success: function(e) {el.parentElement && (el.parentElement.innerHTML = e);},data: {'a':'SHOW_FULL_DISCLAIMER'},evalScripts: true,method:'get'});}};});});require(['ta/p13n/placements','$prp/global_footer/handlers'], function(placements, impl) {window.ta.plc_global_footer_0_handlers = placements.load('global_footer','handlers.js', { 'name': 'global_footer', 'occurrence': 0, 'id': 'taplc_global_footer_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'homepage_tripadvisor_footer_links','handlers',['deferred/HelpCenterOverlay','handlers']);define(["widget", 'lib/jquery-amd',"ta/util/Cookie", 'ta/util/ActionRecord'], function(widget, $,taCookie, Track) {'use strict';// called onclick by the wrapper divfunction _checkForPid(event) {var target = event ? (event.srcElement || event.target) : null;if (target && target.getAttribute("data-pid")) {taCookie.setPIDCookie(target.getAttribute("data-pid"));}}$(widget.element).on("click", '.js_click[data-id="help_center"]', function(){var el = this;var url = $(el).data('url');widget.require(['trjs!deferred/HelpCenterOverlay', 'trcss!src/build/required/help_center_overlay'], function(o) {o.open(el, url);});});$(widget.element).on("click", ".footerLink", function(event) {var actionPrefix = "Footer_";var link = $(this);var action = link.data('trackAction');if (!action) {return;}var opensNewWindow = ("_blank" == link.attr("target"));if (link.is("a") && !opensNewWindow) {event.preventDefault();Track.record(actionPrefix + action).always(function() {window.location = link.attr("href");});} else {Track.record(actionPrefix + action);}});return {checkForPid : _checkForPid};});});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'homepage_footer_pickers','handlers',['handlers']);/* jshint newcap:false */define(['widget', 'lib/jquery-amd','ta/Core/TA.Record'], function(widget, $,taRecord) {'use strict';function _dropdown(evnt, elmt, widgetType, data) {evnt && evnt.stopPropagation();elmt.onclick = null;widget.require(['trjs!styleguide/overlays/Flyout','trjs!overlays/support/widgets', 'trjs!overlays/support/remoteWidget','trcss!src/build/styleguide/ui_overlays/flyouts'], function(Flyout, Widget, RemoteWidget) {Flyout(evnt, elmt, Widget(widget), RemoteWidget(widgetType, {}, data));});}return {showPos: function _togglePosPickerOverlay(evnt, elmt){var posDataEl = $(widget.element).find('.point_of_sale_data');_dropdown(evnt, elmt, 'POS_PICKER',{pageFeature: posDataEl.data('page-feature') || window.pageFeature || '',localeCodes: posDataEl.data('locale-codes') || window.localeCodes || '',relativeUrl: document.location.pathname + (document.location.search||'') + (document.location.hash||'')});var currLocale = posDataEl.data('currentLocale');taRecord.trackEventOnPage('POS_PICKER', 'Open', currLocale);},showCurrency : function(evnt, elmt){_dropdown(evnt, elmt, 'CURRENCY_PICKER');}};});});require(['ta/prwidgets'], function(widgets) {var define = widgets.define.bind(widgets,'homepage_tripadvisor_horizontal_footer_links','handlers',['handlers']);define(["widget", 'lib/jquery-amd', "ta/popups/PopUtil", 'ta/util/ActionRecord'],function(widget, $, popUtil, Track) {'use strict';$(widget.element).on('click', '.js_click[data-id="cookie-consent"]', function () {popUtil.cookieSettingsPanel();});$(widget.element).on('click', '.footer_link', function(event) {var elmt = $(this);var actionPrefix = "Footer_";var action = elmt.data('trackAction');if (!action) {return;}if (elmt.is('a')) {event.preventDefault();Track.record(actionPrefix + action).always(function() {window.location = elmt[0].href;});}Track.record(actionPrefix + action);});});});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'document_cookie_banner','handlers',['handlers']);define(['placement', 'lib/jquery-amd', 'ta/util/Cookie', 'ta/Core/TA.Event','ta/popups/PopUtil'], function(placement, $, taCookie, taEvent,PopUtil){'use strict';taEvent.queueForAfterLoad(function(){var $placement = $('#' + placement.id);$(document.body).prepend($placement);$placement.find('p span').on('click', function(){PopUtil.cookieSettingsPanel();});$placement.addClass('showing');var smartbanner = $('#smartbanner');if (smartbanner[0]) {$placement.addClass('smart-banner-top');}$placement.css({marginTop: -$placement.height()}).animate({marginTop: 0}, {duration: 'long',complete: function() {taEvent.fireEvent("showingCookieConsentBanner");}});// Drop a cookie to signify that the banner has been shown to the user.// This cookie is checked on the server.taCookie.write('cookieconsent', '1', taCookie.ONE_HOUR);}, 'placement: document_cookie_consent');});});require(['ta/p13n/placements','$prp/document_cookie_banner/handlers'], function(placements, impl) {window.ta.plc_document_cookie_banner_0_handlers = placements.load('document_cookie_banner','handlers.js', { 'name': 'document_cookie_banner', 'occurrence': 0, 'id': 'taplc_document_cookie_banner_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["handlers"], 'params': {}, 'data': {}});});require(['ta/p13n/placements'], function(placements) {var define = placements.define.bind(placements,'global_nav_geopill','handlers',['deferred/GeoSearch','handlers']);/* jshint newcap:false */define(['placement', 'lib/jquery-amd', 'page-model', 'ta/Core/TA.Record', 'utils/urlutils'], function(placement, $, pageModel, Tracking, urlutils) {'use strict';var $root = $('#' + placement.id);var $flyout = $root.find('.ui_flyout');var $line = $root.find('.ui_underline');var $caret = $root.find('.ui_pill .ui_icon');var pillContainerClass = '.global-nav-geopill';var GEO = +$root.find(pillContainerClass).data('id');function hide(evnt) {// Don't hide if the user is clicking on the flyoutvar flyoutContainsTarget = $.contains($flyout[0], evnt.target);var flyoutIsTarget = $flyout.is($(evnt.target));if (evnt && (flyoutContainsTarget || flyoutIsTarget)) {return;}$flyout.removeClass('is-active');$caret.removeClass('caret-up').addClass('caret-down');$(document).off('click', hide).off('touchstart', hide);}$root.on('click', pillContainerClass, function (evnt) {$flyout.hasClass('is-active') ? hide(evnt) : show();}).one('click', pillContainerClass, function () {Tracking.trackEventOnPage('TopNav', 'click', 'GeoPicker');placement.require(["trjs!deferred/GeoSearch"], function (GeoSearch) {GeoSearch($root,$flyout,$root.find('input[type=text]')[0],GEO,buildUrl,getServlet);});});function show(evnt) {$flyout.addClass('is-active');$caret.removeClass('caret-down').addClass('caret-up');setTimeout(function () {$(document).on('click', hide).on('touchstart', hide);}, 1);$flyout.find('input[type=text]').focus();}function buildUrl(geo) {var oldUrl = pageModel.session.nonPerfectUrl || window.location.pathname;var uri = oldUrl.replace('_Review', 's').replace(/\/(ForumFAQAdmin|ForumItineraryAdmin|ShowTopic)-g\d+-.*/, '/ShowForum-g').replace(/-g.*/, '-g' + geo).replace(/\/AttractionProductDetail.*/, '/Attraction_Products-g' + geo).replace(/\/HotelsList.*/, '/Hotels-g' + geo);// Add search result page specific url logicif (getServlet(oldUrl) == '/Search'){uri = getSearchUri(uri, geo);}// fallback to Tourism if we can't rebuild the URL(uri != oldUrl) || (uri = '/Tourism-g' + geo);return uri;}function getServlet(uri) {return uri.match(/(\/[\w_]+).*/)[1];}function getSearchUri(uri, geo){// Search?geo=60745&q=best+walkvar urlParams = urlutils.getUrlQueryArgs(window.location.search);var query = urlParams['q'];if (query){var params = {q: query,geo: geo};var paramString = $.param(params);return '/Search?' + paramString;}// if there is no query for some reason, let's just fallbackreturn uri;}$root.on('click', '.ui_flyout_results div[data-id]', function () {var id = $(this).data('id');var uri = buildUrl(id);var servlet = getServlet(uri);Tracking.setEvtCookie('TopNav', 'submit_recent', 'GeoPicker', 0, servlet);$flyout.addClass('is-wait');window.location = uri;});$root.on('keyup', 'input[type=text]', function () {$line.text($(this).val());});});});require(['ta/p13n/placements','$prp/global_nav_geopill/handlers'], function(placements, impl) {window.ta.plc_global_nav_geopill_0_handlers = placements.load('global_nav_geopill','handlers.js', { 'name': 'global_nav_geopill', 'occurrence': 0, 'id': 'taplc_global_nav_geopill_0', 'location_id': 1021220, 'servletClass': 'com.TripResearch.servlet.LocationPhotoDirectLink', 'servletName': 'LocationPhotoDirectLink', 'modules': ["deferred/GeoSearch","handlers"], 'params': {"searchSessionId":"5EEBF323FF128B2931C9A80AA2CDA0341502507149004ssid"}, 'data': {}});});require(['ta/prwidgets'], function(prwidgets) {prwidgets.initWidgets(document);});/* ]]> */</script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js3/long_lived_global_legacy-c-v24294967295b.js' data-rup='long_lived_global_legacy'></script><script type='text/javascript' crossorigin='anonymous' src='https://static.tacdn.com/js3/short_lived_global_legacy-c-v24112335545b.js' data-rup='short_lived_global_legacy'></script><div id="IP_IFRAME_HOLDER"></div></body><!-- st: 81 dc: 0 sc: 11 --><!-- uid: WY5wjAoQK2oAAWDg6MwAAAAg --></html>