<!DOCTYPE html><!--[if gt IE 9]><!--> <html lang="ja" class="no-js modern"> <!--<![endif]--><head>    <title>[metatags_title]</title>    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' /><meta http-equiv='X-UA-Compatible' content='IE=Edge,chrome=1' /><meta name="keywords" content="[metatags_keywords]"/><meta name="description" content="[metatags_description]"/><meta name="category" content="Japan" /><meta http-equiv="Content-Language" content="ja_JP" /><meta name="robots" content="noodp,noydir" /><meta property="twitter:card" value="summary_large_image"/><meta property="twitter:site" value="@HuffPostJapan"/><meta name="twitter:description" content="[metatags_description]"><meta property="fb:app_id" content="320197908083217"/><meta property="og:site_name" content="ハフポスト"/><meta property="og:title" content="[metatags_description]"/><meta property="og:type" content="article"/><meta property="og:url" content="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"/><meta property="og:image" content="http://i.huffpost.com/gen/5214346/images/o-KISS-facebook.jpg" /><meta property="og:description" content="[metatags_description]"/><meta property="og:locale" content="ja_JP"/><meta name="sailthru.date" content="Sun, 02 Apr 2017 02:47:30 -0400"><meta name="sailthru.expire_date" content="Mon, 03 Apr 2017 02:47:30 -0400"><meta name="sailthru.image.thumb" content="http://i.huffpost.com/gen/5214346/images/s-KISS-small.jpg"><meta name="sailthru.tags" content="[metatags_keywords]"><meta property="article:publisher" content="https://www.facebook.com/HuffPostJapan"/><meta property="article:section" content="Japan"/><link rel="image_src" href="http://i.huffpost.com/gen/5214346/images/s-KISS-large.jpg" /><meta name="image" content="http://i.huffpost.com/gen/5214346/images/s-KISS-small.jpg" /><meta name="thumbnail" content="http://i.huffpost.com/gen/5214346/images/o-KISS-facebook.jpg" />    <meta name="og:see_also" content="http://www.huffingtonpost.jp/2017/08/08/jgsdf-suppression_n_17704558.html" /><meta name="og:see_also" content="http://www.huffingtonpost.jp/2017/08/08/tetsuma-esaki_n_17704338.html" /><meta name="og:see_also" content="http://www.huffingtonpost.jp/2017/08/08/zeria_n_17704150.html" />    <link rel="shortcut icon" href="/favicon.ico?v=2">    <link rel="alternate" hreflang="ja" href="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"/>    <link rel="alternate" href="android-app://com.huffingtonpost.android/http/www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"/>    <link rel="alternate" href="ios-app://306621789/huffpostnews/?editionID=jp&entryID=15755998"/>    <link rel="alternate" media="only screen and (max-width: 640px)" href="http://m.huffpost.com/jp/entry/15755998" >    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fapp.css" type="text/css">    <link rel="stylesheet" href="http://s1.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fcore.css%2Cphoenix%2Fpageheader.css%2Cphoenix%2Frightrail.css%2Cphoenix%2Fauthor_article.css%2Cphoenix%2Fted.css%2Cphoenix%2Fcolorbox.css%2Cphoenix%2Femail_form.css%2Cphoenix%2Fslideshow%2Fflexslider.css%2Cphoenix%2Fslideshow%2Fstyles.css" type="text/css">    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=liveblog.css%2Cbasic.css%2Csailthru_concierge.css%2Crecipe_gadget.css%2Chp_modules%2Fmodule.sponsor-widgets.css%2Chp_modules%2Fmodule.apps_feeds.css%2C_slideshows%2Finline.css%2C_slideshows%2Fmodules%2Finline.css%2C_slideshows%2Fmodules%2Fparticipation.css%2C_slideshows%2Fmodules%2Fparticipation_new.css%2Ccommercial.css%2Cadd%2Finner.css%2Cemail_share.css%2Cbuttons.css" type="text/css">    <link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=" type="text/css">    <link rel="stylesheet" href="http://s1.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fverticals%2Fjapan.css%2Cphoenix%2Fverticals%2F.css" type="text/css">	    <link rel="canonical" href="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html">    <!--[if lt IE 9]><link rel="stylesheet" href="http://s1.huffpost.com/assets/js.php?v=1501522368&f=conversations%2Fstylesheets%2Fapp.css" /><![endif]-->    <!--[if lte IE 7]><link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fie7.css" type="text/css" /><![endif]-->    <!--[if IE 8]><link rel="stylesheet" href="http://s0.huffpost.com/assets/css.php?v=1501522368&f=phoenix%2Fie8.css" type="text/css" /><![endif]-->	    <script type="text/javascript" src="http://s1.huffpost.com/assets/js.php?v=1501522368&f=jquery-1.7.2.min.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=jquery%2Fjquery.I18N.js%2Clocale%2Fja_JP%2Fpublic.js%2Csprintf-0.7.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=huff.js%2Chp_config.js%2Clazyload-min.js%2Chp_util.js%2Chp_track.js%2Cyui_sub.js%2Chp_liveblog.js%2Chptwitter_anywhere.js%2Cphoenix%2Fcustom.modernizr.js%2Cphoenix%2Ffoundation.min.js%2C_tmp%2Fquick_fan.js%2C_tmp%2Fhp_ads.js%2C_tmp%2Fcommon.js%2Chp_browser.js%2Csubmissions.js%2Cphoenix%2Funderscore.js%2Cphoenix%2Fbackbone.js%2Cphoenix%2Fthreeup.js%2Crecipe_gadget.js%2Clivebetteramerica%2Fmodule.jquerydl.js%2Cphoenix%2Ffollow-huffpost.js%2Cphoenix%2Fsocial-sidebar.js%2Cposts.js%2Cphoenix%2Fnumeral.js%2Cphoenix%2Fsocial_widget_views.js%2Cconversations%2Fbootstrap.js%2Cscroll-track.js%2Cphoenix%2Fjquery.colorbox.js%2Cphoenix%2Fthreeup-carousel.js%2Cphoenix%2Flightbox.js%2Cphoenix%2Fjquery.formparams.js%2Cphoenix%2Fsubmit_correction.js%2C_tmp%2Fquick_subscribe_user.js%2Cphoenix%2Fnewsletter.js%2Chptwitter.js%2Cphoenix%2Flogin.js%2C_tmp%2Fclick_tracker.js%2Cphoenix%2Fimage_loader.js%2Cphoenix%2Fcaption.js%2Cconnect_overview.js%2Cimage_embed.js%2Cswfobject.js%2Cphoenix%2Fhulu_to_5min.js%2C_tmp%2Fevent_module.js%2Cphoenix%2Fslideshow%2Fjquery.flexslider.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-html.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-tracking.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-share.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-main.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-participation.js%2Cphoenix%2Fslideshow%2Fhp-slideshow-participation_new.js%2Cphoenix%2Fyoutube_to_5min.js%2Con-hover-pinterest.js"></script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=facebook.js%2Ccookiesmin.js%2Csnproject.js%2C_tmp%2Fquick_login.js%2Chuffconnect.js%2Cprovider.js%2Cpopup_manager.js%2C_util%2Fuser.js%2Cuser.js"></script>        <script type="text/javascript">        huff.v({"last_deploy_commit_id":"a96b7fc4b3f56dd6867b408104cec2d63b2e6e99","deploy_commit_id":"e1a78edbc81e6d44991c74294064e3348dfe2f4f","deploy_seq":1501522368,"last_deploy_seq":1498589995,"deploy_date":"Mon, 31 Jul 2017 13:32:48 -0400","last_deploy_date":"Tue, 27 Jun 2017 14:59:55 -0400"});    </script>    <script type="text/javascript">// common moduleshuff.use('conf', 'modal', 'image', 'layout', 'cookies', 'user', 'track', 'common', 'promo');</script>    <!-- modulous header -->    <!-- SMARTtag huffpost_pc.article start--><script type='text/javascript'>window.cci_tag_name = "huffpost_pc.article";window.cci_iframe_tag_name = "" || (cci_tag_name + '_iframe');var CM8Server='web-jp.ad-v.jp';var CM8Cat='huffpost_pc.article';var CM8Profile='huff_tag=@instantarticle,パートナーシップ,夫婦,恋,恋愛,愛,社会,結婚,長続き&huff_eid=15755998&huff_ptype=news'</script><script type='text/javascript' src='http://cf.ad-v.jp/adam/cm8adam_1_call.js'></script><!-- SMARTtag huffpost_pc.article end--><script type="text/javascript">window.adTechCallback = function() {  window.adSetHtNm('http://jp.at.atwola.com');  window.adSetNetId('5113.1');  window.adSetAdURL('http://' + (document.domain || 'www.huffingtonpost.com') + (location.port?':'+location.port:'') + '/_uac/2014adpage.html');  window.tacProp={tags:"kvpagetype=bpage:news:slideshow;kventryid=15755998;kvcmsid=hpo:15755998;kveditags=恋愛:長続き:恋:夫婦:結婚:愛:@instantarticle:パートナーシップ:社会;kvvert=news;kvblogger=brittany-wong"};    window.tacProp.tags += ( (typeof window.HPAds!=="undefined") && (typeof window.HPAds.adtech_client_side_inf=="function") ) ? window.HPAds.adtech_client_side_inf() : "";  window.tacProp.tags += ";kvrefd="+window.location.href;  if (typeof window.adSetOthAT=="function") window.adSetOthAT(window.tacProp.tags);  };</script><script src="http://o.aolcdn.com/ads/adsWrapper.js" ></script><script>      window.adTechCallback();  </script><!-- Friendly iframe setup --><script>  window.setIframeHeight = function(obj) {    if (!obj.contentDocument) { return; }    var ad = obj.contentDocument.getElementById('ad_holder');    if (ad.offsetWidth > 1) {      obj.width = ad.offsetWidth;      obj.height = ad.offsetHeight;    }  };  window.asyncLoadIframe = function(js, iframe) {    var iDoc = iframe.contentDocument || iframe.contentWindow.document;    iDoc.open('text/html', 'replace');    iDoc.write('<html><head></head><body><div id="ad_holder"><script>var inDapIF=true;</scr'+'ipt><script src="'+js+'"></scr'+'ipt></div></body></html>');    iDoc.close();    var resize = function() { setIframeHeight(iframe); };    iframe.onload = function() {      // Give the ad 5 secs to load      for (var i=0; i<5000; i+=100) { setTimeout(resize, i); }    };    if (typeof iframe.attachEvent === 'function') { iframe.attachEvent('load', iframe.onload, false); }    return iframe;  };  window.adsIframe = function(w, h, div) {    var iframe = document.createElement('iframe');    var props = {      width: w, height: h,      marginWidth: 0, marginHeight: 0,      frameBorder: 0, scrolling: 'no',      src: 'about:blank'    };    for (var key in props) {      if (props.hasOwnProperty(key)) { iframe.setAttribute(key, props[key]); }    }    div.appendChild(iframe);    return iframe;  };  window.asyncLoadAd = function(js, w, h, div) {    var iframe = adsIframe(w, h, div);    return window.asyncLoadIframe(js, iframe);  };</script><script>if (window.HPAds && window.jQuery) {  HPAds.ad_reload_old = HPAds.ad_reload;  HPAds.ad_reload = function(placement, id) {    jQuery(document).trigger('reloadAd', document.getElementById(id));  };}</script><script>var _HPJS = (function (_mod) {  "use strict";  _mod.loadJS = function (src, options) {    var options = options || {};    var ref = window.document.getElementsByTagName("script")[0];    var script = window.document.createElement("script");    script.src = src;    script.async = options.async;    script.defer = options.defer;    ref.parentNode.insertBefore(script, ref);    return script;  }  _mod.loadJSLater = function (url, timeout) {    var ran = false;    var loader = function () {      if (ran) {        return;      }      ran = true;      _mod.loadJS(url, {async:true});    }    window.addEventListener ?      window.addEventListener("load",loader,false) :      window.attachEvent && window.attachEvent("onload",loader);    // in case the load event never fires    setTimeout(loader, timeout || 15000);  }  _mod.waitForGlobal = function(identifier, cb, poll) {    var test = typeof identifier === "function" ? identifier : function() { return !!window[identifier]; };    var interval;    if(test()) {      cb();    } else {      interval = setInterval(function(){        if(test()) {          cb();          clearInterval(interval);        }      }, poll || 50);    }  };  return _mod;}(_HPJS || {}));</script><!-- debugadcode --><style>.debugadcode-box { z-index:10000; position:relative; }.debugadcode { position:absolute; padding:5px; background-color:rgba(232, 212, 244, 0.85); font-size:0.8rem; color:black; }</style><script>window.debugadcode = function(title, properties, div) {  if (window.location.search.indexOf('debug_ad_code') < 0) return;  var head = '<div><strong>'+title+'</strong></div>'; var body = '';  for (key in properties) { body += '<div><em>'+key+'</em>: '+properties[key]+'</div>'; }  var s = document.getElementsByTagName('script');  var sLast = div || s[s.length - 1];  var d = document.createElement('div');  d.className = 'debugadcode-box';  d.innerHTML = '<div class="debugadcode">'+head+body+'</div>';  sLast.parentNode.insertBefore(d, sLast);}</script><!-- /debugadcode --><script>var googletag = googletag || {};googletag.cmd = googletag.cmd || [];(function() {  var gads = document.createElement('script');  gads.async = true;  var useSSL = 'https:' == document.location.protocol;  gads.src = (useSSL ? 'https:' : 'http:') +  '//www.googletagservices.com/tag/js/gpt.js';  var node = document.getElementsByTagName('script')[0];  node.parentNode.insertBefore(gads, node);    googletag.cmd.push(function() {     googletag.pubads().enableSingleRequest();    googletag.pubads().collapseEmptyDivs();    googletag.enableServices();  });})();</script>    <!-- END modulous header -->            <!-- ads_adtech_header -->        <!-- ads_init_functions -->        <!-- ads_commercial_video -->        <!-- ads_asset_insert -->                	<script type="text/javascript">        var ads_ext_ref_sig = '';    </script><!--esi    <esi:choose>        <esi:when test="$(HTTP_REFERER) has '|dl' || $(QUERY_STRING) has '|dl' || $(HTTP_REFERER) has 'fundrace.' || $(QUERY_STRING) has 'fundrace.'">            <esi:choose>                            <esi:when test="($(HTTP_REFERER) has '|dl') || ($(QUERY_STRING) has '|dl')">                	<esi:text>                    <script type="text/javascript">                        var ads_ext_ref_sig = 'aol_welcome_screen';                    </script>                    </esi:text>                </esi:when>                            <esi:when test="($(HTTP_REFERER) has 'fundrace.') || ($(QUERY_STRING) has 'fundrace.')">                	<esi:text>                    <script type="text/javascript">                        var ads_ext_ref_sig = 'fundrace';                    </script>                    </esi:text>                </esi:when>                        </esi:choose>        </esi:when>    </esi:choose>   --><!--esi	<esi:choose>		<esi:when test="($exists($(HTTP_COOKIE{'ad_ops_bookmarklet'})) && !($(HTTP_HOST) has 'editorial'))">            <script type="text/javascript" src="/ads/bookmarklet/bookmarklet.js"></script>		</esi:when>	</esi:choose>-->    <script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js" async defer></script>		<!-- Parsely tracking params start -->	<script type="application/ld+json">				{					"@context": "http://schema.org",					"@type": "NewsArticle",                    "mainEntityOfPage":{                        "@type":"URL",                        "@id":"http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"                    },                    "headline": "[标题]",                    "author": {                "@type":"Person",                "name":"Brittany Wong"                },					"image":                    {                        "@type":"ImageObject",                        "url":"http://i.huffpost.com/gen/5214346/images/o-KISS-facebook.jpg",                        "width":2000,"height":1000                    },					                    "dateCreated": "2017-04-02T03:07:22Z",                    "datePublished": "2017-04-02T03:07:22Z",				"dateModified": "2017-04-02T03:07:22Z",                    "publisher":{                        "@type":"Organization",                        "name":"The Huffington Post",                        "logo":{                            "@type":"ImageObject","url":"http://s.huffpost.com/images/v/logos/v4/homepage.gif",                            "width":497,                            "height":60                        }                    },                    "description": "&ccedil;&micro;�&aring;&copy;�&atilde;��&aelig;�&sect;&atilde;��&atilde;�&brvbar;&atilde;��&atilde;��&ccedil;��&atilde;��&atilde;��&atilde;�&macr;&atilde;��&aelig;&yen;&frac12;&atilde;��&atilde;��&ccedil;&micro;�&aring;&copy;�&aring;&frac14;�&atilde;�&reg;&egrave;&uml;�&ccedil;�&raquo;&atilde;��&atilde;��&atilde;�&iexcl;&atilde;��&atilde;�&pound;&atilde;�&uml;&ccedil;�&reg;&atilde;��&eacute;�&cent;&atilde;��&atilde;�&brvbar;&atilde;��&auml;&cedil;�&aring;&ordm;&brvbar;&atilde;��&egrave;&ordf;&shy;&atilde;��&atilde;�&sect;&atilde;�&iquest;&atilde;�&brvbar;&atilde;�&raquo;&atilde;��&atilde;��&atilde;��",                    "articleSection": "社会",                    "keywords": ["@instantarticle","結婚","恋愛","長続き","愛","恋","パートナーシップ","夫婦","type:news"],                    "thumbnailUrl": "http://i.huffpost.com/gen/5214346/images/s-KISS-small.jpg",                    "url": "http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"				}			</script>	<!-- Parsely tracking params end -->	<!-- Google Json Markup start -->		<!-- Google Json Markup end -->			</head><body>    <!-- Newsletter ads popup -->        <!-- END Newsletter ads popup -->    <!-- Pinterest follow popup -->        <!-- END Pinterest follow popup -->    <!--modulous_debug_header -->        <!-- END modulous_debug_header -->    <div id="view_mobile_banner" style="display: none; min-width: 1000px; width: 100%; height: 105px; background: url(/images/mobile/view-mobile-bkg.png);background-size: cover; text-align: center;">	<a href="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html?m=true" style="color: #FFF; font-size: 40px; display: inline-block; padding-top: 18px; text-transform: uppercase; width: 100%; height: 105px;">		<img src="/images/mobile/view-mobile-icon.png" style="height: 68px; margin-bottom: -16px;"/>		スマホ版を表示します	</a></div><script> if(window.navigator.userAgent.match(/SCH-I535|SPH-L710|SGH-N064|SGH-N035|SGH-T999|SGH-I747|GT-I9305|GT-I9300|android.+mobile|iphone|ipod|webos|blackberry.+webkit.+mobile|htc|opera\ mini|operamini|iemobile|opera\ mobi|lge|lg|palm|samsung|nokia|windows\ phone|windows\ ce|bb10|blackberry|Mobile.+Firefox/i)) {	document.getElementById("view_mobile_banner").style.display = 'block';}</script>    <!-- RUM header -->    <script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"Vg4HV1FADAMCXFhRDw=="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(15),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,o){try{d?d-=1:i("err",[o||new UncaughtException(t,n,e)])}catch(s){try{i("ierr",[s,c.now(),!0])}catch(u){}}return"function"==typeof f&&f.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t){i("err",[t,c.now()])}var i=t("handle"),a=t(16),s=t("ee"),c=t("loader"),f=window.onerror,u=!1,d=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(l){"stack"in l&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),u=!0)}s.on("fn-start",function(t,n,e){u&&(d+=1)}),s.on("fn-err",function(t,n,e){u&&(this.thrown=!0,o(e))}),s.on("fn-end",function(){u&&!this.thrown&&d>0&&(d-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,w="fn"+h,v="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(w,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(w,function(t,n){i(v,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(18)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(18)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(18)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(18)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,w,"fn-",s)}function i(t){v.push(t),h&&(g=-g,b.data=g)}function a(){for(var t=0;t<v.length;t++)r([],v[t]);v.length&&(v=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(18)(u),l=NREUM.o,p=l.XHR,h=l.MO,m="readystatechange",w=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],v=[];n.exports=u;var y=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(m,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,y),y.prototype=p.prototype,d.inPlace(y.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var g=1,b=document.createTextNode(g);new h(a).observe(b,{characterData:!0})}else f.on("fn-end",function(t){t[0]&&t[0].type===m||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(15),s=t(16),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}finally{c.emit("fn-end",[f.now()],e)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],16:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],17:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],18:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(16),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=h(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[y[e]];return d&&d.push([g,e,r,a]),a}}function p(t,n){v[t]=h(t).concat(n)}function h(t){return v[t]||[]}function m(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",y[e]=n,n in u||(u[n]=[])})}var v={},y={},g={on:p,emit:e,get:m,listeners:h,context:n,buffer:w,abort:a,aborted:!1};return g}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(15),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!x++){var t=b.info=NREUM.info,n=l.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(y,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+b.offset],null,"api");var e=l.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===l.readyState&&i()}function i(){c("mark",["domContent",a()+b.offset],null,"api")}function a(){return E.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-b.offset}var s=(new Date).getTime(),c=t("handle"),f=t(15),u=t("ee"),d=window,l=d.document,p="addEventListener",h="attachEvent",m=d.XMLHttpRequest,w=m&&m.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:m,REQ:d.Request,EV:d.Event,PR:d.Promise,MO:d.MutationObserver};var v=""+location,y={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1026.min.js"},g=m&&w&&w[p]&&!/CriOS/.test(navigator.userAgent),b=n.exports={offset:s,now:a,origin:v,features:{},xhrWrappable:g};t(12),l[p]?(l[p]("DOMContentLoaded",i,!1),d[p]("load",r,!1)):(l[h]("onreadystatechange",o),d[h]("onload",r)),c("mark",["firstbyte",s],null,"api");var x=0,E=t(17)},{}]},{},["loader",2,10,4,3]);</script>    <!-- GA, Data Layer and Omniture -->    <script type="text/javascript">var _gaq = _gaq || [];HPTrack.async = true;HPTrack.getTracker('UA-71081-1');HPTrack.setCustomVar("news", "slides_ajax");HPTrack.setCustomVar("vertical", "Japan");           HPTrack.trackPageview();    (function() {  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);})();bN_cfg = {  h: location.hostname,  p: {"dL_ch":"jp.hpmg","dL_flid":"_","dL_dpt":"slides_ajax","dL_cmsID":"hpo:15755998","dL_author":"Brittany Wong","dL_crtdt":"2017-04-02 02:47:30","dL_pubts":1491116842000,"dL_blogID":2,"dL_tags":"@instantarticle,\u7d50\u5a5a,\u604b\u611b,\u9577\u7d9a\u304d,\u611b,\u604b,\u30d1\u30fc\u30c8\u30ca\u30fc\u30b7\u30c3\u30d7,\u592b\u5a66,\u793e\u4f1a","cobrand":"HuffPost","dL_vid":"video_novideo"}};function runOmni() {  if(typeof HuffPoUtil != "undefined"){  if (HuffPoUtil.getCookie('huffpost_user_id') != '')    s_265.eVar17 = 'huffpost_' + HuffPoUtil.getCookie('huffpost_user_id');  }  s_265.prop54 = 'huffpost';  s_265.pfxID = 'hpo';  s_265.channel = 'jp.hpmg';  s_265.linkInternalFilters = 'javascript:,huffingtonpost.jp';  s_265.prop16 = 'news';  s_265.prop1 = 'slides_ajax';  s_265.prop62 = 'video_novideo';  s_265.prop65 = 'original_content';  s_265.pageName = '[标题]';  s_265.prop9 = 'hpo:15755998';  s_265.prop22 = 'brittany-wong';  s_265.prop23 = '04-02-2017';  s_265.prop12 = "" + document.URL.split('?')[0];  s_265.prop19 = '|instantarticle|結婚|恋愛|長続き|愛|恋|パートナーシップ|夫婦|社会|';  s_265.t();}s_265_account ="aoljphuffpo,aoljp";(function(d){var s = d.createElement('script');s.src = "http://o.aolcdn.com/os/aol/beacon.min.js";d.getElementsByTagName('head')[0].appendChild(s);s = d.createElement('script');s.src = "http://o.aolcdn.com/os/aol/omniture-intl.min.js";d.getElementsByTagName('head')[0].appendChild(s);})(document);</script>    <!-- comScore Tag -->    <script type="text/javascript">    document.write(unescape("%3Cscript src='" + (document.location.protocol == "https:" ? "https://sb" : "http://b") + ".scorecardresearch.com/beacon.js' %3E%3C/script%3E"));</script><script type="text/javascript">    var comscore_data = {        c1:2,        c2:6723616,        c3:"",        c4:"",        c5:"japan",        c6:"",        c15:"",        options: {            url_append: "comscorekw=japan"        }    }    COMSCORE.beacon(comscore_data);</script><noscript>    <img src="http://b.scorecardresearch.com/p?c1=2&c2=6723616&c3=&c4=&c5=japan&c6=&c15=&cj=1" width="1" height="1" alt="" /></noscript>    <!-- end Rum -->    <!-- ads_top_1x1 -->    <div id="modulous_top_1x1" class="ad_spot">    <style type="text/css">  #_snp_tracking {    display:none;  }</style><script type="text/javascript">(function() {var pa = document.createElement('script'); pa.type = 'text/javascript'; pa.charset = "utf-8"; pa.async = true;pa.src = window.location.protocol + "//api.popin.cc/searchbox/huffingtonpost.js";var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(pa, s);})(); </script><style type="text/css">.shares .email{display: none !important;}</style><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'top_1x1', cci: 'start'}); }</script><!-- PLACEHOLDERtag start start--><script type="text/javascript">CM8ShowAd('start');</script><!-- PLACEHOLDERtag start end--></div></div>            <!-- Facebook stuff -->    <div id="fb-root"></div>    <script type="text/javascript">        HPFB.app_id = "320197908083217";        HPFB.api_key = "320197908083217";        HPFB.app_namespace = "FACEBOOK_APP_NAMESPACE";        HPFB.init();        // modal form that encourages user to like HP FB page    	huff.use('yahoofacebook', function(y) { y.likesFromYahoo(); });    </script>    <!--User auth stuff -->    <script type="text/javascript">        HPConfig.locale = "ja_JP";        HPConfig.enable_fb_widgets = 1;        HPVertical = "";    </script>                 <script type="text/javascript">        var zone_info = "japan.news";        HPConfig.current_vertical_name = "japan";        HPConfig.current_vertical_id = 129;        HPConfig.current_web_address = "www.huffingtonpost.jp";        HPConfig.current_uri = "/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html";        HPConfig.entry_bitly_url = "http://huff.to/2nsI0hC";        HPConfig.entry_seo_title = "[标题]";        HPConfig.hp_static_domain = "s.huffpost.com";        HPConfig.inst_type = "prod";        HPConfig.timestamp_for_clearing_js = "0";        HPConfig.wide_format = 0;        HPConfig.entry_id = 15755998;        HPConfig.blog_id = 2;        HPConfig.display_domain = "";        HPConfig.page_type = "bpage";        HPConfig.twitter_signature = "@HuffPostJapan";        HPConfig.current_vertical_color = "#058b7b";        HPConfig.current_vertical_color_light = "#005F4C";        HPConfig.entry_tags = new Array('');        HPConfig.huffsite = "www.huffingtonpost.com";        HPConfig.fb_lang = "ja_JP";        HPConfig.googleplus_lang = "en-US";        HPConfig.image = "http:\/\/i.huffpost.com\/gen\/5214346\/images\/s-KISS-large.jpg";        HPConfig.fb_page_id = "164854427002381";        HPConfig.fb_vertical_name = "Japan";        HPConfig.fb_vertical_handle = "HuffPostJapan";                HPConfig.site='japan';        HPConfig.recaptcha_key = "6Ld6ZcISAAAAAIhkL02obhQNn6tdW47W-t-HcPAO";        HPConfig.bit_ly_key = {"_Note":"bit.ly public key, will generate huff.to links only for whitelisted domains","user_name":"huffpostapi","user_key":"R_d7766e99c939e9f2b0c074c155e98b83"};                        HPConfig.terms_link = "http://www.huffingtonpost.jp/p/huffingtonpostjp-terms-and-conditions.html";        HPConfig.privacy_link = "http://www.huffingtonpost.jp/p/huffingtonpostjp-privacy-policy.html";                HPConfig.slideshow_video_interstitial = "";            </script>    <!-- ads_pushdown -->        <!-- / working -->        <script>        jQuery(window).bind( 'load', function() {            //Twitter            window.twttr = (function (d,s,id) {                var t, js, fjs = d.getElementsByTagName(s)[0];                if (d.getElementById(id)) return; js=d.createElement(s); js.id=id;                js.src="//platform.twitter.com/widgets.js"; fjs.parentNode.insertBefore(js, fjs);                return window.twttr || (t = { _e: [], ready: function(f){ t._e.push(f) } });            }(document, "script", "twitter-wjs"));            //Google+            (function() {                var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;                po.src = 'https://apis.google.com/js/plusone.js';                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);            })();            //StumbleUpon            (function() {                var li = document.createElement('script'); li.type = 'text/javascript'; li.async = true;                li.src = ('https:' == document.location.protocol ? 'https:' : 'http:') + '//platform.stumbleupon.com/1/widgets.js';                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(li, s);            })();            //LinkedIn            jQuery.getScript( '//platform.linkedin.com/in.js', function() { lang: 'en_us' } );            //Pintrest            /* jQuery.getScript( '//assets.pinterest.com/js/pinit.js', function() {}); */        });    </script>      <!-- Tuenti    <script type="text/javascript" src="http://widgets.tuenti.com/widgets.js"></script>    -->    <!--[if lt IE 7]>        <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please [hrefx] to improve your experience.</p>    <![endif]-->    <!-- ads_pushdown -->        <!-- ads_quickread -->        <!-- ads_quickread_most_popular -->        <!-- page_wrapper -->    <!-- classes for page wrapper: wrapper bpage [[entry/blog], wide] -->    <div id="wrapper" class="wrapper bpage entry japan regular">        <!-- ads_sponsored_content_logo -->                <!-- Phoenix buglist -->                <!-- page_header -->		<section class="header">    <!-- AOL navbar for UK -->        <!-- visual_header_area -->    <header class="masthead group">        <!-- ads_leaderboard_flex -->        <div id="modulous_leaderboard_flex" class="ad_spot">    <style type="text/css"> #topnav_margin_btm { margin: 0 !important; } </style><div id="ad_leaderboard_flex" class="ad_wrapper_"><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'leaderboard_flex', cci: 'Lboard'}); }</script><!-- PLACEHOLDERtag Lboard start--><script type="text/javascript">CM8ShowAd('Lboard');</script><!-- PLACEHOLDERtag Lboard end--></div></div><script type="text/javascript">if (typeof HPAds !== 'undefined') { HPAds.ad_onload('div[id^="ad_leaderboard_flex"] iframe','HPAds.ad_uac_onload_handler(\' iframe[class^="uac_"]\',this,\'bottom_ad_border_div\',10)');}</script></div>        <!-- ads_leaderboard_top -->                <!-- page branding and current date -->		        <div class="tophead_wrapper">            <div class="branding" style="padding-bottom:20px !important;">                                    <a href="http://www.huffingtonpost.jp/japan">                                                                                <img class="masthead-logo width_300px" src="http://s.huffpost.com/images/v/logos/v5/logos-hero-blk-small.png" alt="Huffpost Japan" />												<div><img src="http://s.huffpost.com/images/v/logos/v5/logos-japan.gif" /></div>						                                                            </a>            </div>            <!-- edition dropdown -->            <!-- edition dropdown --><div class="edition geo_dropdown">	<span class="current">		Edition: <strong class="this-region">jp</strong>		<span class="arrow-down"></span>		<button class="show-hide" data-target=".editions">Show/Hide</button>	</span>	<menu class="editions inner off">		<ul>                     <li>			      <a href="http://www.huffingtonpost.com/?country=AR">				       <span>عربي (Arabic) </span> <strong>AR</strong>			            </a>			</li>                                          <li>				<a href="http://www.huffingtonpost.com/?country=AU">					<span>Australia</span> <strong>AU</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=BR">					<span>Brasil</span> <strong>BR</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=CA">					<span>Canada</span> <strong>CA</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=DE">					<span>Deutschland</span> <strong>DE</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=ES">					<span>Espa&ntilde;a</span> <strong>ES</strong>				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=FR">					<span>France</span> <strong>FR</strong> 				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=GR">					<span>Ελλάδα (Greece)</span> <strong>GR</strong> 				</a>        			</li>                     <li>				<a href="http://www.huffingtonpost.com/?country=IN">					<span>India</span> <strong>IN</strong> 				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=IT">					<span>Italia</span> <strong>IT</strong>				</a>        			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=JP">					<span>&#26085;&#26412; (Japan)</span> <strong>JP</strong>				</a>					</li>			<li>				<a href="http://www.huffingtonpost.com/?country=KR">					<span>&#54620;&#44397; (Korea)</span> <strong>KR</strong>				</a>					</li>			<li>				<a href="http://www.huffingtonpost.com/?country=MG">					<span>Maghreb</span> <strong>MG</strong>				</a>					</li>            <li>               <a href="http://www.huffingtonpost.com.mx/">                	<span>M&eacute;xico</span> <strong>MX</strong>               </a>            </li>                                               			<li>				<a href="http://www.huffingtonpost.com/?country=ZA">					<span>South Africa</span> <strong>ZA</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=UK">					<span>United Kingdom</span> <strong>UK</strong>				</a>			</li>			<li>				<a href="http://www.huffingtonpost.com/?country=US">					<span>United States</span> <strong>US</strong>				</a>			</li>		</ul>	</menu>	</div>	            <!-- wrapper of line of social, newsletter  -->            <div id="social-subscribe-search" class="social-subscribe-search group">                <ul class="group">                    <li class="facebook">                        <div class="content like">                            <!-- facebook button code -->                                <div class="fb-like" data-href="http://www.facebook.com/HuffPostJapan/" data-send="false" data-layout="button_count" data-width="40" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 40px" ></div>                        </div>                    </li>                    <li class="twitter">                        <div class="content tweet">                            <!-- twitter button code -->                                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>                        </div>                    </li>                    <li class="newsletters" data-fx="hover">                        <div class="content">                            <strong>メールマガジンを講読</strong>                            <div class="form">                                <!-- sign up for vertical newsletter -->                                 <div class="newsletters"  >                                  <form action="#">                                      <fieldset>					                                                 <legend>Get Japanメールマガジンを講読</legend>                                          <label for="newsletter-email">メールアドレス</label>                                          <input class="input-email" placeholder="メールアドレス" id="newsletter-email" type="text" />                                          <input type="checkbox" value="1" name="email_subscribe_check" class="email_subscribe_check" style="display:none;" />                                          <label for="newsletter-submit">メールアドレス</label>						                                              <input data-vertical="japan" class="submit" id="newsletter-submit" type="submit" value="登録"  />						                                      </fieldset>                                  </form>                              </div>                          </div>                      </div>                    </li>		        </ul>			</div>			            <div class="clear"></div>        </div><!-- .tophead_wrapper ENDS -->    </header>    <!-- line of links that sit on top of the visual header and user account controls -->    <div class="topnav">        <!-- line of links that sit on top of the visual header   -->        <div class="links-products" >    <!-- big news links that are vertical specific -->    <div class="big-news-links">        <ul>          <li class="commercial_big_news_links">            <!-- ads_big_news_link -->                      </li>        </ul>    </div>    <!-- links to HP products that are the same across all verticals -->    <div class="products" >        <ul>          <li><a href="http://itunes.apple.com/jp/app/the-huffington-post/id306621789?mt=8"  >iPhone/iPad アプリ</a></li>          <li><a href="https://play.google.com/store/apps/details?id=com.huffingtonpost.android&hl=ja"  >Android アプリ</a></li>          <li><a href="/big-news/#japan"  >もっと見る</a></li>        </ul>    </div></div>        <!-- user account controls -->        					<!-- user account controls -->					<div id="wendybird_user" class="user">					    <div class="not-logged-in">                            <ul class="group">                      <li><span class="hidden"><a href="javascript:void(0);" onclick="return false;" class="hp_desktop_alerts">Desktop Alerts</button></span></li>					                                        </ul>					    </div>					    <div class="logged-in off">					        				            <div id="wendybird_user_data" class="account vcard">				                <div class="top group">				                	<figure>									    <img src="" alt="" width="20" height="20" />									</figure>								    <span class="username">$USERNAME</span>				                </div>				                <menu class="controls">                                    <ul>                                        <li>                                        <span class="hidden"><a href="javascript:void(0);" onclick="return false;" class="hp_desktop_alerts">Desktop Notifications</button></span>                                        </li>                                        <li>                                            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                        </li>                                        <li>                                            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li>                                            <a href="/users/logout/?referer=%2F" onclick="QuickLogin.SocialLogout('/users/logout/?referer=%2F'); return false;">                                                ログアウト                                            </a>                                         </li>                                    </ul>                                </menu>				            </div>					    </div>					</div>                    <script type="text/javascript">                        HPUtil.initUserNavStatus(false);                        //SocialNotifications.setEvents();                        //huff.use('desktop_stream');                    </script>    </div>    <!-- large banner ad -->    </section><script>(function($){ // no Conflict    $(function() { // dom ready    var socialSubSearch = $('#social-subscribe-search'),        newsletter = socialSubSearch.find('.newsletters'),        rollout = socialSubSearch.find('[data-fx="hover"]'),        liContent = socialSubSearch.find('.content');        var searchcheck="ハフィントンポスト内を検索";        var checkInputContent = function(evt){            };    newsletter.find('.content').hover(      function(){        var inputVal = "";        if (inputVal != searchcheck && inputVal != "") {        }      },      function(){        var inputVal = "";        if (inputVal != searchcheck && inputVal != "") {        }      }    );    // rollover effects    liContent      .on('mouseenter', function() {        var that = $(this),            thatParent = that.parent('li'),            inputField = that.find('input[type="text"]');        if(thatParent.data('fx') === 'hover') {          thatParent.addClass('hover');          inputField.focus();        }      })      .on('mouseleave', function() {            var that = $(this),                thatParent = that.parent('li'),                inputField = that.find('input[type="text"]');            thatParent.removeClass('hover');            inputField.blur();          });        // end liContent    });})(jQuery);</script>        <!-- END page_header -->        <!-- page_navigation -->        <nav class="main group">    <!-- top nav bar -->    <section class="verticals japan group"  data-beacon='{"p":{"mnid":"topnav_first_row","mlid":"topnav"}}'  >        <ul class="verticals-ul">            <li class="front-page toplevel"  data-beacon='{"p":{"lnid":"homepage"}}'  >	                             <a class="toplevel-a" href="http://www.huffingtonpost.jp" title="Home" tabindex="1" class="link">FRONT PAGE</a>		  	            </li>                                                <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/politics/">政治</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/business/">経済</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/world/">国際</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/society/">社会</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/technology/">テクノロジー</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/lifestyle/">ライフスタイル</a>                            </li>                        <li class=" toplevel"  data-beacon='{"p":{"lnid":false}}' >                            <a class="toplevel-a" tabindex="" href="http://www.huffingtonpost.jp/news/sports/">スポーツ</a>                            </li>                        <!-- START UK BLOGS DROP DOWN -->            										            <!-- END UK BLOGS DROP DOWN -->                                            </ul>    </section>        <!-- bottom nav bar -->    <section class="stories group"  data-beacon='{"p":{"mnid":"topnav_subnav","mlid":"topnav"}}'  >        <ul class="group">                                                             <li>                [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>                         <li>                [hrefx][hrefx][hrefx][hrefx]            </li>                            	        </ul>    </section>    </nav><!-- ads_leaderboard_below_nav --><!-- ads_curtain --><div id="curtain_wrapper">    <div id="curtainunit"></div></div><!-- ads_status_bar --><!-- ads_edit_banner -->        <!-- END page_navigation -->        <!-- page_content -->        <section class="content">            <!-- breaking_news module --><!-- 3up carousel module --><!-- ads_threeup_edit_promo --><section id="carousel" class="three-up"  data-beacon='{"p":{"mnid":"threeup_top_wrapper","mlid":"threeup"}}' >    <div class="group three-up-list">        <ul class="three-up-holder">            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17704558","mpid":0}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17704338","mpid":1}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17704150","mpid":2}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17704124","mpid":3}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17703832","mpid":4}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17703492","mpid":5}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17703482","mpid":6}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17703472","mpid":7}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699510","mpid":8}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699408","mpid":9}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699386","mpid":10}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699214","mpid":11}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699170","mpid":12}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17699150","mpid":13}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            <li class="three-up-item">            <article  data-beacon='{"p":{"plid":"17698812","mpid":14}}' >                <figure>                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </figure>                <strong>[hrefx][hrefx][hrefx][hrefx][hrefx]</strong>            </article>        </li>            </ul>    </div>    <button class="previous">Previous Story</button>    <button class="next">Next Story</button></section><script>    (function($){        $('.lnid-threeup_left_nav').on('click', function(){            HPTrack.trackPageview('/t/a/threeupnav.v6/left.v2/Japan');        });        $('.lnid-threeup_right_nav').on('click', function(){            HPTrack.trackPageview('/t/a/threeupnav.v6/right.v2/Japan');        });    })(jQuery);</script><!-- main entry body --><section class="main group">            <!-- Breaking news bar -->        <!-- main entry body -->    <div class="column entry">        <!-- Article content -->        <!-- entry header -->	<article class="entry" id="printable">		<header>                                                                                <!-- Title -->                <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                                        <!-- Author Information -->                    <div class="author editor">                <div class="byline vcard group ">            <div class="info">                            <span class="thirdparty-logo">	                                The Huffington Post                </span>                				                <span class="name fn">                                            &nbsp;|&nbsp;			   			       執筆者：			                                                                   				                                        <a rel="author" href="/brittany-wong/" >Brittany Wong</a>				                                                                        </span>                                        </div>                        <!-- author social buttons -->            <ul class="social group">            	                		    		        <li class="email">                          <a href="/users/login/" onclick="QuickFan.emailAlerts('hp_blogger_Brittany Wong', 'Brittany Wong');return false;" >                              <button>メール</button>                          </a>			 </li>			                    								    					                <li class="facebook like">								    <a href="#" class="fb-tooltip-404714 fb-tooltip" sl-processed="1"></a>	                <script type="text/javascript">		                (function($){		                    huff.js('jquery/jquery.tooltip.hp.js', function(){		                        $('.fb-tooltip-404714').toolTip({		                            toolTipWidth : 250,		                            namespacevlaue: '.aol_tooltip_404714 .aol_tooltip',		                            html : '<div class="fb-follow-tooltip"><b>投稿お知らせメールを受け取る Brittany Wong</b><div class="fb-like-container"><div class="fb-like" data-href="http://www.huffingtonpost.jp/brittany-wong/" data-send="false" data-layout="button_count" data-width="40" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 40px" ></div></div></div>'		                        });		                    });		                }(jQuery));		        	</script>		                    </li>            </ul>                    </div>    </div>                                    <!-- Article Byline Information -->            <div class="headline group">                <div class="times"  >    <span class="posted">        投稿日: <time datetime="2017-04-02T03:07:22-04:00">            2017年04月02日 16時07分 JST        </time>    </span>    <span class="updated">        更新: <time datetime="2017-04-02T03:07:22-04:00">            2017年04月02日 16時07分 JST        </time>    </span></div>            </div>                                              <!-- Article Main Image -->                    <!-- article image/video (if applicable) -->    <div class="main-visual group embedded-image">    <span class="img-caption">        <img src="http://i.huffpost.com/gen/5214346/images/n-KISS-large570.jpg" alt="KISS" data-img-path='http://i.huffpost.com/gen/5214346/images/n-KISS-Pinterest.jpg' />        <div class="entry_image_caption large-image-caption">イメージ | fotografixx via Getty Images</div>            </div>                                    <!-- Imageblog Social Share Bar -->                        <!-- Social Share Bar -->            <menu id="social_badges" class="social_badges_zh social-bar group floating">        <section class="social-badge" data-url="/ajax/social/phoenix_social_badge_json.php?badges=facebook_like%2Cfacebook%2Ctwitter%2Chatena%2Cemail%2Ccomments&id=15755998&url=http%3A%2F%2Fwww.huffingtonpost.jp%2F2017%2F04%2F02%2F10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html" data-entry-id="15755998">       <ul class="shares group">        <li class='share facebook_like VERB_LIKE' data-type='fblike'><a href='javscript:void(0)'><div class="fb-like" data-href="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html" data-send="false" data-layout="box_count" data-width="450" data-show-faces="false" data-colorscheme="light" data-font="arial" data-action="like" ref="" style="width: 450px" ></div></a></li><li class="share facebook" data-type="facebook">	<a class="social-fb-share-btn" href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.huffingtonpost.jp%2F2017%2F04%2F02%2F10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html" data-url="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html" data-title="[标题]" data-caption="www.huffingtonpost.jp" data-image="http://i.huffpost.com/gen/5214346/images/o-KISS-facebook.jpg">	  <span class="facebook-share-btn label">シェア</span>	  <span class="facebook-share-count count"></span>	</a></li><li class="share twitter" data-type="twitter">	<div class="social-twitter-btn" data-size="172" data-account="HuffPostJapan">    <a class="twitter-tweet-btn" href="https://twitter.com/intent/tweet?lang=ja&text=%E7%B5%90%E5%A9%9A%E3%81%99%E3%82%8B%E5%89%8D%E3%81%AB%E7%9F%A5%E3%81%A3%E3%81%A6%E3%81%8A%E3%81%8F%E3%81%B9%E3%81%8D10%E3%81%AE%E4%BA%8B%E5%AE%9F+http%3A%2F%2Fwww.huffingtonpost.jp%2F2017%2F04%2F02%2F10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html">      <span class="twitter-tweet-btn label">ツイート</span>      <span class="twitter-tweet-count count"></span>    </a>	</div></li><li class="share hatena" data-type="hatena">	<div class="social-hatena-share-btn">	    <a href="http://b.hatena.ne.jp/entry/http%3A%2F%2Fwww.huffingtonpost.jp%2F2017%2F04%2F02%2F10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html" class="hatena-bookmark-button" data-hatena-bookmark-title="[metatags_title]" data-hatena-bookmark-layout="vertical-balloon" title="[metatags_title]">	        <img src="http://b.st-hatena.com/images/entry-button/button-only.gif" alt="[metatags_title]" width="20" height="20" style="border: none;" />	        <span class="hatena-share-btn label">hatena</span>	        <span class="hatena-share-coun count"></span>	    </a>	    <script src="http://b.st-hatena.com/js/bookmark_button.js" type="text/javascript"></script>	</div></li><li class="share email" data-type="email">	<div class="social-email-btn">	    [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]	    <span class="hp-email-count count"></span>	</div></li><li class="share comment" data-type="comments">	<div class="social-comment-btn">	    <span class="hp-comment-btn label">コメント</span>	    <span class="hp-comment-count count"></span>	</div></li>      </ul>            </section>        </menu>            <!-- Print Icon for Canada and Quebect verticals in permalink page -->            				<a href="javascript:window.print()" title="印刷" class="print_btn print_common" ><img src="http://www.huffingtonpost.com/images/v/print_icon.png" width="20" height="17" alt="印刷"/></a>			            <div style="clear:both"></div>        </header>                <!-- Article Text Body -->                <div class="float_right padding_left_10">                    </div>    <!-- Entry main text -->    <div class="content" id="mainentrycontent">      <div class="float_left">        <!-- AD ads_sharebox_260x60 -->        <div class="ad_share_box">                    <script type="text/javascript">            if ( 'undefined' != typeof(HPAds.ad_sharebox_260x60_fix) ) {              HPAds.ad_sharebox_260x60_fix();            }          </script>        </div>              </div>                    <!-- Entry Text -->        		          <p>[描述]</p><p>悲観はしたくないが、愛だけでは結婚生活は持続しない。研究によると、結婚を長続きさせるには、賢く、誠実に相手を愛さなければならないという。</p><p>そのために、結婚にまつわる10の事実をここに集めてみた。婚約中あらゆるカップルが知るべきことだ。バラ色の人生を夢見る前に、一読してもらいたい。</p><p><strong>1.  家事を分担する＝セックスが増える。</strong></p><p>分かち合いは思いやりだ。そして、家事の分担は濃厚なセックス・ライフを作り出す。2015年のアルバータ大学の研究では、掃除を分担している夫婦は、夫婦関係の満足度が高く、片方のパートナーに掃除を任せている夫婦よりも、テキパキと仕事をこなすとの報告が発表された。</p><p>この研究で明らかになったのは、男性がある程度の家事をしている場合、夫婦はセックスの回数が増え、それぞれのパートナーが高い性的満足度を報告したことだ。ミスター・クリーンがなぜこのように踊っているか、もうお分かりだろう。</p><p><iframe src="//giphy.com/embed/uSOZGiuI1mk5q?html5=true" width="480" height="270" frameBorder="0" class="giphy-embed" allowFullScreen></iframe></p><p>[hrefx]に掲載された記事を翻訳しました。</small></p>        </div>                            <!-- article_foot ad -->            <div class="margin_10_0">                            </div>            <footer>                                <!-- Also On -->                        <section class="also-on">                <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>                <div class="promo_holder">            	<script type="text/javascript">		var hp_slideshow_data_518480 = {"embed_tag":"<HH--236SLIDEEXPAND--518480--HH>","slideshow_id":"518480","title":"\u611f\u52d5\u7684\u306a\u7d50\u5a5a\u5f0f","created":"2017-04-01 01:13:55","author_id":"322791","is_anonymous_vote":"yes","lower_rank_value":"","higher_rank_value":"","top_5_text":"","type":"expand","total":17,"list":false,"slideimages":[{"slide_id":"518480","slideimage_id":"7303426","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.annadelores.com\/\">Anna Delores Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:05","image_num":"0","drone_druid":null,"drone_asid":null,"caption":"<p>\"The bride and groom both lost siblings within a few years of each other. It was an overcast day in late June and even rained a tiny bit during family portraits. Later in the day, a stunning rainbow appeared in a sky lit up with an orange sunset. Many guests burst into tears and embraced the bride and groom, telling them it was their brother and sister showing their presence at the wedding.\" - Anna Delores<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251872","slideimage_id":"7303426","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_original.jpg"},{"id":"29251874","slideimage_id":"7303426","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_free.jpg"},{"id":"29251876","slideimage_id":"7303426","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_smallfree.jpg"},{"id":"29251878","slideimage_id":"7303426","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_small.jpg"},{"id":"29251880","slideimage_id":"7303426","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_splash_900.jpg"},{"id":"29251882","slideimage_id":"7303426","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_splash_600.jpg"},{"id":"29251884","slideimage_id":"7303426","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_splash_small.jpg"},{"id":"29251886","slideimage_id":"7303426","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_sq50.jpg"},{"id":"29251888","slideimage_id":"7303426","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_croppable.jpg"},{"id":"29251890","slideimage_id":"7303426","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303426_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303428","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/weddingsbyjenn.com\/\">Jenn Tai<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:05","image_num":"1","drone_druid":null,"drone_asid":null,"caption":"<p>\"Jazell and Paul's wedding has got to be the one&nbsp;with the most emotional bridesmaids. Most of the time, one or two tear up, but almost every one of Jazell's girls cried that day when she was reciting&nbsp;her vows.\" - Jenn Tai<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251812","slideimage_id":"7303428","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_original.jpg"},{"id":"29251814","slideimage_id":"7303428","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_free.jpg"},{"id":"29251816","slideimage_id":"7303428","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_smallfree.jpg"},{"id":"29251818","slideimage_id":"7303428","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_small.jpg"},{"id":"29251820","slideimage_id":"7303428","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_splash_900.jpg"},{"id":"29251822","slideimage_id":"7303428","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_splash_600.jpg"},{"id":"29251824","slideimage_id":"7303428","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_splash_small.jpg"},{"id":"29251826","slideimage_id":"7303428","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_sq50.jpg"},{"id":"29251828","slideimage_id":"7303428","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_croppable.jpg"},{"id":"29251830","slideimage_id":"7303428","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303428_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303430","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.brethurston.com\/\">Bre Thurston<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:06","image_num":"2","drone_druid":null,"drone_asid":null,"caption":"<p>\"I've seen a lot of brides cry as they are walking down the aisle, but Luna lit up in a way that I had never seen before. I have truly never witnessed a happier, more beaming bride as she locked eyes with Federico. Her joy made me choke up because it was so palpable!\" - Bre Thurston&nbsp;<\/p>\n<p>&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251832","slideimage_id":"7303430","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_original.jpg"},{"id":"29251834","slideimage_id":"7303430","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_free.jpg"},{"id":"29251836","slideimage_id":"7303430","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_smallfree.jpg"},{"id":"29251838","slideimage_id":"7303430","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_small.jpg"},{"id":"29251840","slideimage_id":"7303430","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_splash_900.jpg"},{"id":"29251842","slideimage_id":"7303430","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_splash_600.jpg"},{"id":"29251844","slideimage_id":"7303430","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_splash_small.jpg"},{"id":"29251846","slideimage_id":"7303430","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_sq50.jpg"},{"id":"29251848","slideimage_id":"7303430","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_croppable.jpg"},{"id":"29251850","slideimage_id":"7303430","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303430_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303432","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/aguyandagirlphotography.com\/\">A Guy and A Girl Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:06","image_num":"3","drone_druid":null,"drone_asid":null,"caption":"<p>\"Jason's eyes welled up with tears as he listened to Nick recite personalized vows during their ceremony.\" - Lauren Saldutti&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251892","slideimage_id":"7303432","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_original.jpg"},{"id":"29251894","slideimage_id":"7303432","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_free.jpg"},{"id":"29251896","slideimage_id":"7303432","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_smallfree.jpg"},{"id":"29251898","slideimage_id":"7303432","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_small.jpg"},{"id":"29251900","slideimage_id":"7303432","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_splash_900.jpg"},{"id":"29251902","slideimage_id":"7303432","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_splash_600.jpg"},{"id":"29251904","slideimage_id":"7303432","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_splash_small.jpg"},{"id":"29251906","slideimage_id":"7303432","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_sq50.jpg"},{"id":"29251908","slideimage_id":"7303432","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_croppable.jpg"},{"id":"29251910","slideimage_id":"7303432","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303432_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303434","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.tlbsllc.com\/\">Three Little Birds Studio<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:07","image_num":"4","drone_druid":null,"drone_asid":null,"caption":"<p>\"All the bridesmaids and the mother of the bride and groom gathered around this sweet bride and prayed over her. It was so genuine, sweet and powerful. The fact that each person took the time to say their own little prayer made it so personal.\" - Nicole Moering<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251852","slideimage_id":"7303434","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_original.jpg"},{"id":"29251854","slideimage_id":"7303434","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_free.jpg"},{"id":"29251856","slideimage_id":"7303434","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_smallfree.jpg"},{"id":"29251858","slideimage_id":"7303434","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_small.jpg"},{"id":"29251860","slideimage_id":"7303434","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_splash_900.jpg"},{"id":"29251862","slideimage_id":"7303434","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_splash_600.jpg"},{"id":"29251864","slideimage_id":"7303434","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_splash_small.jpg"},{"id":"29251866","slideimage_id":"7303434","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_sq50.jpg"},{"id":"29251868","slideimage_id":"7303434","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_croppable.jpg"},{"id":"29251870","slideimage_id":"7303434","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303434_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303436","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.delsolphotography.com\/\">Matt Adcock - Del Sol Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:07","image_num":"5","drone_druid":null,"drone_asid":null,"caption":"<p>\"Janine&rsquo;s fianc&eacute; died 52 days before her wedding. This is the first time in my professional career I was&nbsp;asked to photograph a wedding where only one&nbsp;person was actually going to be showing up. I cried with her on this shoot day and this was a first for me. I really admire her courage and know she inspired thousands and thousands of people.\" - Matt Adcock<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251912","slideimage_id":"7303436","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_original.jpg"},{"id":"29251914","slideimage_id":"7303436","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_free.jpg"},{"id":"29251916","slideimage_id":"7303436","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_smallfree.jpg"},{"id":"29251918","slideimage_id":"7303436","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_small.jpg"},{"id":"29251920","slideimage_id":"7303436","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_splash_900.jpg"},{"id":"29251922","slideimage_id":"7303436","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_splash_600.jpg"},{"id":"29251924","slideimage_id":"7303436","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_splash_small.jpg"},{"id":"29251926","slideimage_id":"7303436","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_sq50.jpg"},{"id":"29251928","slideimage_id":"7303436","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_croppable.jpg"},{"id":"29251930","slideimage_id":"7303436","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303436_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303438","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.laurazastrow.com\/\">Laura Zastrow Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:10","image_num":"6","drone_druid":null,"drone_asid":null,"caption":"\"The bride, Kelsey, planned a special moment for her dad to see her for the first time on her wedding day. While I photographed the two of them, her mom tried to stay out of my way. But when I saw her excitement, I knew I had to capture it.\" - Laura Zastrow","rating":"0","votes":"0","slideimage_crops":[{"id":"29251932","slideimage_id":"7303438","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_original.jpg"},{"id":"29251934","slideimage_id":"7303438","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_free.jpg"},{"id":"29251936","slideimage_id":"7303438","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_smallfree.jpg"},{"id":"29251938","slideimage_id":"7303438","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_small.jpg"},{"id":"29251940","slideimage_id":"7303438","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_splash_900.jpg"},{"id":"29251942","slideimage_id":"7303438","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_splash_600.jpg"},{"id":"29251944","slideimage_id":"7303438","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_splash_small.jpg"},{"id":"29251946","slideimage_id":"7303438","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_sq50.jpg"},{"id":"29251948","slideimage_id":"7303438","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_croppable.jpg"},{"id":"29251950","slideimage_id":"7303438","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303438_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303440","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.lisarobinsonphotographer.com\/\">Lisa Robinson Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:10","image_num":"7","drone_druid":null,"drone_asid":null,"caption":"<p>\"Natalia and Mike are high school sweethearts who have been together for 10 years! This emotional moment was captured just before he turns around to see her in her wedding dress for the first time.\" - Lisa Robinson<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252012","slideimage_id":"7303440","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_original.jpg"},{"id":"29252014","slideimage_id":"7303440","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_free.jpg"},{"id":"29252016","slideimage_id":"7303440","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_smallfree.jpg"},{"id":"29252018","slideimage_id":"7303440","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_small.jpg"},{"id":"29252020","slideimage_id":"7303440","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_splash_900.jpg"},{"id":"29252022","slideimage_id":"7303440","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_splash_600.jpg"},{"id":"29252024","slideimage_id":"7303440","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_splash_small.jpg"},{"id":"29252026","slideimage_id":"7303440","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_sq50.jpg"},{"id":"29252028","slideimage_id":"7303440","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_croppable.jpg"},{"id":"29252030","slideimage_id":"7303440","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303440_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303442","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.vesic.com\/\">Vesic Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:10","image_num":"8","drone_druid":null,"drone_asid":null,"caption":"<p>\"Davis Ann'\u0080\u0099s grandfather was buried at the same church she was getting married at in New Bern, North Carolina. Before the ceremony, under dark clouds of a large passing storm, she took a single flower to place on his grave stone. Afterwards, her hand rose to her face for a brief second when I heard a faint but audible gasp, before she began to weep.\" - Hooman Bahrani<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251952","slideimage_id":"7303442","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_original.jpg"},{"id":"29251954","slideimage_id":"7303442","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_free.jpg"},{"id":"29251956","slideimage_id":"7303442","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_smallfree.jpg"},{"id":"29251958","slideimage_id":"7303442","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_small.jpg"},{"id":"29251960","slideimage_id":"7303442","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_splash_900.jpg"},{"id":"29251962","slideimage_id":"7303442","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_splash_600.jpg"},{"id":"29251964","slideimage_id":"7303442","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_splash_small.jpg"},{"id":"29251966","slideimage_id":"7303442","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_sq50.jpg"},{"id":"29251968","slideimage_id":"7303442","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_croppable.jpg"},{"id":"29251970","slideimage_id":"7303442","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303442_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303444","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.knightweddings.com\/\">Knight Weddings <\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:11","image_num":"9","drone_druid":null,"drone_asid":null,"caption":"<p>\"The groom giving praise during the ceremony.\" - Ross Oscar Knight&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251992","slideimage_id":"7303444","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_original.jpg"},{"id":"29251994","slideimage_id":"7303444","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_free.jpg"},{"id":"29251996","slideimage_id":"7303444","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_smallfree.jpg"},{"id":"29251998","slideimage_id":"7303444","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_small.jpg"},{"id":"29252000","slideimage_id":"7303444","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_splash_900.jpg"},{"id":"29252002","slideimage_id":"7303444","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_splash_600.jpg"},{"id":"29252004","slideimage_id":"7303444","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_splash_small.jpg"},{"id":"29252006","slideimage_id":"7303444","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_sq50.jpg"},{"id":"29252008","slideimage_id":"7303444","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_croppable.jpg"},{"id":"29252010","slideimage_id":"7303444","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303444_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303446","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.brianmullinsphotography.com\/\">Brian Mullins Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:11","image_num":"10","drone_druid":null,"drone_asid":null,"caption":"<p>\"We think it's important&nbsp;to capture the first time the bride and groom see each other. However, as a father and photographer, this is the one photo that I MUST have: when the dad sees his daughter before the wedding.\" - Brian Mullins<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29251972","slideimage_id":"7303446","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_original.jpg"},{"id":"29251974","slideimage_id":"7303446","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_free.jpg"},{"id":"29251976","slideimage_id":"7303446","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_smallfree.jpg"},{"id":"29251978","slideimage_id":"7303446","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_small.jpg"},{"id":"29251980","slideimage_id":"7303446","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_splash_900.jpg"},{"id":"29251982","slideimage_id":"7303446","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_splash_600.jpg"},{"id":"29251984","slideimage_id":"7303446","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_splash_small.jpg"},{"id":"29251986","slideimage_id":"7303446","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_sq50.jpg"},{"id":"29251988","slideimage_id":"7303446","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_croppable.jpg"},{"id":"29251990","slideimage_id":"7303446","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303446_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303448","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/allebachphotography.com\/\">Allebach Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:12","image_num":"11","drone_druid":null,"drone_asid":null,"caption":"\"The father of the bride passed away shortly before the wedding day. So the bride did a dance with her brothers and uncles.\" - Mike Allebach","rating":"0","votes":"0","slideimage_crops":[{"id":"29252032","slideimage_id":"7303448","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_original.jpg"},{"id":"29252034","slideimage_id":"7303448","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_free.jpg"},{"id":"29252036","slideimage_id":"7303448","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_smallfree.jpg"},{"id":"29252038","slideimage_id":"7303448","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_small.jpg"},{"id":"29252040","slideimage_id":"7303448","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_splash_900.jpg"},{"id":"29252042","slideimage_id":"7303448","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_splash_600.jpg"},{"id":"29252044","slideimage_id":"7303448","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_splash_small.jpg"},{"id":"29252046","slideimage_id":"7303448","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_sq50.jpg"},{"id":"29252048","slideimage_id":"7303448","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_croppable.jpg"},{"id":"29252050","slideimage_id":"7303448","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303448_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303450","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.dreamingtreestudios.com\/\">Dreaming Tree Studios<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:14","image_num":"12","drone_druid":null,"drone_asid":null,"caption":"<p>\"The couple wrote their own vows for the ceremony. The groom went&nbsp;to comfort his&nbsp;bride during her vows because she started to cry.\" - Heather Shelley&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252084","slideimage_id":"7303450","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_original.jpg"},{"id":"29252088","slideimage_id":"7303450","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_free.jpg"},{"id":"29252092","slideimage_id":"7303450","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_smallfree.jpg"},{"id":"29252098","slideimage_id":"7303450","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_small.jpg"},{"id":"29252100","slideimage_id":"7303450","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_splash_900.jpg"},{"id":"29252102","slideimage_id":"7303450","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_splash_600.jpg"},{"id":"29252104","slideimage_id":"7303450","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_splash_small.jpg"},{"id":"29252106","slideimage_id":"7303450","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_sq50.jpg"},{"id":"29252108","slideimage_id":"7303450","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_croppable.jpg"},{"id":"29252110","slideimage_id":"7303450","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303450_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303452","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/harwellphotography.com\/\">Harwell Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:15","image_num":"13","drone_druid":null,"drone_asid":null,"caption":"<p>\"After a wedding ceremony at the Naval Academy, a bride and her groom decide to run towards the sun in a moment of spontaneity and joy!\" - Jeremy Harwell&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252052","slideimage_id":"7303452","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_original.jpg"},{"id":"29252054","slideimage_id":"7303452","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_free.jpg"},{"id":"29252056","slideimage_id":"7303452","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_smallfree.jpg"},{"id":"29252058","slideimage_id":"7303452","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_small.jpg"},{"id":"29252060","slideimage_id":"7303452","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_splash_900.jpg"},{"id":"29252062","slideimage_id":"7303452","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_splash_600.jpg"},{"id":"29252064","slideimage_id":"7303452","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_splash_small.jpg"},{"id":"29252066","slideimage_id":"7303452","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_sq50.jpg"},{"id":"29252068","slideimage_id":"7303452","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_croppable.jpg"},{"id":"29252070","slideimage_id":"7303452","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303452_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303454","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/duyhophotography.com\/\">Duy Ho Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:15","image_num":"14","drone_druid":null,"drone_asid":null,"caption":"<p>\"This groom shared a special moment with his grandfather -- whom he was named after -- during the reception. It is one of the couple's favorite photos from the wedding day.\" - Duy Ho<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252072","slideimage_id":"7303454","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_original.jpg"},{"id":"29252074","slideimage_id":"7303454","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_free.jpg"},{"id":"29252076","slideimage_id":"7303454","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_smallfree.jpg"},{"id":"29252078","slideimage_id":"7303454","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_small.jpg"},{"id":"29252080","slideimage_id":"7303454","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_splash_900.jpg"},{"id":"29252082","slideimage_id":"7303454","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_splash_600.jpg"},{"id":"29252086","slideimage_id":"7303454","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_splash_small.jpg"},{"id":"29252090","slideimage_id":"7303454","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_sq50.jpg"},{"id":"29252094","slideimage_id":"7303454","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_croppable.jpg"},{"id":"29252096","slideimage_id":"7303454","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303454_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303456","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.traceybuyce.com\/\">Tracey Buyce Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:16","image_num":"15","drone_druid":null,"drone_asid":null,"caption":"<p>\"This intense moment happened seconds before Mary Shawn walked down the aisle with her father Joe. They were both very emotional and nervous, a moment this father and daughter will surely never forget!\" - Tracey Buyce<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252112","slideimage_id":"7303456","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_original.jpg"},{"id":"29252114","slideimage_id":"7303456","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_free.jpg"},{"id":"29252116","slideimage_id":"7303456","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_smallfree.jpg"},{"id":"29252118","slideimage_id":"7303456","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_small.jpg"},{"id":"29252120","slideimage_id":"7303456","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_splash_900.jpg"},{"id":"29252122","slideimage_id":"7303456","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_splash_600.jpg"},{"id":"29252124","slideimage_id":"7303456","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_splash_small.jpg"},{"id":"29252126","slideimage_id":"7303456","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_sq50.jpg"},{"id":"29252128","slideimage_id":"7303456","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_croppable.jpg"},{"id":"29252130","slideimage_id":"7303456","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303456_sq50.jpg"},{"slide_id":"518480","slideimage_id":"7303458","type":"image","title":" ","title_link":"","width":"0","height":"0","credits":"<a href=\"http:\/\/www.katiekaizerphotography.com\/\">Katie Kaizer Photography<\/a>","config":{"text":{"show_image":null,"image_width_percent":null,"image_height_percent":null},"migrate":{"type_data":{"comment":{"permalink":null},"blog":{"permalink":null}}}},"created":"2017-04-01 01:14:17","image_num":"16","drone_druid":null,"drone_asid":null,"caption":"<p>\"The groom's father had passed away 11 years ago. They had the&nbsp;memorial flag&nbsp;that he had earned as a Navy veteran flying over at the reception. Right at sunset, everyone gathered as the bride, groom and family members lowered and folded the flag. The ceremony was their way of sharing his presence with everyone.\" - Katie Kaizer&nbsp;<\/p>","rating":"0","votes":"0","slideimage_crops":[{"id":"29252132","slideimage_id":"7303458","slide_id":"518480","type":"original","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_original.jpg"},{"id":"29252134","slideimage_id":"7303458","slide_id":"518480","type":"free","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_free.jpg"},{"id":"29252136","slideimage_id":"7303458","slide_id":"518480","type":"smallfree","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_smallfree.jpg"},{"id":"29252138","slideimage_id":"7303458","slide_id":"518480","type":"small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_small.jpg"},{"id":"29252140","slideimage_id":"7303458","slide_id":"518480","type":"splash_900","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_splash_900.jpg"},{"id":"29252142","slideimage_id":"7303458","slide_id":"518480","type":"splash_600","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_splash_600.jpg"},{"id":"29252144","slideimage_id":"7303458","slide_id":"518480","type":"splash_small","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_splash_small.jpg"},{"id":"29252146","slideimage_id":"7303458","slide_id":"518480","type":"sq50","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_sq50.jpg"},{"id":"29252148","slideimage_id":"7303458","slide_id":"518480","type":"croppable","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_croppable.jpg"},{"id":"29252150","slideimage_id":"7303458","slide_id":"518480","type":"compressed","url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_compressed.jpg"}],"slideimage_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_compressed.jpg","slideimage_thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/518480\/slide_518480_7303458_sq50.jpg"}],"slide_html":"","more_slideshows":[{"entry_id":"17698982","entry_url":"http:\/\/www.huffingtonpost.jp\/2017\/08\/08\/matsuko-mentions-baseball_n_17698982.html","content_type":"image","image_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/521824\/slide_521824_7371352_small.jpg","thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/521824\/slide_521824_7371352_small.jpg","title":"2017\u5e74\u3001\u8a71\u984c\u306e\u4eba\u30fb\u3082\u306e","slideshow_id":"521824","vertical":"japan"},{"entry_id":"17698688","entry_url":"http:\/\/www.huffingtonpost.jp\/2017\/08\/07\/sos-comments-to-gatlin_n_17698688.html","content_type":"image","image_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/461696\/slide_461696_6237704_small.jpg","thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/461696\/slide_461696_6237704_small.jpg","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u30fb\u30b9\u30dd\u30fc\u30c4\u30fb\u30b5\u30e9\u30ea\u30fc\u30fb\u30b5\u30fc\u30d9\u30a4 2015\u3000\u65e5\u672c\u30c1\u30fc\u30e0\u30e9\u30f3\u30ad\u30f3\u30b0","slideshow_id":"461696","vertical":"japan"},{"entry_id":"17694822","entry_url":"http:\/\/www.huffingtonpost.jp\/2017\/08\/07\/british-vogue-hires-first-gay-eic_n_17694822.html","content_type":"image","image_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/509500\/slide_509500_7139136_small.jpg","thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/509500\/slide_509500_7139136_small.jpg","title":"\u30f4\u30a3\u30af\u30c8\u30ea\u30a2\u30ba\u30fb\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30fb\u30d5\u30a1\u30c3\u30b7\u30e7\u30f3\u30b7\u30e7\u30fc2016","slideshow_id":"509500","vertical":"japan"},{"entry_id":"17694806","entry_url":"http:\/\/www.huffingtonpost.jp\/2017\/08\/07\/misako-comments-yuki_n_17694806.html","content_type":"image","image_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/416780\/slide_416780_5309828_small.jpg","thumbnail_url":"http:\/\/i.huffpost.com\/gadgets\/slideshows\/416780\/slide_416780_5309828_small.jpg","title":"80\u5e74\u4ee3\u30a2\u30a4\u30c9\u30eb\u3000\u7f8e\u5c11\u5973\u305f\u3061\u306f\u4eca","slideshow_id":"416780","vertical":"japan"}]};	</script><div class="hp-slideshow-wrapper no-pin" id="hp-slideshow-wrapper-518480" data-slideshow-id="518480" data-beacon='{"p":{"slideshow_id":"518480"}}'>	<div  class="hp-slideshow-top">        <!-- START: video ad content -->        <div class="hp-video-ad" style="width: 570px; height: 555px;background: #fff;position: absolute; z-index:0;"></div>        <div class="hp-video-ad-close" style="width: 100px; height: 50px;background: #000;position: absolute; left:470px; z-index:0;">            <span style="cursor:pointer;width:30px;color:#fff;display:block;margin:10px auto;">Close</span>        </div>        <!-- END: video ad content -->        <!-- START: Main slide content -->		<div class="hp-slideshow-main">			<div class="hp-slideshow-header">				<div class="hp-slideshow-title-icon hp-slideshow-icon">&#xe007;</div>				<div class="hp-slideshow-title">				  <span class="hp-ss-head-title-text" style="width: 443px; left: 0px;">				   感動的な結婚式				  </span>				</div>									<!-- START: slideshow top navigation -->				<div class="hp-slideshow-slide-position">					<span class="current-slide"></span>					<span>/</span>					<span class="total-slides"></span>					<div class="hp-slideshow-previous-arrow"  data-beacon='{"p":{"event_action":"arrow_top_corner_left"}}' >						<span class="hp-slideshow-icon bN">&#xe000;</span>					</div>					<div class="hp-slideshow-next-arrow"  data-beacon='{"p":{"event_action":"arrow_top_corner_right"}}' >						<span class="hp-slideshow-icon bN">&#xe001;</span>					</div>				</div>				<!-- END: slideshow top navigation -->								</div>			<div class="hp-main-slide">				<div class="hp-main-slider-content"></div>			</div>			<!-- END: Main slide content -->						<div class="hp-slideshow-main-nav">				<ul>					<li class="hp-slideshow-nav-prev"  data-beacon='{"p":{"event_action":"arrow_in_slide_image_left"}}' >						<a id="main_prev" href="#" onclick="return false;" class="hp-slideshow-flex-prev" alt="Previous"></a>					</li>					<li class="hp-slideshow-nav-next"  data-beacon='{"p":{"event_action":"arrow_in_slide_image_right"}}' >						<a id="main_next" href="#" onclick="return false;"  class="hp-slideshow-flex-next" alt="Next"></a>					</li>				</ul>			</div>			<div class="flexslider hp-flexslider-carousel">				<ul class="slides">										<li class="hp-carousel-item no-pin" data-id="0" data-slide-id="7303426"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303426_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The bride and groom both lost siblings within a few years of each other. It was an overcast day in late June and even rained a tiny bit during family portraits. Later in the day, a stunning rainbow appeared in a sky lit up with an orange sunset. Many guests burst into tears and embraced the bride and groom, telling them it was their brother and sister showing their presence at the wedding." - Anna Delores</p>					</li>										<li class="hp-carousel-item no-pin" data-id="1" data-slide-id="7303428"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303428_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"Jazell and Paul's wedding has got to be the one&nbsp;with the most emotional bridesmaids. Most of the time, one or two tear up, but almost every one of Jazell's girls cried that day when she was reciting&nbsp;her vows." - Jenn Tai</p>					</li>										<li class="hp-carousel-item no-pin" data-id="2" data-slide-id="7303430"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303430_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"I've seen a lot of brides cry as they are walking down the aisle, but Luna lit up in a way that I had never seen before. I have truly never witnessed a happier, more beaming bride as she locked eyes with Federico. Her joy made me choke up because it was so palpable!" - Bre Thurston&nbsp;&nbsp;</p>					</li>										<li class="hp-carousel-item no-pin" data-id="3" data-slide-id="7303432"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303432_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"Jason's eyes welled up with tears as he listened to Nick recite personalized vows during their ceremony." - Lauren Saldutti&nbsp;</p>					</li>										<li class="hp-carousel-item no-pin" data-id="4" data-slide-id="7303434"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303434_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"All the bridesmaids and the mother of the bride and groom gathered around this sweet bride and prayed over her. It was so genuine, sweet and powerful. The fact that each person took the time to say their own little prayer made it so personal." - Nicole Moering</p>					</li>										<li class="hp-carousel-item no-pin" data-id="5" data-slide-id="7303436"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303436_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"Janine&rsquo;s fianc&eacute; died 52 days before her wedding. This is the first time in my professional career I was&nbsp;asked to photograph a wedding where only one&nbsp;person was actually going to be showing up. I cried with her on this shoot day and this was a first for me. I really admire her courage and know she inspired thousands and thousands of people." - Matt Adcock</p>					</li>										<li class="hp-carousel-item no-pin" data-id="6" data-slide-id="7303438"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303438_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The bride, Kelsey, planned a special moment for her dad to see her for the first time on her wedding day. While I photographed the two of them, her mom tried to stay out of my way. But when I saw her excitement, I knew I had to capture it." - Laura Zastrow</p>					</li>										<li class="hp-carousel-item no-pin" data-id="7" data-slide-id="7303440"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303440_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"Natalia and Mike are high school sweethearts who have been together for 10 years! This emotional moment was captured just before he turns around to see her in her wedding dress for the first time." - Lisa Robinson</p>					</li>										<li class="hp-carousel-item no-pin" data-id="8" data-slide-id="7303442"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303442_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"Davis Ann's grandfather was buried at the same church she was getting married at in New Bern, North Carolina. Before the ceremony, under dark clouds of a large passing storm, she took a single flower to place on his grave stone. Afterwards, her hand rose to her face for a brief second when I heard a faint but audible gasp, before she began to weep." - Hooman Bahrani</p>					</li>										<li class="hp-carousel-item no-pin" data-id="9" data-slide-id="7303444"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303444_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The groom giving praise during the ceremony." - Ross Oscar Knight&nbsp;</p>					</li>										<li class="hp-carousel-item no-pin" data-id="10" data-slide-id="7303446"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303446_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"We think it's important&nbsp;to capture the first time the bride and groom see each other. However, as a father and photographer, this is the one photo that I MUST have: when the dad sees his daughter before the wedding." - Brian Mullins</p>					</li>										<li class="hp-carousel-item no-pin" data-id="11" data-slide-id="7303448"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303448_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The father of the bride passed away shortly before the wedding day. So the bride did a dance with her brothers and uncles." - Mike Allebach</p>					</li>										<li class="hp-carousel-item no-pin" data-id="12" data-slide-id="7303450"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303450_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The couple wrote their own vows for the ceremony. The groom went&nbsp;to comfort his&nbsp;bride during her vows because she started to cry." - Heather Shelley&nbsp;</p>					</li>										<li class="hp-carousel-item no-pin" data-id="13" data-slide-id="7303452"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303452_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"After a wedding ceremony at the Naval Academy, a bride and her groom decide to run towards the sun in a moment of spontaneity and joy!" - Jeremy Harwell&nbsp;</p>					</li>										<li class="hp-carousel-item no-pin" data-id="14" data-slide-id="7303454"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303454_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"This groom shared a special moment with his grandfather -- whom he was named after -- during the reception. It is one of the couple's favorite photos from the wedding day." - Duy Ho</p>					</li>										<li class="hp-carousel-item no-pin" data-id="15" data-slide-id="7303456"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303456_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"This intense moment happened seconds before Mary Shawn walked down the aisle with her father Joe. They were both very emotional and nervous, a moment this father and daughter will surely never forget!" - Tracey Buyce</p>					</li>										<li class="hp-carousel-item no-pin" data-id="16" data-slide-id="7303458"  data-beacon='{"p":{"event_action":"bottom_thumbnail_nav"}}' >						<img class="lazy" data-src="http://i.huffpost.com/gadgets/slideshows/518480/slide_518480_7303458_sq50.jpg" alt=" "  width="52" height="52"/>						<p style="display: none;">"The groom's father had passed away 11 years ago. They had the&nbsp;memorial flag&nbsp;that he had earned as a Navy veteran flying over at the reception. Right at sunset, everyone gathered as the bride, groom and family members lowered and folded the flag. The ceremony was their way of sharing his presence with everyone." - Katie Kaizer&nbsp;</p>					</li>									</ul>			</div>		</div>		<!-- START: slideshow right pane -->		<div class="hp-slideshow-right">			<div class="hp-right-pane-header">				<div class="hp-right-pane-social">					<div class="hp-ss-facebook-share slideshow-share" data-type="facebook">						<div class="hp-ss-service-share-facebook-new hp-slideshow-icon" >&#xe002; <span class="bN">シェア</span></div>					</div>					<div class="hp-ss-twitter-share slideshow-share" data-type="twitter">						<div class="hp-ss-service-share-twitter-new hp-slideshow-icon"  data-beacon='{"p":{"event_action":"twitter_button"}}' >&#xe003; <span class="bN">ツイート</span></div>					</div>					<div class="hp-ss-pinterest-share slideshow-share" data-type="pinterest">						<div class="hp-ss-service-share-pinterest-new hp-slideshow-icon"  data-beacon='{"p":{"event_action":"pinterest_button"}}' >&#xe004;</div>					</div>					<div class="hp-slideshow-share-slideshow"></div>					<div class="clearboth"></div>				</div>				<div class="hp-right-pane-fullscreen"  data-beacon='{"p":{"event_action":"fullscreen"}}' ></div>				<div class="hp-right-pane-exit"   data-beacon='{"p":{"event_action":"close_flyout"}}' >&#10006</div>				</div>								<!-- START: CAPTION BODY -->				<div class="hp-right-pane-content">					<div class="hp-right-pane-title"></div>					<div class="hp-right-pane-caption-container">						<div class="hp-right-pane-caption"></div>					</div>				</div>				<!-- END: CAPTION BODY -->								<!-- START: 300x250 AD -->				<div class="hp-slideshow-right-ad">											<div class="hp-slideshow-service-ad-label">AD</div>										<div id="hp-slideshow-ad-div-518480">						<div id="modulous_slideshow_300x250_req" class="ad_spot">    <script>window.cci_iframe_tag_name_old = window.cci_iframe_tag_name;window.cci_iframe_tag_name = 'huffpost_pc.Slideshow';</script><div id="ad_Slideshow"><script>  (function() {    // Below contains if block can be removed with athena2 transition        var cm8_profile = window.CM8Profile;    var url = 'http://web-jp.ad-v.jp/adam/detect?tag=scr&req=xo&format=Slideshow&robot=false&cat=' + window.cci_iframe_tag_name + '&' + cm8_profile;    var div = document.getElementById('ad_Slideshow');    div.removeAttribute('id');    window.asyncLoadAd(url, 300, 250, div);    var iframe = div.querySelector('iframe');    var reloadAdHandler = function(jQuery) {      var reloadAdCallback = function(ev, elem) {        if (elem.contains(div)) { window.asyncLoadIframe(url, iframe); }        };      if ('function' === typeof(jQuery(document).on)) {        jQuery(document).on('reloadAd', reloadAdCallback);      } else if ('function' === typeof(jQuery(document).bind)) {        jQuery(document).bind('reloadAd', reloadAdCallback);      }      return;    };        var __tmp2 = window.jQuery && reloadAdHandler(jQuery) ||    window.require && require(['jquery'], reloadAdHandler);      }());</script></div><script>window.cci_iframe_tag_name = window.cci_iframe_tag_name_old;</script></div>					</div> 					<div>				</div>				<!-- END: 300x250 AD -->							</div>			<!-- END: slideshow Right Pane -->		</div>		<!-- START: slideshow Bottom Pane -->		<div class="hp-slideshow-bottom" style="display:none;">			<!-- START: 728X90 AD -->				<div id="hp-slideshow-leaderboard-div-518480" class="hp-slideshow-leaderboard-div">									</div> 			<!-- END: 728X90 AD -->		</div>			<!-- END: slideshow Bottom Pane -->				<div class="hp-slideshow-dimmer"  data-beacon='{"p":{"event_action":"grey_out"}}' ></div>		<div class="hp-slideshow-share-overlay">			<div class="hp-slideshow-share-header">				<div class="hp-slideshow-share-title">この記事をシェア:</div>				<a class="hp-slideshow-share-exit" href="#"><span>&#10006</span> 閉じる</a>			</div>			<textarea class="hp-slideshow-share-url" rows="3" cols="70" spellcheck="false"></textarea>			<div class="hp-slideshow-share-options">				<input class="hp-slideshow-share-current-slide" type="checkbox" value="" name="Current Slide" /> 現在のスライド			</div>		</div>	</div></div><script type="text/javascript" charset="utf-8">		huff.use('jquery', function($) {;			$('#hp-slideshow-wrapper-518480').HPAmazingSlider({				flexslider_settings : {},				slideshow_type : 'regular',				slideshow_id : '518480',				api_domain :  'http://api.huffingtonpost.com:80/v1/'			});			$( ".hp-ss-head-title-text" ).mouseover(function() {			  var charlength=(($(this).html().trim()).length);			  var width =($(this).html().length)*10;			  $(this).css('width',width+"px");			  var leftindex="-"+(charlength+40)+"px";			  if(charlength>45){			  $(this).css('left',leftindex);			  }			 });			$( ".hp-ss-head-title-text" ).mouseout(function() {			 $(this).css('left','0px');			 $(this).css('width','443px');			});			 		});		</script><div style='clear:both;'></div>        </div>    </section>                                <!-- article_bottom ad -->                <div id="modulous_article_bottom" class="ad_spot">    <script type="text/javascript">    var amp_med = '40313';    var amp_site = '36377';    var amp_frame = '2007799';    var amp_rurl = document.referrer;    var amp_send = location.protocol + '//ads.adjust-net.jp/adserver/ad/ads_v.js?' + Math.random();    document.write("<scr" + "ipt type='text/javascript' src='" + amp_send + "'></scr" + "ipt>");</script></div>                                    <!-- Follow Tag Links Bottom -->                    <div class="follow bottom-tags"  >    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>    <span class="group">                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]        </span>                <span class="entrytag">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </span>            </span></div>                    <!-- Contribute -->                    <section class="contribute group">    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3></section>                                                    <!-- ads_submissions_captcha -->                                     		        <!--end of content-->                    </footer>        </article>	                                <!-- ads_below_entry_recirc -->        <div id="modulous_below_entry_recirc" class="ad_spot">    <div class="OUTBRAIN" data-src="" data-widget-id="AR_1" data-ob-template="HuffingtonPostJapan" ></div></div>						        <!-- Orbitz Module -->                <!-- 4Wnet_feed Module -->                <!-- ads_bottom_article_text -->                    <!-- Sailthru flyout -->                <!-- Around the web -->                        <!-- Conversations -->        <div id="floaterTarget">          <div id="conversations-huffpost-web"><div class="clear"></div><div style="margin:10px 0">	<div class="clear">&nbsp;</div></div><a name="comments"></a><div id="huffpost-web-fb-comments-opener" style="display: none;">Click here to view Conversations</div><div id="huffpost-web-fb-comments">    <div class="related" style="padding-left:3px">        <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    </div>    <div class="fb_comments">        <fb:comments colorscheme="light" width="570" href="http://www.huffingtonpost.jp/2017/04/02/10-relationship-facts-everyone-should-know-before-getting-married_n_15755998.html"/>    </div>    <div class="clear_first"></div></div><script type="text/javascript">var initializeFBPing = function() {	// Attach the scroll event ping to send to data layer	if (typeof window.bN_scrollTrack === 'function') {		window.bN_scrollTrack('cmts_fb', '#huffpost-web-fb-comments');	}};jQuery(window).bind('load', function(){	initializeFBPing();});</script></div>        </div>                    </div>            <!-- right rail -->    	    <section class="rail"  data-beacon='{"p":{"mlid":"sidebar_right"}}' >	        <!-- ads_right_rail_flex --><div id="modulous_right_rail_flex" class="ad_spot">    <script type="text/javascript">  if ( "function" === typeof(adSetSyncDelay) ) {    adSetSyncDelay('125');  }</script><div id="ad_right_rail_flex" class="ad_wrapper_top"><div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_flex', cci: 'Rectangle'}); }</script><!-- PLACEHOLDERtag Rectangle start--><script type="text/javascript">CM8ShowAd('Rectangle');</script><!-- PLACEHOLDERtag Rectangle end--></div></div></div><!-- ads_text_sponsorship --><div id="modulous_sponsorship" class="ad_spot">    <div class='margin_10_0 center'><div id="dfp_sponsorship" style="text-align:center;"><script>googletag.cmd.push(function() {  googletag.defineSlot('/50996754/promo_article_r1', [[300,250],[300,350]], 'dfp_sponsorship').addService(googletag.pubads());});</script></div></div></div><!-- ads_right_rail_edit_promo --><!-- HPIN unit --><section class="most-popular"  >    <div id="modulous_gravity_most_popular" class="ad_spot">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><div class="mp_cycle"><div id="grv-personalization-35"></div></div><script type='text/javascript'>//<![CDATA[(function() {  window.gravityInsightsParams = {    'type': 'content',    'action': '',    'site_guid': '72ef14275a4db480ac8010c74ede260c'  };  var adServerReq, bUrl, cburl, doUseGravityUserGuid, includeJs, jq, pfurl, type, ug, wlPrefix, wlUrl, _ref, _ref1, _ref2;  includeJs = function(a) {    var b;    b = document.createElement("script");    b.async = !0;    b.src = a;    a = document.getElementsByTagName("script")[0];    return a.parentNode.insertBefore(b, a)  };  bUrl = "";  ug = (doUseGravityUserGuid = !0 === gravityInsightsParams.useGravityUserGuid ? 1 : 0) ? "" : gravityInsightsParams.user_guid || (null != (_ref = /grvinsights=([^;]+)/.exec(document.cookie)) ? _ref[1] : void 0) || "";  wlUrl = (wlPrefix = "https:" === location.protocol ? "https://secure-api.gravity.com/v1/api/intelligence" : "http://rma-api.gravity.com/v1/api/intelligence",   jq = (null != (_ref1 = window.jQuery) ? null != (_ref2 = _ref1.fn) ? _ref2.jquery : void 0 : void 0) || "",   type = "iframe",   adServerReq = gravityInsightsParams.ad || "",   cburl = gravityInsightsParams.cburl || "",   pfurl = gravityInsightsParams.pfurl || "", "" + wlPrefix + "/wl?jq=" + jq + "&sg=" + gravityInsightsParams.site_guid + "&ug=" + ug + "&ugug=" + doUseGravityUserGuid + "&id=grv-personalization-35&pl=35" +    ("&type=" + type + "&ad=" + adServerReq + "&cburl=") + encodeURIComponent(cburl) + "&pfurl=" + encodeURIComponent(pfurl) + ("&x=" + (new Date).getTime()) + ("undefined" !== typeof forceArticleIds && null !== forceArticleIds && forceArticleIds.join ? "&ai=" + forceArticleIds.join(",") : "") + ("undefined" !== typeof apids && null !== apids && "" !== apids ? "&apids=" + encodeURIComponent(apids) : ""));  bUrl && includeJs(bUrl);  wlUrl && (window.gravityInsightsParams.sidebar && (window.gravityInsightsParams.wlStartTime = (new Date).getTime()), includeJs(wlUrl));})();//]]></script></div></section>					<section class="follow-huffpost"  data-beacon='{"p":{"mnid":"mod-follow"}}'  >						<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>						<ul class="untouched follow-links group">							<li class="email selected"  data-beacon='{"p":{"lnid":"email"}}'  >								<button>メール</button>								<div class="content">									<form class="subscribe">										<fieldset class="email">											<legend>メールアドレス</legend>											<input id="subscribe_user_email" class="text" name="email" onfocus="if(this.value=='メールアドレス')this.value=''" value="メールアドレス" type="text">											<input type="checkbox" value="1" name="email_subscribe_check" class="email_subscribe_check" style="display:none;" />	                                        <input type="hidden" name="vertical" value="japan">                                            <input class="button right_rail_signup" type="submit" value="メールマガジンを登録">                                            <label class="signup_error" style="display:none;">同意する場合チェックボックスをチェックしてください。</label>                                            <fieldset class="options">                                                <legend>オプション</legend>                                                                                                	<input type="hidden" name="daily-brief"  id="daily-brief" value="0">                                                                                                                                                                                                	<div class="item">                                                		                                                			<input type="checkbox" class="list" id="vertical-brief" checked="checked" >                                                			<label for="vertical-brief">メールマガジンを講読</label>                                                		                                                	</div>                                                                                                                                                                                                                                                                                                                                                                                            	                                            </fieldset>                                      </fieldset>                                                                              <p class="instructions">                                          その日一番のニュースやブログを掲載（毎日送信）.                                        </p>                                                                                                                </form>                                </div>                            </li>                            <li class="facebook"  data-beacon='{"p":{"lnid":"fb"}}'  >                                 <button>Facebook</button>                                <div class="content off">                                    <ul>                                    <li class="group">                                                                               <strong class="name">HuffPost</strong>                                            <div class="share-button">                                                <div class="fb-like" data-href="http://www.facebook.com/HuffPostJapan" data-send="false" data-layout="button_count" data-width="100" data-show-faces="false" data-colorscheme="light" data-font="trebuchet ms" data-action="like" ref="" style="width: 100px" ></div>                                            </div>                                                                                                                              </li>                                    </ul>                                </div>                            </li>                            <li class="twitter"  data-beacon='{"p":{"lnid":"twitter"}}'  >                                 <button>Twitter</button>                                <div class="content off">                                    <ul>                                        <li class="group">                                            <div class="share-button">																						<strong class="name">HuffPost</strong>											<div class="share-button">											 [hrefx]<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>											 </div>                                             											                                                                                          </li>                                    </ul>                                </div>                            </li>                                                        <li class="google"  data-beacon='{"p":{"lnid":"gplus"}}'  >                                <button>Google Plus</button>                                <div class="content off">                                    <ul>                                            <li class="group">                                                                                        <strong class="name">HuffPost</strong>                                                 <div class="share-button">                                                  <div class="g-plusone" data-annotation="bubble" data-size="medium" data-width="32" data-href="http://www.huffingtonpost.jp/japan"></div>                                                 </div>                                                                                                                                    </li>                                    </ul>                                </div>                            </li>                                                        							<li class="rss no-ad"  data-beacon='{"p":{"lnid":"rss"}}'  >								<button>RSS</button>								<div class="content off">									<ul>									                                    																																																					<li>		                                            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]												</li>																					                                    										<li>                                            <a class="more" href="/syndication/">全て RSS</a>										</li>									</ul>								</div>							</li>							<li class="phone no-ad"  data-beacon='{"p":{"lnid":"mobile"}}'  >								<button>電話番号</button>								<div class="content off">									<ul>										<li>											<a class="ios sprite" href="http://itunes.apple.com/jp/app/the-huffington-post/id306621789?mt=8" target="_blank">Available on the App Store</a>										</li>										<li>											<a class="android sprite" href="https://play.google.com/store/apps/details?id=com.huffingtonpost.android&hl=ja" target="_blank">Android App on Google Play</a>										</li>                                        <li>                                            <a class="blackberry sprite" href="http://appworld.blackberry.com/webstore/content/19143/?countrycode=JP&lang=ja" target="_blank">Get it at Blackberry App World</a>                                        </li>									</ul>								</div>							</li>						</ul>                        					</section> <!-- ads_text_sponsorship --><!-- ads_snn_234x60 --><!-- ads_most_popular_edit_promo --><!-- ads_sponsorship_2 --><div id="modulous_sponsorship_2" class="ad_spot">    <div id="dfp_sponsorship_2" style="text-align:center;"><script>googletag.cmd.push(function() {  googletag.defineSlot('/50996754/promo_article_r2', [[300,350],[300,250]], 'dfp_sponsorship_2').addService(googletag.pubads());});</script></div></div><!-- ads_lower_promo --><!-- ads_right_rail_300x100_upper --><div id="modulous_right_rail_300x100_upper" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_300x100_upper', cci: 'badge_1'}); }</script><!-- PLACEHOLDERtag badge_1 start--><script type="text/javascript">CM8ShowAd('badge_1');</script><!-- PLACEHOLDERtag badge_1 end--></div></div><!-- ads_right_rail_lower --><div id="modulous_right_rail_lower" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_lower', cci: 'Secrectangle'}); }</script><!-- PLACEHOLDERtag Secrectangle start--><script type="text/javascript">CM8ShowAd('Secrectangle');</script><!-- PLACEHOLDERtag Secrectangle end--></div></div><!-- ads_btf_300x100 --><div class="ad_lower_right_commercials_wrapper">    <!-- ads_right_rail_300x100_lower -->    <div id="modulous_right_rail_300x100_lower" class="ad_spot">    <div><script>if (typeof debugadcode == 'function') { debugadcode('CCI', {placement: 'right_rail_300x100_lower', cci: 'badge_2'}); }</script><!-- PLACEHOLDERtag badge_2 start--><script type="text/javascript">CM8ShowAd('badge_2');</script><!-- PLACEHOLDERtag badge_2 end--></div></div>    <!-- ads_text_sponsorship_2 -->        <!-- ads_commercial_module -->    	<!-- ads_right_rail_300x250_lower -->    </div><script type="text/javascript">    try {        var ad_els = jQuery("#ad_right_rail_300x250_lower");        var right_rail_el = jQuery(".rail");                if ( ad_els.length && right_rail_el.length ) {            ad_els.bind("mouseover", function(){                if ( right_rail_el.hasClass("fix") ) {                    window.scrollTo(window.scrollX, window.scrollY - 1);                   }                return;            });        }    } catch (e) {            }</script> <script type="text/javascript">jQuery( document ).ready(function( $ ) {    jQuery('#ad_right_rail_flex').prepend("<span class='adflex'></span>");   jQuery('.adflex').append( __('Advertisement'));});</script><style>#ad_right_rail_flex .adflex {color: #999;text-transform: uppercase;font-size: 9px;font-family: arial;padding-bottom: 4px;display: inline-block;padding-left: 2px;}.ad_wrapper_top {background: none !important;}</style>	    </section>        </section>        </section>        <!-- END page_content -->        <!-- page_footer -->        <section class="footer">    <!-- Served from: production-mt-wfe-51-54.use1 -->    <!-- ads_leaderboard_bottom -->         <!-- visual footer -->    <footer>        <!-- Search Box -->        <div class="search"></div>        <!-- Legal and Informational Links -->        <menu class="links">			            															<ul class="group row1">													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx]							</li>											</ul>										<ul class="group row2">													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]							</li>													<li>								[hrefx][hrefx][hrefx][hrefx][hrefx]							</li>											</ul>								                 </menu>                <!-- Legal Disclaimers -->        <div class="legal">		                                                                                          <span class="copyright">Copyright &copy;2017 The Huffington Post Japan, Ltd. All Rights Reserved.</span>                                                                                  <span class="trademark"> The Huffington Post Japan, Ltd. All Rights Reserved. 2017&copy; </span>		   	           </div>        			<div class="part-of">Part of <span class="part-of-group">HPMG News</span></div>            </footer></section>        <!-- END page_footer -->        <div id="tfm_skyscraper" class="top_right_skyscraper"></div>    </div>    <!-- ads_bottom_code_blocks -->        <!-- ads_bottom_1x1 -->    <div id="modulous_bottom_1x1" class="ad_spot">    <script src="//a.teads.tv/page/58324/tag" async="true"></script><!-- User Insight PCDF Code Start : huffingtonpost.jp --><script type="text/javascript"><!--var _uic = _uic ||{}; var _uih = _uih ||{};_uih['id'] = 51544;_uih['lg_id'] = '';_uih['fb_id'] = '';_uih['tw_id'] = '';_uih['uigr_1'] = ''; _uih['uigr_2'] = ''; _uih['uigr_3'] = ''; _uih['uigr_4'] = ''; _uih['uigr_5'] = '';_uih['uigr_6'] = ''; _uih['uigr_7'] = ''; _uih['uigr_8'] = ''; _uih['uigr_9'] = ''; _uih['uigr_10'] = '';/* DO NOT ALTER BELOW THIS LINE *//* WITH FIRST PARTY COOKIE */(function() {var bi = document.createElement('scri'+'pt');bi.type = 'text/javascript'; bi.async = true;bi.src = ('https:' == document.location.protocol ? 'https://bs' : 'http://c') + '.nakanohito.jp/b3/bi.js';var s = document.getElementsByTagName('scri'+'pt')[0];s.parentNode.insertBefore(bi, s);})();//--></script><!-- User Insight PCDF Code End : huffingtonpost.jp --><script type="text/javascript">  try {     // Make sure the adsDevilAd object exists before putting your function on it     window.adsDevilAd=window.adsDevilAd||{};     adsDevilAd.adinfo=function(n,d,w,h){       // n will be the ad number, we assume the LB ad is #1.        // NOTE: d=divName if you'd rather use that.  And w,h are width and height respectively.         if (window.adsDevilAd.ad[1].aolFormat == "Wallpaper") {           window.floater.destroy();           jQuery('#badges_v2_1').css('display','none !important');         }     };   }   catch (e) {}</script></div>    <!--modulous footer -->    <script>googletag.cmd.push(function() { googletag.display('dfp_sponsorship_2'); });</script><script>// Restrict Most Popular title to 2 lines(function() {if (!window.jQuery) { return; }var $mpt = jQuery('.mp_title');if ($mpt.length == 0) return;function numLines($elem) {  lh = parseFloat($elem.css('line-height').replace('px', ''));  return Math.round($elem.height()/lh);}for (i=0; i<10 && numLines($mpt)>2; i++) {  $mpt.css('font-size', '-=1');}})();</script><script>    (function(){        try {                        var permalink = (window.location.protocol + "//" + window.location.hostname + window.location.pathname);            var allOutbrains = document.querySelectorAll('.OUTBRAIN');            for (var w in allOutbrains){                var __tmpOb = allOutbrains[w].setAttribute && allOutbrains[w].setAttribute('data-src', permalink);            }                            var e = document.createElement('script');            e.async = 1;            e.src = "http://widgets.outbrain.com/outbrain.js";            document.body.appendChild(e);        } catch(e) { console.error(e); }    }());</script><script>googletag.cmd.push(function() { googletag.display('dfp_sponsorship'); });</script>    <!-- END modulous footer -->        <!-- Aol Universal Navbar module -->        <!-- correction -->    <style type="text/css">span.error {	 margin-top: 0;	 display: none;}  span.error.show {	display: block;}.hp_blue_lb_head_subimage {    text-align: center;}</style><div style="display: none;">	<div id="lightbox">        <div class="content">                                <div class="social_modal_content">                <div id="submissions_modal" class="sbm_modal">                    <h4 id="submission_header" class="sbm_heading hd_title">事実誤認、または誤字を知らせる場合はこちらのフォームをお使いください。</h4>                <div id="submission_notify" class="sbm_notify">メッセージをお送りください。</div>                <span class="required">* 必須</span>                <form id="submissions_form" method="post">                    <input type="hidden" name="entry_id" value="15755998">                    <div class="smb-line clearfix group">                        <span class="sbm_asterisk ar_right">*</span>                        <input class="bordered" type="text" placeholder="名前" name="submission_name" id="submission_name" value="">                        <span class="sbm_asterisk ar_right">*</span>                        <input class="bordered nomargin" type="text" placeholder="メールアドレス" name="submission_email" id="submission_email" value="">                    </div>                    <div class="smb-line clearfix">                          <span class="submission_name error"></span>                          <span class="submission_email error"></span>                    </div>                    <div class="sbm_fc">                        <span class="sbm_l"><span class="sbm_asterisk">*</span> <strong>送信内容の種類をお選びください</strong></span>                        <select name="submission_error_kind" id="submission_error_kind" class="sbm_koe sbm_r">                            <option value="">送信内容の種類を選択</option>                            <option value="Factual or typographical">事実誤認または誤字</option>                            <option value="Comment moderation problem">コメントに関する問題</option>                            <option value="Rights and permissions">著作権や記事の転載に関する問題</option>                            <option value="Other">その他</option>                        </select>                    </div>                    <div class="smb-line clearfix">                          <span class="submission_error_kind error"></span>                    </div>                    <div class="sbm_fc">                            <span class="sbm_l float_left"><span class="sbm_asterisk">*</span> 訂正の内容をお書きください</span>                            <span class="sbm_counter" id="sbm_counter">0 count</span>                        <div class="clear_first"></div>                        <textarea id="submission_body" class="basic sbm_textarea sbm_r arial_12" name="submission_body" rows="9" cols="22">訂正の内容をお書きください（1,000文字以内）</textarea>                    </div>                    <div class="smb-line clearfix">                        <span class="submission_body error"></span>                    </div>                    <div class="bottom_block clearfix">                        <p class="small smb_note">                        	<span class="sbm_asterisk">*</span> スパム防止のために、下記の画像の中の単語を入力してください                        </p>                        <!--captcha-->                        <div class="float_left recaptcha_nothad_incorrect_sol recaptcha_isnot_showing_audio" id="submission_recaptcha">                           <!-- Insert PHP captcha code here -->                        </div>                        <!-- end captcha -->                        <div class="float_left" style="padding:20px; width: 227px;">                            <input id="submission_opt_in" class="sbm_checkbox" name="submission_opt_in" type="checkbox">                                                        <label for="submission_opt_in">「今日のヘッドライン」を登録</label>                                                        <br>                            <br>                            <div class="centered" id="submissions_bottom_area">                                <input type="submit" value="送信" id="submission_submit" href="javascript:void(0);" class="button double-extra-large light-blue sbm_send">                            </div>                            <div id="submission_ajax_loader" class="submission_ajax_loader"></div>                        </div>                    </div>                </form>            </div>        </div>        <div id="submission_thanks" class="sbm_thanks">リポートありがとうございます。</div>    </div></div>    <!-- Tracking -->    <!-- Nielson Feed -->    <!-- BEGIN Nielsen Tracking --><script type="text/javascript">  HPTrack.Services.trackTo(['Nielsen']);</script><noscript>   <img src="//secure-us.imrworldwide.com/cgi-bin/m?ci=us-703240h&amp;cg=0&amp;cc=1&amp;ts=noscript" width="1" height="1" alt="" /></noscript><!-- END Nielsen Tracking -->     <!-- Webtrekk Feed -->        <!-- Xiti Tracking -->        <!-- VGWort Tracking -->            <!-- quantcast Tracking -->        <!-- Parsely Tracking -->    <!-- START Parse.ly Include: Standard --><div id="parsely-root" style="display: none">  <div id="parsely-cfg" data-parsely-site="huffingtonpost.jp"></div></div><script>(function(s, p, d) {  var h=d.location.protocol, i=p+"-"+s,      e=d.getElementById(i), r=d.getElementById(p+"-root"),      u=h==="https:"?"d1z2jf7jlzjs58.cloudfront.net"      :"static."+p+".com";  if (e) return;  e = d.createElement(s); e.id = i; e.async = true;  e.src = h+"//"+u+"/p.js"; r.appendChild(e);})("script", "parsely", document);</script><!-- END Parse.ly Include -->    <!-- END page_wrapper -->    <!-- end RUM -->    <script type="text/javascript">huff.use('conf', function(c){ c.set({"mtime":1502259893,"entry":"15755998","vertical":"japan","vertical-id":"129","vertical-name":"Japan","ads\/zone":"","topnav\/version":"2","cookie\/domain":"huffingtonpost.jp","websocket\/enabled":false,"websocket\/url":"fiji-production-ws.use1.huffpo.net","websocket\/init":false,"site_blog_id":42,"auth_secure_domain":"secure.huffingtonpost.com","auth_secure_protocol":"https","auth_method":"frame","static_secure_domain":"s-s.huffpost.com","images_secure_domain":"s-i.huffpost.com","images_secure_www_domain":"s-i.huffpost.com","social_tracking":true,"primary_vertical_id":-1,"primary_vertical_name":false,"primary_vertical_facebook_name":"HuffingtonPost","primary_vertical_twitter_name":"HuffingtonPost","current_vertical_facebook_name":"HuffingtonPost","current_vertical_twitter_name":"HuffingtonPost"}); });</script>    <!-- RUM footer -->    <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"a2134792db","applicationID":"4028938","transactionName":"YFIDbEBYVhJYURBaXFkYIk1BTVcMFkIMXFZZXhkXaVxWFUtLORxZRxgrWUJYVg==","queueTime":0,"applicationTime":251,"ttGuid":"","agentToken":"","atts":"TBUAGghCRRw=","errorBeacon":"bam.nr-data.net","agent":""}</script>    <script type="text/javascript" src="http://s0.huffpost.com/assets/js.php?v=1501522368&f=phoenix%2Feditions.js%2Clayouts%2F13.js%2Cphoenix%2Ffloating_share.js" async></script>        <script> jQuery(document).foundation(); </script></body></html>