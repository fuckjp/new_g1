<!DOCTYPE html><html lang="jp">    <head>        <meta http-equiv="Content-Type" charset="UTF-8" />        <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no" />        <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE11">        <meta name="apple-mobile-web-app-title" content="ボランティア・市民活動の総合情報サイト「ボラ市民ウェブ」">        <meta name="description" content="[metatags_description]">        <meta name="keywords" content="[metatags_keywords]">        <meta property="og:title" content="ボランティア・市民活動の総合情報サイト「ボラ市民ウェブ」">        <meta property="og:site_name" content="ボランティア・市民活動の総合情報サイト「ボラ市民ウェブ」">        <meta property="og:description" content="[metatags_description]">        <meta property="og:image" content="res/images/ogimg.png">        <link rel="apple-touch-icon" href="/appicon.png">        <link rel="shortcut icon" href="/tvac.ico">        <!-- COMMON JS -->        <script src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script>        <script src="/res/js/jquery.calendar.js" type="text/javascript"></script>        <script src="/res/js/common.js" type="text/javascript"></script>        <script src="/res/js/home.js" type="text/javascript"></script>        <script src="/res/js/second.js" type="text/javascript"></script>        <script src="/res/js/scroll.js" type="text/javascript"></script>        <!-- CSS -->        <link href="/res/css/common.css?v4" rel="stylesheet">        <link href="/res/css/home.css?v4" rel="stylesheet">        <link href="/res/css/second.css?v3" rel="stylesheet">        <link href="/res/css/form.css?v4" rel="stylesheet">        <!-- SLICK -->        <link rel="stylesheet" href="/res/css/slick.css">        <link rel="stylesheet" href="/res/css/slick-theme.css">        <script src="/res/js/lib/slick.js"></script>        <!-- SCROLLBAR -->        <link href="/res/css/query.mCustomScrollbar.css" rel="stylesheet">        <script src="/res/js/jquery.mCustomScrollbar.js"></script>        <!-- TITLE -->        <title>[metatags_title]</title>    </head>    <body>        <header>  <div class="inner">    [hrefx][hrefx][hrefx][hrefx]    <div id="headCal" class="forPC">    <a href="/calendar/?date=201708&#dayIs09">  <span class="Y">2017</span>年<br>  <span class="M">8</span>月<span class="D"> 9</span>日（<span class="W">水</span>）  </a>  </div>    <div id="headerItems">    <div class="headItemA forPC">      <ul>        <li><a class="txtLink" href="/tvac/access.html">アクセス</a></li>        <li><a class="txtLink" href="/site/sitemap.html">サイトマップ</a></li>        <li><a class="txtLink" href="/english/">ENGLISH</a></li>        <li><a class="btnLink btnW" href="/form/syuzai/"><span class="icon-mail"><img src="/res/images/second/icon-mail.png" alt=""></span>取材申し込み</a></li>      </ul>    </div>    <div class="headItemB">      <ul>        <li class="forPC">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forPC">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forPC">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP spHeadSearch"><span class="icon-search"><img src="/res/images/second/icon-search-white.png" alt=""></span><span class="searchTxt">検索</span></li>      </ul>      <div id="searchForm">      <form method="GET" action="/search/">        <span><input type="text" placeholder="サイト内検索" name="q" ></span>        <span><button type="submit">検索</button></span>      </form>      </div>    </div>  </div>  <!-- /#headerItems -->  </div>  <div id="globalMenu">    <ul>      <li><a  href="/"><img class="forSP" src="/res/images/common/sp-menu1.png" alt="トップ"></a></li>      <li><a  href="/tvac/"><img class="forSP" src="/res/images/common/sp-menu2.png" alt="TVACとは？"></a></li>      <li id="globalMenuSagasu">[hrefx][hrefx][hrefx][hrefx]</li>      <li><a  href="/shiru/"><img class="forSP" src="/res/images/common/sp-menu4.png" alt="ボランティア・NPOを知る"></a></li>      <li><a  href="/special/"><img class="forSP" src="/res/images/common/sp-menu5.png" alt="特設コンテンツ"></a></li>    </ul>  </div></header>        <!-- contents --><div id="contents">    <div id="mainColumn">        <div id="mainV">    <div class="mainImg">    [hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mainImg">        [hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mainImg">    [hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mainImg">        [hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mainImg">        [hrefx][hrefx][hrefx][hrefx]    </div>    <div class="mainImg">        [hrefx][hrefx][hrefx][hrefx]    </div></div>        <p id="appeal">[hrefx][hrefx][hrefx][hrefx]は、ボランティア・市民活動の情報を発信しています。</p>                <div id="saigaiNews">            <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>            <div id="saigaiNewsWrap">                                <dl>                    <dt>2017.08.09更新</dt>                    <dd>                                                    <a href="/news/50075">                                「平成29年7月 九州北部豪雨」による災害ボランティア情報【2017年8月9日10:57】（第52報）                            </a>                                                                                                <span class="newsCredit">                                                        （TVAC）                                                    </span>                                            </dd>                </dl>                                <dl>                    <dt>2017.08.09更新</dt>                    <dd>                                                    <a href="/news/50090">                                秋田県豪雨による災害ボランティア情報　【2017年8月9日10:16】（第17報）                            </a>                                                                                                <span class="newsCredit">                                                        （TVAC）                                                    </span>                                            </dd>                </dl>                            </div>        </div>        <!-- /#saigaiNews -->                        <div id="homeMenu">            <ul>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>                <li>                    [hrefx][hrefx][hrefx][hrefx]                </li>            </ul>        </div>        <div id="topics">            <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>            <ul class="detailList">                                <li>                    <div class="postHead">                                                                                         <span class="tag volunteer">ボランティア募集</span>                                                                                                                                                                                                                                                             <span class="day">公益社団法人シャンティ国際ボランティア会 より</span>                                        </div>                                            [hrefx][hrefx][hrefx][hrefx]                                        <p>                                        <img src="/res/pics/daily/41703_1.jpg"  alt="">                                        日本で出版された絵本に、ビルマ語やラオス語などの翻訳シールを貼りつけ、現地の子どもたちに届けています。絵本は現地の図書館や学校、移動図書館などで活用され、ボロボロになるまで子どもたちに読まれます。<br />あたなの作った1冊を子どもたちに届けませんか？                    </p>                </li>                            </ul>            <div class="more">[hrefx][hrefx][hrefx][hrefx]</div>        </div>        <!-- /#topics -->        <!-- /#topics -->        <div id="news">            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>            <ul>                                <li>                    <div class="postHead">                                                                                                                                                                     <span class="tag calamity">災害情報</span>                                                 <span class="day">2017/8/9</span>                    </div>                                        [hrefx][hrefx][hrefx][hrefx]                                                            <span class="newsCredit">                                                （TVAC）                                            </span>                                    </li>                                <li>                    <div class="postHead">                                                                                                                                                                     <span class="tag calamity">災害情報</span>                                                 <span class="day">2017/8/9</span>                    </div>                                        [hrefx][hrefx][hrefx][hrefx]                                                            <span class="newsCredit">                                                （TVAC）                                            </span>                                    </li>[metatags_descriptionx]                                                          <span class="newsCredit">                                                （相談担当）                                            </span>                                    </li>                                <li>                    <div class="postHead">                                                     <span class="tag oshirase">お知らせ</span>                                                                                                                                                                 <span class="day">2017/8/1</span>                    </div>                                        [hrefx][hrefx][hrefx][hrefx]                                                            <span class="newsCredit">                                                （TVAC）                                            </span>                                    </li>                            </ul>            <div class="more">[hrefx][hrefx][hrefx][hrefx]</div>        </div>        <!-- /#news -->        <div id="areaMap">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    <div class="subArea">        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]    </div>    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    <div class="subArea">        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    <div class="subArea"> [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]    </div>    <h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>    <div class="subArea"> [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]        [hrefx][hrefx][hrefx][hrefx][hrefx]    </div></div>        <!-- /#areaMap -->        <div class="more next">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>    </div>    <!-- /#mainColumn -->    <div id="subColumn"><!-- ■EID■■■■-->      <div id="subjects" class="forPC">  <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>  <ul>    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>  </ul>  </div><!-- #subjects //-->      <div id="schedule" class="forPC">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>    <div id="calendar"></div>  </div>  <div id="iconMenu">    <ul>      <li><a href="/tvac/services.html">        <span class="cell"><span><img src="/res/images/second/icon-side-hatena.png" alt=""></span></span>        <span class="cell">TVACについて・<br>ご利用案内</span>      </a></li>      <!-- <li><a href="#">        <span class="cell"><span><img src="/res/images/second/icon-side-calender.png" alt=""></span></span>        <span class="cell">会議室・<br>印刷機の予約状況</span>      </a></li> -->      <li><a href="/shiru/hajime/index.html">        <span class="cell"><span><img src="/res/images/second/icon-side-wakaba.png" alt=""></span></span>        <span class="cell">初めての<br>ボランティア</span>      </a></li>      <li><a href="/shiru/hajime/insurance.html">        <span class="cell"><span><img src="/res/images/second/icon-side-hart.png" alt=""></span></span>        <span class="cell">ボランティア保険</span>      </a></li>    </ul>  </div>  <div id="banner">    <ul>    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>    </ul>  </div>  <div id="twit" class="forPC"><a width="100%" height="700"class="twitter-timeline" data-dnt="true" href="https://twitter.com/tokyovolunteer"  data-widget-id="347002389926121474">@tokyovolunteer からのツイート</a><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>  </div>  </div><!-- /#subColumn -->    <!-- /#subColumn --></div><!-- /#contents --><footer>  <p class="forSP footerRead">ボランティアのことを聞きたい。<br>  NPO・市民活動のことを知りたい。<br>  そんな時は、東京ボランティア・市民活動センターへ。</p>    <div id="spTel" class="forSP">  <p class="telNum"><span><img src="/res/images/common/icon-tel.png" alt=""></span><span>[hrefx]</span></p>    <p class="telInfo">火～土曜 9:00～21:00 / 日曜 9:00～17:00<br>※休館日: 月曜・祝日・年末年始</p>  </div>  <div id="footerA">    <div class="inner">      <ul>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx]</li>        <li class="forSP">[hrefx][hrefx][hrefx][hrefx]</li>      </ul>            <div id="footerTwi" class="forSP">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>            [hrefx][hrefx][hrefx][hrefx][hrefx]    </div>  </div>    <div id="footerB">    <div class="inner">      <div class="footerLeftSide forPC">        <div id="footerName">東京ボランティア・市民活動センター<span>TVAC  Tokyo Voluntary Action Center</span></div>        <div id="footerAccess">〒162-0823 東京都新宿区神楽河岸1-1　セントラルプラザ10階<br>電話: 03-3235-1171 （代表） /　ファックス: 03-3235-0050</div>      </div>      <div class="footerRightSide">        <div class="caution">このサイトの著作権はすべて東京ボランティア・市民活動センターにあります。<br class="forPC">無断複製・転載を禁じます。</div>        <div class="credit">copyright 1998-2017 Tokyo Voluntary Action Center.</div>      </div>    </div>  </div></footer><!--    LOADING  STYLES--><link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1/themes/redmond/jquery-ui.css" ><!--    LOADING  SCRIPTS--><script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1/jquery-ui.min.js"></script><script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1/i18n/jquery.ui.datepicker-ja.min.js"></script><!--    calendar FOR SIDEBAR--><script></script><!--    FORM VALIDATION--><link rel="stylesheet" href="/res/js/validation//validationEngine.jquery.css"><script type="text/javascript" src="/res/js/validation/jquery.validationEngine.js?v=1"></script><script type="text/javascript" src="/res/js/validation/jquery.validationEngine-ja.js?v=1"></script><script>$(function() {    $("#formBox").validationEngine();});function keywords5(field, rules, i, options) {   var text = $("#keywords5").val();   var arr = text.split(",");   if(arr.length > 5){        return "キーワードは最大5個までです。";   }}function hankaku(field, rules, i, options) {    if(field.val() == "") return;    if(field.val().match(/[^\x01-\x7E]/g)) return "半角で入力してください。"}function uploadJPG(field, rules, i, options) {    var file = field[0]["files"][0];    if(file == undefined) return;    var eMsg = "";    if(file.size > 5000000){        eMsg += "・アップロードサイズ制限の5MBを超えています。<br>";    }        console.log(file.type);    if(file.type === "image/jpeg" || file.type === "image/jpg" ||  file.type == undefined){    }else{        eMsg += "・ファイルの種類がJPGではありません。<br>";    }    if(eMsg !== "") return eMsg;}function uploadPDF(field, rules, i, options) {    var file = field[0]["files"][0];    if(file == undefined) return;    var eMsg = "";    if(file.size > 20000000){        eMsg += "・アップロードサイズ制限の20MBを超えています。<br>";    }    if(file.type !== "application/pdf" && file.type != undefined){        console.log(file.type);        eMsg += "・ファイルの種類がPDFではありません。<br>";    }    if(eMsg !== "") return eMsg;}</script></script><!-- GoogleAnalytics --><script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');ga('create', 'UA-2332726-2', 'auto');ga('require', 'displayfeatures');ga('require', 'linkid');ga('send', 'pageview');</script></body></html>