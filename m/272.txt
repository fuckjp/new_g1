<!DOCTYPE HTML><html lang="jp"><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb#"><meta name="google-site-verification" content="ilYI_xSMTWEo5X-8w1yyuoD33xr68qqfVdWjcnum8pk" /><meta http-equiv="Content-Type" charset="UTF-8" /><!--[if !IE]><meta http-equiv="X-UA-Compatible" content="IE=edge"><![endif]--><title>[metatags_title]</title><meta name="description" content="[metatags_description]"><meta name="keywords" content="[metatags_keywords]"><meta property="og:description" content="[metatags_description]"><meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=0"><meta name="format-detection" content="telephone=no"><meta property="og:site_name" content="goo辞書"><meta property="og:title" content="[metatags_title]"><meta property="og:type" content="website"><meta property="og:url" content="https://dictionary.goo.ne.jp/jn/221840/meaning/m0u/"><meta property="og:image" content="https://u.xgoo.jp/img/sns/dictionary.png"><meta property="fb:app_id" content="338238396366874"><meta name="verify-v1" content="qa53LW9BUVLPhvNzCRUOvDgNzjBF03gXDDsyUdVIJjY=" ><meta name="y_key" content="fd9d2f743badb7cf"><meta name="robots" content="noarchive"><link rel="canonical" href="https://dictionary.goo.ne.jp/jn/221840/meaning/m0u/" /><link rel="apple-touch-icon" href="//u.xgoo.jp/img/sns/dictionary.png">            <link rel="stylesheet" href="//u.xgoo.jp/css/2.1.css"><link rel="stylesheet" href="//u.xgoo.jp/fa/x.css"><!--link rel="subresource" href="http://u.xgoo.jp/jquery/1.8.js"--><script src="//u.xgoo.jp/jquery/1.8.js"></script><link rel="subresource" href="//u.xgoo.jp/js/1.1.js"><link rel="stylesheet" href="/css/colorbox.css?1475203699">    <link rel="stylesheet" href="/css/2.1.css?1475203699"><link rel="stylesheet" href="/css/style.css?1497400319">        <link rel="stylesheet" href="/hyge_modified/css/style.css?1475203699">    <link rel="stylesheet" href="/hyge_modified/css/search_result.css?1475203699">                 <script type="text/javascript" src="/js/check_width.js?1475203700"></script><script>_goo_display_type = checkWidth();jQuery(window).resize(function(){	_goo_display_type = checkWidth();});</script><script type="text/javascript">var u=navigator.userAgent;if((/android/i.test(u)&&/mobile/i.test(u))||(!/ipad/i.test(u)&&/ip(hone|od)/i.test(u))){// in the case of smart-phonewindow._goo_display_type = 'sp';} else {window._goo_display_type = 'pc';}</script><script type="text/javascript" src="//adcdn.goo.ne.jp/images/js/smarttag-tool-dicshogakukokugo.js" charset="utf-8"></script><script type="text/javascript" src="/js/suggest.js?1475203700"></script><script language="javascript" src="/js/swfobject.js?1475203700"></script><script type="text/javascript" src="/js/playsound.js?1475203700"></script>     <!----></head><body class="NR-col2a NR-rwd top"><!-- Google Tag Manager --><script>dataLayer = [{    'template': 'pc',    'rwd': 1}];var u = navigator.userAgent;if((/android/i.test(u)&&/mobile/i.test(u))||(!/ipad/i.test(u)&&/ip(hone|od)/i.test(u))){    dataLayer[0].template = 'sp';}</script><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-N3G4LD"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-N3G4LD');</script><!-- End Google Tag Manager --><div id="fb-root"> </div><div id="NR-page">    <header role="banner">  <div id="NR-header" >    <div id="NR-header-in">                       <p id="NR-header-logo"> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </p>      <div id="NR-header-util">        <ul id="NR-header-tool" class="cx">          <li> [hrefx][hrefx][hrefx][hrefx][hrefx] </li>          <li> [hrefx][hrefx][hrefx] </li>          <li> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>        </ul>                        <!-- header-ocn(option) -->        <div id="NR-header-ocn"> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</div>                  </div>                          <!-- header-in -->    </div>  </div></header>    <aside role="complementary">  <div class="NR-pr aside">    <!--ad_superbanner-->      <div id="gooad-long"><script type="text/javascript">window.gooad && window.gooad.render();</script></div>    <!--/ad_superbanner-->  </div></aside>    	<nav role="navigation"><div id="NR-nav">		<div id="NR-nav-main">			<div id="NR-nav-main-scrolling">			<ul id="NR-nav-main-in" class="cx">				<li >[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li  class="NR-now">[hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx][hrefx]</li>                                <li >[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>				<li >[hrefx][hrefx][hrefx]</li>			</ul>			</div>		</div>        	<!-- nav --></div></nav><!-- 検索フォーム --> <div class="NR-search-top sp-hidden">  <form name="dict" id="freeword1" action="/freewordsearcher.html" method="get" class="NR-search-in cx" role="search">    <div class="search-unit" id="search-unit">      <input name='MT' type="text" value="易い" class="NR-text NR-search-text" placeholder="調べたいjp葉を入力" id="searchtop" autocomplete="off" onfocus="initSuggest();" tabindex="1">            <select class="NR-select" name="mode" id="searchtop_searchmode">        <option value="0" selected>で始まる</option>        <option value="1">で一致する</option>        <option value="2">で終わる</option>        <option value="3">を説明文に含む</option>        <option value="6">を見出しに含む</option>      </select>      <div class="NR-clear-search-text"></div>             <div class="suggest-unit" id="suggest-unit" style="display:none;">      <!-- /.suggest-unit --></div>            <!-- /.search-unit --></div>                      <input type="image" src="//dictionary.xgoo.jp/img/btn_search.png" title="検索" alt="検索" tabindex="60">                            <input type="hidden" name="kind" value="jn" id="searchtop_suggesttype">              </form>    <!-- search(option) --></div>  <!-- 検索 --><!-- /検索フォーム --><!-- SP用検索フォーム --><!-- /SP用検索フォーム --><!-- leaf_crumb -->    <!-- leaf_crumb --><nav role="navigation">    <div class="nav tpath">    <div class="NR-tpath  ">      <div class="tpath-in">          <ol class="cx">          <li class="NR-first" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="//dictionary.goo.ne.jp">              <span itemprop="title">辞書</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/">              <span itemprop="title">国語辞書</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/category/品詞/">              <span itemprop="title">品詞</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/category/品詞/形容詞/">              <span itemprop="title">形容詞</span>            </a>          </li>          <li><strong>「易い」の意味</strong></li>        </ol>        </div>    </div>  </div>  </nav><!-- /leaf_crumb --><!-- /leaf_crumb --><div id="NR-wrapper">  <div id="NR-wrapper-in" class="cx">    <div id="NR-main">                    <!--csi ad top-->      <div class="NR-ad sp-hidden">    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>    <!-- [PC]goo_dic_kokugo_left_upper_670*120 -->    <ins class="adsbygoogle"          style="display:inline-block;width:670px;height:120px"          data-ad-client="ca-pub-7341853905703022"          data-max-num-ads="2"          data-ad-slot="9917868197"></ins>    <script>        (adsbygoogle = window.adsbygoogle || []).push({});        </script></div>      <!--/csi ad top-->                          <!-- Leaf Mode -->      <div class="tab-wrap">  <nav role="navigation">    <ul class="list-tab-a">                  	            <li class="NR-now">意味</li>       		                                                                              <li> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>                                                                                                                        		              </ul>  </nav>  <!-- tab-wrap --></div><!-- /Leaf Mode -->      <!-- /Leaf Mode -->      <!-- Leaf -->      <div class="contents-wrap-b">        <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>        <!--/explanation-->        <div class="contents-wrap-b-in">          <div class="content-box visible">                       <div class="content-box sp-hidden">              <p class="cite sup-a">出典：[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>            </div>            <!--kokugo-->            <div class="kokugo">              <!--explanation-->              <div class="explanation"> <ol class="list-data-b"><li class="in-ttl-b"><span class="hinshi">［形］</span>［文］やす・し<span class="hinshi">［ク］</span>《「[hrefx][hrefx]」と同語源》</li></ol>	<ol class="list-data-b"><li class="in-ttl-b text-indent"><strong>１</strong> 行うのがやさしい。たやすい。「jpうだけならいとも―・いことだ」</li></ol>	<ol class="list-data-b"><li class="in-ttl-b text-indent"><strong>２</strong> 動詞の連用形に付く。</li></ol>	<ol class="list-data-b"><li class="in-ttl-b">&#x32d0;そうなりがちである。とかく…する傾向にある。「壊れ―・いおもちゃ」「さび―・い金属」</li></ol>	<ol class="list-data-b"><li class="in-ttl-b">&#x32d1;そうすることがたやすい。…するのが容易である。「書き―・いペン」「相談し―・い人」</li></ol>	<ol class="list-data-b"><li class="in-ttl-b"><span class="hasei">[派生]</span><strong>やすさ</strong><span class="hinshi">［名］</span></li></ol>                              </div>              <!--/explanation-->  </div>            <!--/kokugo-->                                    <!-- tags -->            <ul class="list-tag-b">                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                      </ul>            <!-- /tags -->                                                    <!-- csi ad top -->            <div id="spoLine"></div><div>  <!--csi ad-->  <aside role="complementary" class="sp-hidden">    <div class="NR-ad ad-wrap aside">      <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>      <!-- [PC]goo_dic_kokugo_left_upper_670*120 -->      <ins class="adsbygoogle"           style="display:inline-block;width:670px;height:120px"           data-ad-client="ca-pub-7341853905703022"           data-max-num-ads="2"           data-ad-slot="9917868197"></ins>      <script>            (adsbygoogle = window.adsbygoogle || []).push({});            </script>    </div>  </aside>  <!--/csi ad--></div>            <!-- /csi ad top -->                                                    <!-- SP用広告枠表示 -->                        <!-- SP用広告枠表示 -->                                                  <!-- SP用広告枠表示 -->                        <!-- /SP用広告枠表示 -->                                      <!-- examples -->            <div class="content-box category-sup h2-first">              <ul class="sp-h2-toggle">                <li>                  <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>                  <p class="cite sup-a">出典：<cite>青空文庫</cite></p>                  <ul class="list-data-e">                                      <li>                      <p class="example">･･･若し欠点を挙げるとすれば余り丹念すぎる為に暗示する力を欠き<strong>易い</strong>事であろう。</p>                      <p class="cite">芥川竜之介「犬養君に就いて」</p>                    </li>                                      <li>                      <p class="example">･･･家の修覆さえ全ければ、主人の病もまた退き<strong>易い</strong>。</p>                      <p class="cite">芥川竜之介「おしの」</p>                    </li>                                      <li>                      <p class="example">･･･が、こんなに心<strong>易い</strong>処に咲いたのには逢わなかった。</p>                      <p class="cite">泉鏡花「燈明之巻」</p>                    </li>                                    </ul>                  <p class="link-more">[hrefx][hrefx]</p>                </li>              </ul>            </div>            <!-- /examples -->                                                                                   <!-- Index Promotion --><div class="index-promotion margin-l">    <ul class="list-simple-g">        <li>            <p>索引から検索</p>            <ul>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                            </ul>        </li>    </ul></div><!-- /Index Promotion -->                                                 <!-- contents-wrap-b-in -->          </div>                                <div class="social-button-wide sp-hidden">  <ul>    <li class="twitter"> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>    <li class="facebook"> [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx] </li>    <li class="gplus"> [hrefx][hrefx][hrefx][hrefx][hrefx] </li>  </ul>  <!-- social-button --></div>                              </div>        <!-- contents-wrap-b -->      </div>      <!-- /Leaf -->            <!--csi ad-->      <div id="spoLine"></div> <div>  <!--csi ad-->  <aside role="complementary" class="sp-hidden">    <div class="NR-ad ad-wrap aside">      <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>      <!-- [PC]goo_dic_kokugo_left_lower_670*240 -->      <ins class="adsbygoogle"            style="display:inline-block;width:670px;height:240px"            data-ad-client="ca-pub-7341853905703022"            data-max-num-ads="4"            data-ad-slot="2276203391"></ins>      <script>            (adsbygoogle = window.adsbygoogle || []).push({});            </script>    </div>  </aside>  <!--/csi ad--></div>      <!--/csi ad-->                  <!--gooad footer-->      <!--gooad-badge--><aside role="complementary" class="sp-hidden">  <div class="NR-ad ad-wrap aside">    <div id="gooad-badge345_1">      <script type="text/javascript">window.gooad && window.gooad.render();</script>    </div>  </div></aside><!--/gooad-badge--><!--gooad-textdown--><aside role="complementary" class="sp-hidden">  <div class="NR-ad ad-wrap aside">    <div id="gooad-textdown">      <script type="text/javascript">window.gooad && window.gooad.render();</script>    </div>  </div></aside><!--/gooad-textdown-->      <!--/gooad footer-->                        <!-- SP用広告枠表示 -->            <!-- SP用広告枠表示 -->                        <!--sns buttons-->            <div class="social-button-wide sp-visible">  <ul>    <li class="twitter"> <a href="http://twitter.com/share?url=https%3A%2F%2Fdictionary.goo.ne.jp%2Fjn%2F221840%2Fmeaning%2Fm0u%2F&amp;text=%E3%82%84%E3%81%99%E3%81%84%E3%80%90%E6%98%93%E3%81%84%E3%80%91%E3%81%AE%E6%84%8F%E5%91%B3+-+goo%E5%9B%BD%E8%AA%9E%E8%BE%9E%E6%9B%B8+-+goo%E8%BE%9E%E6%9B%B8&amp;" target="_blank" rel="nofollow" title="Twitterでシェアする">        <img src="/img/ico_twitter_sp.png" alt="Twitterでシェアする">      </a> </li>    <li class="facebook"> <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdictionary.goo.ne.jp%2Fjn%2F221840%2Fmeaning%2Fm0u%2F" target="_blank" rel="nofollow" title="Facebookでシェアする">        <img src="/img/ico_facebook_sp.png" alt="Facebookでシェアする">      </a> </li>    <li class="line"> <a href="http://line.me/R/msg/text/?%E3%82%84%E3%81%99%E3%81%84%E3%80%90%E6%98%93%E3%81%84%E3%80%91%E3%81%AE%E6%84%8F%E5%91%B3+-+goo%E5%9B%BD%E8%AA%9E%E8%BE%9E%E6%9B%B8+-+goo%E8%BE%9E%E6%9B%B8https%3A%2F%2Fdictionary.goo.ne.jp%2Fjn%2F221840%2Fmeaning%2Fm0u%2F" rel="nofollow" title="LINEでシェアする">        <img src="/img/ico_line_sp.png" alt="LINEでシェアする">      </a> </li>    <li class="gplus"> <a href="https://plus.google.com/share?url=https%3A%2F%2Fdictionary.goo.ne.jp%2Fjn%2F221840%2Fmeaning%2Fm0u%2F" target="_blank" rel="nofollow" title="Google+でシェアする">        <img src="/img/ico_google_sp.png" alt="Google+でシェアする">      </a> </li>  </ul>  <!-- social-button --></div>      <!--/sns buttons-->      <!-- SP用検索フォーム -->            <!-- /SP用検索フォーム -->      <!-- main -->    </div>        <!--RIGHTSIDE-->    <!-- RSIDE --><div id="NR-sub">  <div id="NR-sub-in">             <!-- 辞書サービス -->                        <aside role="complementary" class="sp-hidden">      <div class="NR-ad ad-wrap-first aside">        <!-- pr -->        <div id="gooad-badge300_1"><script type="text/javascript">window.gooad && window.gooad.render();</script></div>        <!-- /pr -->      </div>    </aside>                            <!-- 前後のjp葉 --><aside role="complementary">  <div class="aside">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <div class="aside-wrap">      <ul class="list-simple-d">              <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>              <li class="current">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx][hrefx]</li>              <li>[hrefx][hrefx]</li>            </ul>    </div>  </div></aside>                    <!-- sidebar-seach-ranking --><aside role="complementary">  <div class="aside">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <div class="tab-wrap">      <nav role="navigation">        <ul class="side-list-tab-a cx">          <li class="NR-now">1位～10位</li>          <li>11位～20位</li>          <li>21位～30位</li>        </ul>      </nav>    </div>    <div class="aside-wrap search-rank">      <!-- 1 - 10 -->      <ol class="list-rank-a open" id="search-rank-0">          <li> <a href="/jn/42448/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">1位</li>              <li class="title in-side-ttl-b">活を入れる</li>            </ul>          </a></li>          <li> <a href="/jn/27779/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">2位</li>              <li class="title in-side-ttl-b">逢瀬</li>            </ul>          </a></li>          <li> <a href="/jn/47702/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">3位</li>              <li class="title in-side-ttl-b">侃侃諤諤</li>            </ul>          </a></li>          <li> <a href="/jn/132075/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">4位</li>              <li class="title in-side-ttl-b">忖度</li>            </ul>          </a></li>          <li> <a href="/jn/6403/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">5位</li>              <li class="title in-side-ttl-b">天の邪鬼</li>            </ul>          </a></li>          <li> <a href="/jn/30626/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">6位</li>              <li class="title in-side-ttl-b">痴がましい</li>            </ul>          </a></li>          <li> <a href="/jn/159533/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">7位</li>              <li class="title in-side-ttl-b">土手</li>            </ul>          </a></li>          <li> <a href="/jn/95741/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">8位</li>              <li class="title in-side-ttl-b">地獄の釜の蓋もあく</li>            </ul>          </a></li>          <li> <a href="/jn/223082/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">9位</li>              <li class="title in-side-ttl-b">山彦</li>            </ul>          </a></li>          <li> <a href="/jn/69524/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">10位</li>              <li class="title in-side-ttl-b">喧喧諤諤</li>            </ul>          </a></li>      </ol>      <!-- 11 - 20 -->      <ol class="list-rank-a" id="search-rank-1">           <li> <a href="/jn/89559/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">11位</li>              <li class="title in-side-ttl-b">晒し井</li>            </ul>          </a></li>          <li> <a href="/jn/248725/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">12位</li>              <li class="title in-side-ttl-b">レガシー</li>            </ul>          </a></li>          <li> <a href="/jn/16960/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">13位</li>              <li class="title in-side-ttl-b">陰阜</li>            </ul>          </a></li>          <li> <a href="/jn/2868/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">14位</li>              <li class="title in-side-ttl-b">アクティブ</li>            </ul>          </a></li>          <li> <a href="/jn/36106/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">15位</li>              <li class="title in-side-ttl-b">甲斐性</li>            </ul>          </a></li>          <li> <a href="/jn/47588/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">16位</li>              <li class="title in-side-ttl-b">感慨深い</li>            </ul>          </a></li>          <li> <a href="/jn/124191/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">17位</li>              <li class="title in-side-ttl-b">雪冤</li>            </ul>          </a></li>          <li> <a href="/jn/201395/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">18位</li>              <li class="title in-side-ttl-b">暴君</li>            </ul>          </a></li>          <li> <a href="/jn/158791/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">19位</li>              <li class="title in-side-ttl-b">度し難い</li>            </ul>          </a></li>          <li> <a href="/jn/174852/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">20位</li>              <li class="title in-side-ttl-b">計る</li>            </ul>          </a></li>      </ol>      <!-- 21 - 30 -->      <ol class="list-rank-a" id="search-rank-2">          <li> <a href="/jn/202713/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">21位</li>              <li class="title in-side-ttl-b">謀略</li>            </ul>          </a></li>          <li> <a href="/jn/109482/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">22位</li>              <li class="title in-side-ttl-b">焦土</li>            </ul>          </a></li>          <li> <a href="/jn/172705/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">23位</li>              <li class="title in-side-ttl-b">惚気る</li>            </ul>          </a></li>          <li> <a href="/jn/13967/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">24位</li>              <li class="title in-side-ttl-b">愛おしい</li>            </ul>          </a></li>          <li> <a href="/jn/194723/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">25位</li>              <li class="title in-side-ttl-b">不毛</li>            </ul>          </a></li>          <li> <a href="/jn/42862/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">26位</li>              <li class="title in-side-ttl-b">葛藤</li>            </ul>          </a></li>          <li> <a href="/jn/14280/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">27位</li>              <li class="title in-side-ttl-b">否めない</li>            </ul>          </a></li>          <li> <a href="/jn/130378/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">28位</li>              <li class="title in-side-ttl-b">齟齬</li>            </ul>          </a></li>          <li> <a href="/jn/246275/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">29位</li>              <li class="title in-side-ttl-b">恣意的</li>            </ul>          </a></li>          <li> <a href="/jn/146507/meaning/m0u/">            <ul class="list-rank-a-unit">              <li class="rank side-rank-text-b">30位</li>              <li class="title in-side-ttl-b">番い</li>            </ul>          </a></li>      </ol>      <div>          <p class="more">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>      <div>    </div>  </div></aside><script type="text/javascript">  	$('.side-list-tab-a li').click(function() {		$('.side-list-tab-a li').removeClass('NR-now');		$('.search-rank .list-rank-a').each(function(){			$(this).removeClass('open');		});		$(this).addClass('NR-now');		var index = $('.side-list-tab-a li').index(this);		$('#search-rank-'+index).addClass('open');	});	$('.list-tab-b li').click(function() {		$('.list-tab-b li').removeClass('NR-now');		$('.search-rank-main').each(function(){			$(this).removeClass('open');		});		$(this).addClass('NR-now');		var index = $('.list-tab-b li').index(this);		$('#search-rank-main-'+index).addClass('open');	});  </script><!-- /sidebar-seach-ranking -->          <aside role="complementary" class="sp-hidden">  <div class="NR-ad ad-wrap aside">    <div id="gooad-badge300_2">      <script type="text/javascript">window.gooad && window.gooad.render();</script>    </div>  </div></aside>        <a class="twitter-timeline" data-lang="ja" data-width="300" data-height="400" href="https://twitter.com/goojisho">Tweets by goojisho</a> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>        <aside role="complementary">  <div class="aside">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <div class="aside-wrap">      <p class="text side-text-a phrase">"Many peoples work there"</p>      [hrefx][hrefx]    </div>  </div></aside>                <!-- meigen --><aside role="complementary">  <div class="aside">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <div class="aside-wrap">      <dl class="side-list-a">        <dt class="name in-side-ttl-a">ゲーテ</dt>        <dd class="list">          <ul class="list-simple-a cx">            <li>              [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>            <li>              [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]            </li>          </ul>        </dd>        <dd class="desc side-text-b">あなたにできること、あるいは夢見ていることがあれば、今すぐ始めなさい。向こう見ずは天才であり、力であり、魔法です。</dd>      </dl>    </div>  </div></aside><!-- /meigen -->                        <aside role="complementary" class="sp-hidden">  <div class="NR-ad ad-wrap aside">    <div id="gooad-mkkbadge300_1">      <script type="text/javascript">window.gooad && window.gooad.render();</script>    </div>  </div></aside>                <div class="aside">    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>    <div class="aside-wrap new_words">        <ul class="list-simple-c">            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>            <li>[hrefx][hrefx]</li>        </ul>    </div></div>                <aside role="complementary" class="sp-hidden">  <div class="NR-ad ad-wrap aside">    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>    <!-- [PC]goo_dic_kokugo_right_300*250 -->    <ins class="adsbygoogle"          style="display:inline-block;width:300px;height:250px"          data-ad-client="ca-pub-7341853905703022"          data-max-num-ads="4"          data-ad-slot="3871334597"></ins>    <script>        (adsbygoogle = window.adsbygoogle || []).push({});        </script>  </div></aside>                                <aside role="complementary" class="sp-hidden">      <div class="NR-ad ad-wrap-first aside">        <!-- pr -->                <!-- /pr -->      </div>    </aside>             </div></div>    <!--/RIGHTSIDE-->        <!-- wrapper-in -->  </div>    <!--検索-->   <div class="NR-search footer sp-hidden">  <form name="dict" id="freeword2" action="/freewordsearcher.html" method="get" class="NR-search-in cx" role="search">    <div class="search-unit">      <input name='MT' type="text" value="易い" class="NR-text NR-search-text" placeholder="調べたいjp葉を入力" id="searchbottom" autocomplete="off" onfocus="initSuggest();" tabindex="101">      <select class="NR-select" name="mode" id="searchbottom_searchmode">        <option value="0" selected>で始まる</option>        <option value="1">で一致する</option>        <option value="2">で終わる</option>        <option value="3">を説明文に含む</option>        <option value="6">を見出しに含む</option>      </select>            <div class="suggest-unit" style="display:none;">            <!-- /.suggest-unit --></div>      <!-- /.search-unit --></div>            <input type="image" src="//dictionary.xgoo.jp/img/btn_search.png" title="検索" alt="検索" tabindex="160">                  <input type="hidden" name="kind" value="jn" id="searchbottom_suggesttype">        </form>  <!-- search(option) --></div><!-- 検索 -->  <!--/検索-->      <!--広告-->    <!--/広告-->    <!-- leaf_crumb -->      <!-- leaf_crumb --><nav role="navigation">    <div class="nav tpath">    <div class="NR-tpath  footer">      <div class="tpath-in">          <ol class="cx">          <li class="NR-first" itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="//dictionary.goo.ne.jp">              <span itemprop="title">辞書</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/">              <span itemprop="title">国語辞書</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/category/品詞/">              <span itemprop="title">品詞</span>            </a>          </li>          <li itemscope itemtype="http://data-vocabulary.org/Breadcrumb">            <a itemprop="url" href="/jn/category/品詞/形容詞/">              <span itemprop="title">形容詞</span>            </a>          </li>          <li><strong>「易い」の意味</strong></li>        </ol>        </div>    </div>  </div>  </nav><!-- /leaf_crumb -->  <!-- /leaf_crumb -->  <!-- wrapper --></div>	<footer role="contentinfo"><div id="NR-footer">					<!--ページトップへリンク-->		<div id="NR-backToTop">					  <div class="top-btn top-btn-fix" style="display: none;">		  <a data-cid="spfooter-above-1" href="#NR-page"><span>このページの先頭へ</span></a>		  </div>            		  <div class="top-btn-footer">		  <a data-cid="spfooter-above-2" href="#NR-page" class="top-btn"><span>このページの先頭へ</span></a>		  </div>		</div>            		<!--/ページトップへリンク-->		<div id="NR-footer-in">            						<div id="NR-footer-sv">				<dl id="NR-footer-sv-site">					                        <dt>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dt><dd>    <ul>        <li class="children">[hrefx][hrefx]            <ul>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>                <li>[hrefx][hrefx]</li>            </ul>        </li>    </ul></dd><dt>[hrefx][hrefx]</dt><dd>    <ul>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    </ul></dd><dt>[hrefx][hrefx]</dt><dd>    <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>    </ul></dd>    <dt>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dt>    <dd>        <ul>            <li>[hrefx][hrefx][hrefx][hrefx]</li>        </ul>    </dd>    <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>    <dd>        <ul>            <li>[hrefx][hrefx][hrefx][hrefx]</li>        </ul>    </dd><dt>[hrefx][hrefx][hrefx][hrefx]</dt><dd>    <ul>        <li>[hrefx][hrefx]</li>    </ul></dd><dt>[hrefx][hrefx]</dt><dd>    <ul>                    <li class="children">[hrefx][hrefx]                <ul>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                    <li>[hrefx][hrefx]</li>                </ul>            </li>            <li>[hrefx][hrefx]</li>                        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>    </ul></dd><dt>[hrefx][hrefx]</dt><dd>    <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>    </ul></dd>										<dt>関連サービス</dt>					<dd>						<ul>							<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>							<li>[hrefx][hrefx][hrefx][hrefx]</li>							<li>[hrefx][hrefx]</li>							<li>[hrefx][hrefx]</li>						</ul>					</dd>                                        <dt>gooサービス</dt>                                        <dd>                                                <ul>                                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx][hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx]</li>                                                        <li>[hrefx][hrefx]</li>                                                </ul>                                        </dd>				</dl>			</div>			<div id="NR-footer-link">				<ul>					<li>[hrefx][hrefx]</li>					<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>					<li>[hrefx][hrefx][hrefx]</li>					<li>[hrefx][hrefx][hrefx][hrefx]</li>					<li>[hrefx][hrefx]</li>					<li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>					<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>					<li>[hrefx][hrefx]</li>					<li>[hrefx][hrefx]</li>				</ul>			</div>            			<p class="NR-copyright"><small><span class="small">&copy;NTT Resonant Inc.</span></small></p>		<!-- footer-in --></div>	<!-- footer --></div></footer><!-- page --></div><script src="//u.xgoo.jp/js/1.1.js"></script><script src="//u.xgoo.jp/jquery/powertip/1.2.js"></script><script src="//u.xgoo.jp/jquery/colorbox/jquery.colorbox-1.6.0.js"></script><script src="/js/jQueryAutoHeight.js?1480409000"></script><script src="/js/script.js?1501637382"></script><script src="//log000.goo.ne.jp/js/VLTraceDMD.js"></script><script src="/hyge_modified/js/sp_header_app_balloon.js?1475203699"></script><script src="/hyge_modified/js/sp_search_form_view.js?1475203699"></script><script src="/hyge_modified/js/sp_search_result_view.js?1499147031"></script><script src="/hyge_modified/js/page_result.js?1497243959"></script> <!-- end modified --></body></html>