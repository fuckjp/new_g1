<!DOCTYPE html><html lang="jp">    <head>        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />        <meta content="width=device-width,initial-scale=1,maximum-scale=2,user-scalable=yes" name="viewport" />                    <meta name="keywords" content="[metatags_keywords]" />                        <meta name="description" content="[metatags_description]" />        <meta property="og:description" content="[metatags_description]" />                <meta property="og:title" content="[metatags_title]" />        <meta property="og:url" content="https://wiki.dengekionline.com/ggre/%E7%B5%8C%E9%A8%93%E5%80%A4%EF%BC%88EXP%EF%BC%89%E7%A8%BC%E3%81%8E" />                <meta property="og:image" content="http://cdn.wiki.dengekionline.com/files/attachment/000/232/417/upload.jpg?1499767020" />                            <meta name="referrer" content="unsafe-url" />        <meta name="google-translate-customization" content="8d9cf2df27b94de-4c9d87390d12cbd4-gee8b7392fd13c828-16"></meta>        <title>[metatags_title]</title>        <link href="https://cdn.wiki.dengekionline.com/files/attachment/000/232/418/favicon.ico?1499767020" type="image/x-icon" rel="icon" /><link href="https://cdn.wiki.dengekionline.com/files/attachment/000/232/418/favicon.ico?1499767020" type="image/x-icon" rel="shortcut icon" /><link href="https://cdn.wiki.dengekionline.com/files/attachment/000/232/418/favicon.ico?1499767020" rel="apple-touch-icon" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/jquery.notifyBar.css?1402467236" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/darktooltip.css?1492408963" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/font-awesome.min.css?1427352517" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/v2/style.css?1501824810" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/theme/dengekionline/ggre/css/game.css?1500968142" /><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/lightbox.css?1441790891" media="screen" /><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery-1.11.0.min.js?1401687304"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.cookie.js?1407736551"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.notifyBar.js?1402467236"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.tablesorter.min.js?1405332711"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.metadata.js?1416195169"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.autosize.min.js?1411094702"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery.darktooltip.js?1492408965"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/moment-with-locales.min.js?1472024609"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/load-image.all.min.js?1494927361"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/md5.min.js?1472024609"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/vue.min.js?1492408965"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/vue-router.min.js?1492408965"></script><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/vue-validator.min.js?1492408965"></script><script type="text/javascript" src="/js/common.js?1502349244"></script><script type="text/javascript" src="/theme/dengekionline/ggre/js/game.js?1495703350"></script><link rel="stylesheet" type="text/css" href="https://cdn.wiki.dengekionline.com/css/jquery-ui.min.css?1413297608" /><style type="text/css">.ui-autocomplete {    max-height: 125px;    overflow-y: auto;    /* prevent horizontal scrollbar */    overflow-x: hidden;}.ui-autocomplete-loading {    background: white url('/img/ui-anim_basic_16x16.gif') right center no-repeat;}.comment-admin {    height: 26px;    line-height: 26px;    position: relative;}.comment-admin a {    color: #999;}.comment-admin a:hover {    color: #0086b3;}.comment-admin .drop-down-menu {    position: absolute;    width: 220px;    line-height: 1;}.comment-admin li {    float: none !important;    margin: 0 !important;}.comment-admin li a {    color: #333;    display: block;    padding: 15px;}.comment-admin li a:hover {    background-color: #f1f1f1;    text-decoration: none;}.comment-info {    height: 26px;    color: #999;}.comment-info .icon {    float: left;    line-height: 26px;    margin-right: 2px;}.comment-info .info {    float: left;    line-height: 13px;    font-size: 80%;}.comment-list > .commentlog-loading {    text-align: center;    color: #BBB;}.reply-comment > .commentlog-loading {    position: absolute;    top: 24px;    color: #AAA;    font-size: 12px;}</style><script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/jquery-ui.min.js?1413297608"></script><script type="text/javascript">// 設定Config.urlTagsRead = '/ggre/-/tags/read/%E7%B5%8C%E9%A8%93%E5%80%A4%EF%BC%88EXP%EF%BC%89%E7%A8%BC%E3%81%8E/page_id:122516';Config.urlTagsSuggest = '/ggre/-/tags/suggest/%E7%B5%8C%E9%A8%93%E5%80%A4%EF%BC%88EXP%EF%BC%89%E7%A8%BC%E3%81%8E/page_id:122516';Config.urlTagsAdd = '/ggre/-/tags/add/%E7%B5%8C%E9%A8%93%E5%80%A4%EF%BC%88EXP%EF%BC%89%E7%A8%BC%E3%81%8E/page_id:122516';Config.urlTagsDelete = '/ggre/-/tags/delete/%E7%B5%8C%E9%A8%93%E5%80%A4%EF%BC%88EXP%EF%BC%89%E7%A8%BC%E3%81%8E/page_id:122516';Config.urlCommentsAdd = '/ggre/-/comments/add/page_id:122516';Config.urlCommentsLike = '/ggre/-/comments/like';Config.urlCommentsReport = '/ggre/-/comments/report';Config.urlCommentsDelete = '/ggre/-/comments/delete';Config.urlCommentsIpBlacklist = '/ggre/-/comments/ipBlacklist';Config.urlCommentsSessionRestrict = '/ggre/-/comments/sessionRestrict';Config.urlCommunityMember = '/ggre/-/communities/member';Config.isFormattedComment = false;Config.pageId = 122516;$(function() {    // ネタバレ確認    var status = Util.loadCookie('spoiler-status', 122516);    if (status) {        // 承諾済み        $('.hide-spoiler').show();    } else {        $('#spoiler-confirm').show();    }    // ネタバレ承諾    $('#agree-spoiler').click(function() {        $('#spoiler-confirm').hide();        $('.hide-spoiler').show();        Util.saveCookie('spoiler-status', 122516, true, 30);    });    var comment = new Comment();        var tag = new Tag();    });</script>                <style type="text/css">                                #content {                background-image: url("https://cdn.wiki.dengekionline.com/files/attachment/000/232/416/upload.jpg?1499767020");                background-repeat: no-repeat;                background-size: 100%;                background-attachment: fixed;                background-position: center top;            }                                    #content-main-sign-board.front-page, #myPageHeader, #readBg {            background-color: transparent;            background-image: url("https://cdn.wiki.dengekionline.com/files/attachment/000/232/417/upload.jpg?1499767020");            background-repeat: no-repeat;        }                        #content-main-sign-board-inner .main-icon, .joinCommu .coverImg {            background-color: #FFF;            background-image: url("https://cdn.wiki.dengekionline.com/files/attachment/000/232/418/large_upload.png?1499767020");            background-repeat: no-repeat;        }        .mypageCommu .coverImg {            background-image: url("https://cdn.wiki.dengekionline.com/files/attachment/000/232/418/icon_upload.png?1499767020");        }                </style>                <script type="text/javascript">        // 設定        Config.apiKey = 'wIA2UQtCwTaNXoeTpau457fw6DYcgKxv2XAuuhQH';        Config.apiWiki = 'https://ab3kndcnbf.execute-api.ap-northeast-1.amazonaws.com/prod/v1';        Config.urlNico = 'https://qkgaealb2e.execute-api.ap-northeast-1.amazonaws.com/prod/v1/nico';        Config.urlLoginStatus = 'https://www.reinforce-inc.jp/login/users/status';        Config.urlUserStatus = '/users/status';        Config.urlUserLogin = '/users/login';        Config.urlUserLogout = '/users/logout';        Config.urlManagerUrl = '/ggre/-/managers/url';        Config.urlCommunityIndex = '/ggre/-/communities';        Config.urlCommunityJoin = '/ggre/-/communities/join';        Config.urlCommunityThread = '/ggre/-/communities/thread';        Config.urlCommunityComment = '/ggre/-/communities/comment';        Config.wikiId = 611;        Config.wikiTitle = 'GジェネレーションRE （ジージェネ アールイー）攻略まとめwiki';        Config.wikiDirectory = 'ggre';        Config.communityId = false;                Config.flashMessage = '';        Config.authMessage = '';        Config.loginId = 0;        Config.userId = 0;        Config.isLoggedIn = false;        Config.sid = '4aicrjicks7l8jrrfbbpvadv50';                $(function() {            var message = new Message();            var login = new Login();                    });        </script>        <!--[if lte IE 8]>        <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>        <![endif]-->        <script>    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-48941378-3', 'dengekionline.com');    ga('send', 'pageview');</script>            </head>    <body>        <div id="container" class="fixed">                                                                            <div id="content" class="layout-triple-col">                <div id="content-inner">                    <aside>                        <div id="ad-side">                            <div id="ad-left-side"></div>                            <div id="ad-right-side"></div>                        </div>                    </aside>                                        <div id="media-only-hedaer">                        <div id="logo">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    </div>                                                            <div id="content-header">                        <div class="container clearfix">                            <header>                                                                <div id="content-main-sign-board" class="front-except-page">    <div id="content-main-sign-board-inner">        <div>[hrefx][hrefx][hrefx][hrefx][hrefx]</div>                <div class="main-title">                [hrefx][hrefx][hrefx][hrefx][hrefx]                </div>                    </div></div><nav id="tab-menu"><ul><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></nav>                            </header>                        </div>                    </div>                    <div id="content-body">                        <div class="container clearfix">        <div id="topic-path" class="clearfix">        <ul><li class="first">[hrefx][hrefx][hrefx][hrefx][hrefx]<span class="next">&gt;</span></li><li class="last">経験値（EXP）稼ぎ</li></ul>            </div>        <div id="main-content-wrap" class="clearfix">        <div id="main-content">                        <div class="inner">                                <div id="wiki-container">                    <article>    <section>                <div id="wiki-content" class="content-wrap">                        <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                                    <div class="social-btn">    <div class="social-btn-wrpper">        <ul class="social-btn-list">            <li>                <div class="twitter-social-btn">                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </div>            </li>            <li>                <div class="hatena-social-btn">                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </div>            </li>        </ul>    </div></div>                                    <div class="jump">                                <div class="update">                    [hrefx][hrefx][hrefx][hrefx][hrefx]                </div>                            </div>            <div id="wiki-body">                <div id="rendered-body">                <p>ここではユニットの主なEXPの稼ぎ方と、そのポイントについて紹介します。</p><p><strong><span style="font-size:20px;display:inline-block;line-height:130%;text-indent:0px">目次</span></strong></p><h4 id="content_1001_0">[hrefx][hrefx][hrefx][hrefx][hrefx]</h4><p>　[hrefx][hrefx][hrefx][hrefx][hrefx]<br />　[hrefx][hrefx][hrefx][hrefx][hrefx]<br />　[hrefx][hrefx][hrefx][hrefx][hrefx]</p><h4 id="content_1001_1">[hrefx][hrefx][hrefx][hrefx][hrefx]</h4><p>　[hrefx][hrefx][hrefx][hrefx][hrefx]<br />　[hrefx][hrefx][hrefx][hrefx][hrefx]<br />　[hrefx][hrefx][hrefx][hrefx][hrefx]</p><p><a class="anchor" id="link01"></a></p><h2>[H2]</h2><p>最も基本的な獲得方法は、クエストクリア後のユニットEXPになる。<br />まずはジェネレーションツアーを進めつつ、チームの戦力を整えていこう。</p><p><a class="anchor" id="link02"></a></p><h3>[H3]</h3><p>効率よくEXPを稼ぐなら、クリアまでに時間がかからず、獲得EXPが高いクエストを周回するのがベスト。<br />現在オススメのクエストは以下のふたつ。</p><h4 id="content_1001_4">「機動戦士ガンダム00」　CHAPTER1-4</h4><p>CHAPTER1なので序盤から挑戦できるのが魅力。<br />敵はガンダムエクシア1機なので、楽にクリア可能だ。</p><div class="tableWidthAuto">[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]            </div>                        <div id="tag">                <div class="ttl-tags"><i class="fa fa-tag"></i>タグ</div>                <ul class="tags">                                        <li class="tag">[hrefx][hrefx][hrefx][hrefx][hrefx](3)</li>                                    </ul>                                <div class="add">                    <input name="data[suggest]" class="suggest" maxlength="20" placeholder="タグを入力" type="text" id="suggest"/>                    <button name="add" class="action btn cv-btn button module-btn" type="submit">追加</button>                    <span class="done">[[hrefx][hrefx][hrefx][hrefx][hrefx]]</span>                </div>            </div>                                 </div>     </section></article>        <div id="pre-login" class="clearfix"></div>    <div id="pv_ranking_container">    <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><ul class="pv_ranking"><li><div class="rank_page"><div><span class="rank">1</span></div><div>[hrefx][hrefx][hrefx][hrefx][hrefx]</div></div><div id="game-footer">    <p class="copyright"><div style="color:#87cefa;">(C)創通・サンライズ<br>(C)創通・サンライズ・MBS<br>当攻略wikiは電撃オンラインが編集、運営するものです。<br>本サイトのコンテンツについて、無断使用・無断転載などは固くお断りします。<br>サイト内の表記とゲーム内のデータが異なる場合は、ゲーム内のデータが正しいものです。</div></p></div>                </div>            </div>        </div>                    <div id="content-sub-2">    <!-- 10月時点で実装なし    <div class="sub-area">        <div class="channel-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>        <div class="blog-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>        <div class="qa-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>    </div>    -->        <div class="inner">        <div id="side-content-right">            <h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><ul class="pv_ranking"><li><div class="rank_page"><div><span class="rank">1</span></div><div>[hrefx][hrefx][hrefx][hrefx][hrefx]<br/></div></div></li></ul><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><p><span style="color:White">●ゲーム紹介PV</span></p><div style="max-width:560px;max-height:315px"><div class="youtube-movie" style="padding-bottom:56.25%"><iframe width="560" height="315" src="//www.youtube.com/embed/yoKQz_zg42Y" frameborder="0" allowfullscreen></iframe></div></div><p><span style="color:White">●ティザーPV</span></p><div style="max-width:560px;max-height:315px"><div class="youtube-movie" style="padding-bottom:56.25%"><iframe width="560" height="315" src="//www.youtube.com/embed/oz79YL8ts-8" frameborder="0" allowfullscreen></iframe></div></div><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2><div id="recent598e750776667" class="plugin-recent">{{error}}    <h5>最新の{{count}}件</h5>    <div>        <template v-for="group in groups">        <strong>{{group.date}}</strong>        <ul class="recent_list">            <li v-for="item in group.items">                [hrefx][hrefx][hrefx][hrefx][hrefx]            </li>        </ul>        </template>    </div></div><script type="text/javascript">Plugin.recent('recent598e750776667', 10);</script>        </div>    </div>        </div>                            <div id="content-sub-1">    <!-- 10月時点で実装なし    <div class="sub-area">        <div class="channel-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>        <div class="blog-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>        <div class="qa-btn">            [hrefx][hrefx][hrefx][hrefx][hrefx]        </div>    </div>    -->    <div class="inner">    <div id="google_translate_element-wrap" class="sp-no">    <div id="google_translate_element"></div><script type="text/javascript">function googleTranslateElementInit() {  new google.translate.TranslateElement({pageLanguage: 'ja', includedLanguages: 'en,ja,ko,zh-CN,zh-TW', layout: google.translate.TranslateElement.InlineLayout.SIMPLE, autoDisplay: false, gaTrack: true, gaId: 'UA-48941378-3'}, 'google_translate_element');}</script><script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script></div>        <div id="wiki-search" style="margin-top: 10px">                        <form action="/ggre/-/pages/search" id="cse-search-box" class="clearfix">                <div class="inner">                    <input type="text" name="q" placeholder="Wiki内を検索" value="" />                    <button type="submit" value="検索"><span class="search-icon"></span></button>                </div>            </form>                    </div>        <div id="side-content-menu">            <section>                <div id="menu" class="wiki">                    <div class="side-content-expand"><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="list2" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]<ul class="list2" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></li></ul><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul><h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3><ul class="list1" style="padding-left:16px;margin-left:16px"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul>                </div>            </section>        </div>    </div>        </div>                    </div></div>                                            </div>                </div>                            </div>                        <footer>                <div id="footer">                    <div id="footer-inner">                        <div class="container">                            <div id="wiki-link-collection">    <dl>        <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]攻略wiki</dt>        <dd>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>        </dd>    </dl>    <dl>        <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]攻略wiki</dt>        <dd>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>        </dd>    </dl>    <dl>        <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]攻略wiki</dt>        <dd>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>            <ul class="clearfix">                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            </ul>        </dd>    </dl></div><div id="foot-wrap">    <div id="footer-dol" class="clearfix">        <div id="footer-dol-menu">            <ul>                <li><em>&nbsp;[hrefx][hrefx][hrefx][hrefx][hrefx]&nbsp;</em></li>            </ul>        </div>    </div>    <div id="common-footer">        <div id="common-footer-top"></div>        <div id="common-footer-main">            &nbsp;[hrefx][hrefx][hrefx][hrefx][hrefx]&nbsp;</p>        </div>        <div id="common-footer-bottom"></div>        <p id="copyright">&copy;KADOKAWA CORPORATION 2015</p>    </div></div>                        </div>                    </div>                </div>            </footer>                                </div>                <div id="apply" class="member-apply-wrapper apply-form">            <div class="dialog-title clearfix">                <span>編集メンバー参加申請</span>                <div class="close" onclick="adminRequest.closeSub()"><i class="fa fa-times"></i></div>            </div>            <div class="member-apply clearfix">                <p>こちらの申請フォームより、Wikiの管理人へ参加申請をしてください。</p>                <p>管理人が申請を承認すると、編集メンバーに参加できます。</p>                <p>編集メンバーの詳細は[hrefx][hrefx][hrefx][hrefx][hrefx]から。</p>                <form id="apply-form">                    <table>                        <tbody><tr>                            <th>あなたのアカウント</th>                            <td>ゲスト</td>                        </tr>                        <tr>                            <th>サイト名</th>                            <td>GジェネレーションRE （ジージェネ アールイー）攻略まとめwiki</td>                        </tr>                        <tr>                            <th>メッセージ</th>                            <td><textarea class="wiki_config" type="textarea" cols="50" rows="10" name="message" placeholder="">ぜひ参加させてください。よろしくお願い致します！</textarea><span>※メッセージは100文字以内で入力してください。</span></td>                        </tr>                    </table>                    <button class="btn" onclick="return adminRequest.addAdminRequest(Config.wikiId);">送信</button>                </form>            </div>        </div>        <div id="apply-not-login" class="member-apply-wrapper not-login">            <div class="dialog-title clearfix">                <span>編集メンバー参加申請</span>                <div class="close" onclick="adminRequest.closeSub()"><i class="fa fa-times"></i></div>            </div>            <div class="member-apply">                <div class="apply-notice">                    <img src="https://cdn.wiki.dengekionline.com/img/v2/dfng_logo.png?1454900350" alt="" />                    <p>編集に参加するにはログインが必要です。</p>                    <div class="btn login-twitter">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>                    <div class="btn login-twitter" style="margin-top: 10px">[hrefx][hrefx][hrefx][hrefx][hrefx]</div>                </div>            </div>        </div>                        <!-- ここから ソーシャルボタン用のscript--><div id="fb-root"></div><script>(function(d, s, id) { var js, fjs = d.getElementsByTagName(s)[0];if (d.getElementById(id)) return;js = d.createElement(s); js.id = id; js.async = true; js.src = "//connect.facebook.net/ja_JP/all.js#xfbml=1&appId="; fjs.parentNode.insertBefore(js, fjs);}(document, 'script', 'facebook-jssdk'));</script><script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script><script type="text/javascript">  window.___gcfg = {lang: 'ja'};  (function() {    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;    po.src = 'https://apis.google.com/js/plusone.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);  })();</script><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id; js.async = true; js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script><!-- ここまで ソーシャルボタン用のscript-->        <script type="text/javascript" src="https://cdn.wiki.dengekionline.com/js/lightbox.min.js?1441778949"></script>        <script>            lightbox.option({              'resizeDuration': 0,              'showImageNumberLabel': false,              'wrapAround': true            })        </script>                <script type="text/javascript">  (function(w,d,s,c){  w["_itm_cid_"] = c;  var f=d.getElementsByTagName(s)[0],j=d.createElement(s);  j.async=true;j.src = '//dmp.im-apps.net/itm8/js/itm.js';  f.parentNode.insertBefore(j, f);  })(window,document,'script',6204);</script>            </body></html>