<!DOCTYPE html><html lang="jp"><head>    <meta http-equiv="Content-Type" charset="UTF-8" />    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <title>[metatags_title]</title>    <meta name="keyword" content="うつ病,原因,治療,脳,働き">    <meta name="description" content="">    <meta name="viewport" content="width=1042">    <link rel="stylesheet" href="/css/reset.css">    <script src="/js/jquery.js"></script><!-- 1.11.1.min -->    <script src="/js/main.js"></script>    <!--[if lt IE 9]>    <script src="/js/html5shiv.js"></script>    <![endif]-->    <!--[if lt IE 9]>    <script src="/js/css3-mediaqueries.js"></script>    <![endif]-->    <link rel="stylesheet" href="/css/common.css">    <link rel="stylesheet" href="/css/know.css">    <!--<link rel="stylesheet" href="/css/alert.css">-->    <link rel="alternate" media="only screen and (max-width: 640px)" href="http://utsu.ne.jp/sp/know/">    <link rel="shortcut icon" href="/img/favicon.ico" />    <link rel="apple-touch-icon-precomposed" href="/img/apple-touch-icon-precomposed.png" />    <!--<script type="text/javascript" src="/js/hospital_link.js"></script>-->    <script type="text/javascript" src="/js/ga.js"></script></head><body><div class="wrapper">    <div class="innerWrapper">        <div class="contents">            <header class="header">                <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>                <p class="mainImg"><img src="/img/common/img_main.jpg" width="968" height="184" alt="うつ病の症状は気分の落ち込みやからだの重さやつらさなどからあらわれることがあります。&nbsp;本来の自分を取り戻すために、できることから始めてみませんか。"></p>                <p class="headerTxt">シオノギ製薬と日本イーライリリーがうつ病についての啓発を行うウェブサイトです。</p>                <ul class="headerLink">                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                </ul>                <nav class="gnavArea">                    <ul class="clearfix">                        <li class="floL">                            <dl class="acordMenu">                                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                                <dd class="sub_navi01">                                    <ul>                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                        <li>[hrefx]</li>                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    </ul>                                </dd>                            </dl>                        </li>                        <li class="floL">                            <dl class="acordMenu">                                <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                                <dd class="sub_navi02">                                    <ul>                                        <li>[hrefx]</li>                                        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    </ul>                                </dd>                            </dl>                        </li>                            <li class="floL">                                <dl class="acordMenu">                                    <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                                    <dd>                                        <ul class="sub_navi03">                                            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                            <li>[hrefx]</li>                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                        </ul>                                    </dd>                                </dl>                            </li>                            <li class="floL">                                <dl class="acordMenu">                                    <dt>[hrefx][hrefx][hrefx][hrefx][hrefx]</dt>                                    <dd>                                        <ul class="sub_navi03">                                            <li>[hrefx][hrefx][hrefx][hrefx]</li>                                            <li>[hrefx]</li>                                        </ul>                                    </dd>                                </dl>                            </li>                            <li class="floL">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </nav>            </header>            <main>                <ul class="pkz">                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]&nbsp;&gt;</li>                    <li>[hrefx]&nbsp;&gt;</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]&nbsp;&gt;</li>                    <li>抑うつ気分</li>                </ul>                <div class="mt20">                    <ul class="step_b clearfix">                        <li class="floL">[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                        <li class="next floL"><img src="/img/common/icon_arrow02.jpg" width="21" height="23" alt=""></li>                        <li class="floL"><img src="/img/common/bottom_step02_on.jpg" width="307" height="98" alt="STEP2 病院に行く前に知っておきたいこと こころとからだの症状"></li>                        <li class="next floL"><img src="/img/common/icon_arrow02.jpg" width="21" height="23" alt=""></li>                        <li class="floL"><a target="_blank" href="/search/" onclick="ga('send', 'event', 'Hedder', 'cv_click',　'Know_Hospital');goog_report_conversion ('http://utsu.ne.jp/search/')"><img src="/img/common/bottom_step03.jpg" width="307" height="98" alt="STEP3 うつ病の治療が受けられる病院が探せます 病院検索" class="hover"></a></li>                    </ul>                    <ul class="know_sub_step mt20">                        <li>うつ病とは？</li>                        <li>[hrefx]</li>                        <li>[hrefx[hrefx][hrefx][hrefx]]</li>                    </ul>                </div>                <section class="aboutTxt h2fukidashi">                    <h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]<h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>[metatags_descriptionx]								</dd>							</dl>                    </div>                </section>                <div class="mt25">                	<ul class="know_list  clearfix">                    <li><img src="/img/know/heart_btn01_on.jpg" alt="抑うつ気分"></li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                    <li>[hrefx]</li>                    <li>[hrefx]</li>                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                    </ul>                </div>                <div class="mt25 clearfix">					<ul class="step_b02 mb20 txtC">						<li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>					</ul>                    <p class="pageTop floR">[hrefx]</p>                </div>            </main>            <footer class="footer clearfix">                <div class="floL clearfix">[hrefx][hrefx][hrefx][hrefx]                [hrefx][hrefx][hrefx][hrefx][hrefx]</div>                <p class="copyright txtR"><small>Copyright &copy; SHIONOGI &amp; CO.,LTD &amp; ELI LILLY JAPAN K.K ALL RIGHTS RESERVED<br>EA-CYM-HP011(R0)/2015年 7月<br>当サイトは、18歳未満の方向けに制作されたサイトではありません。</small></p>            </footer>        </div>    </div></div><!-- Total_tag.txt --><script src="//tt.mbww.com/tt-ae600959378c54c51d1b867e77cef34eba55658bf2abcec187cfe901526d0a80.js" async></script><!-- /Total_tag.txt --><script id="_lognos_script_">// begin edit blockvar _lognos = {params: {}, paramOrder: []};_lognos.params.utm_source = "";_lognos.params.utm_medium = "";_lognos.params.utm_campaign = "";_lognos.params.key4 = "";_lognos.params.key5 = "";_lognos.params.key6 = "";_lognos.params.key7 = "";_lognos.params.key8 = "";_lognos.params.key9 = "";_lognos.params.key10 = "";// end edit block// don't edit_lognos.paramOrder =["utm_source","utm_medium","utm_campaign","key4","key5","key6","key7","key8","key9","key10"];(function(a,b){a.async = true; a.id = "_lognos_script_";a.src = '//img.macromill.com/js/us000634tgf/1000008796-e9/lognos.js';b.parentNode.insertBefore(a,b);}(document.createElement('script'),document.getElementsByTagName('script')[0]));</script><!-- tab 20170526 --><!-- Google Code for 507_&#26666;&#24335;&#20250;&#31038;&#12510;&#12483;&#12461;&#12515;&#12531;&#12456;&#12522;&#12463;&#12477;&#12531;&#65288;&#24195;&#21578;&#20027;&#65306;&#26085;&#26412;&#12452;&#12540;&#12521;&#12452;&#12522;&#12522;&#12540;&#65289;_J&amp;B&#27096;_&#30149;&#38498;&#26908;&#32034; Conversion PageIn your html page, add the snippet and callgoog_report_conversion when someone clicks on thechosen link or button. --><script type="text/javascript">  /* <![CDATA[ */  goog_snippet_vars = function() {    var w = window;    w.google_conversion_id = 950691739;    w.google_conversion_label = "JsUCCLDNs3AQm8-pxQM";    w.google_remarketing_only = false;  }  // DO NOT CHANGE THE CODE BELOW.  goog_report_conversion = function(url) {    goog_snippet_vars();    window.google_conversion_format = "3";    var opt = new Object();    opt.onload_callback = function() {    if (typeof(url) != 'undefined') {      window.location = url;    }  }  var conv_handler = window['google_trackConversion'];  if (typeof(conv_handler) == 'function') {    conv_handler(opt);  }}/* ]]> */</script><script type="text/javascript"  src="//www.googleadservices.com/pagead/conversion_async.js"></script><script type="text/javascript" language="javascript">  /* <![CDATA[ */  var yahoo_ydn_conv_io = "nScDIjsOLDXkHQI_yJs9";  var yahoo_ydn_conv_label = "MYYCHK992RXO4ZQG20R314884";  var yahoo_ydn_conv_transaction_id = "";  var yahoo_ydn_conv_amount = "0";  /* ]]> */</script><script type="text/javascript" language="javascript" charset="UTF-8" src="//b90.yahoo.co.jp/conv.js"></script><script type="text/javascript" language="javascript">  /* <![CDATA[ */  var yahoo_ydn_conv_io = "M7M.DZoOLDWKZG_95NXm";  var yahoo_ydn_conv_label = "A82SL7P7AGPBVHAO87E314882";  var yahoo_ydn_conv_transaction_id = "";  var yahoo_ydn_conv_amount = "0";  /* ]]> */</script><script type="text/javascript" language="javascript" charset="UTF-8" src="//b90.yahoo.co.jp/conv.js"></script><!-- //tab 20170526 --></body></html>