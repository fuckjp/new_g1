<!DOCTYPE html><html lang="jp" xmlns:te="http://www.seasar.org/teeda/extension"><head><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta http-equiv="Content-Type" charset="UTF-8" /><meta name="viewport" content="width=device-width, initial-scale=1"><meta name="format-detection" content="telephone=no"><title id="title">[metatags_title]</title><meta name="description" content="[metatags_description]"><meta name="keywords" content="[metatags_keywords]"><link rel="shortcut icon" href="/common/images/favicon.ico" type="image/x-icon"><link rel="stylesheet" href="/common/css/reset.css"><link rel="stylesheet" href="/common/css/common.css"><link rel="stylesheet" href="css/safe-driving.css?20170206"><link rel="stylesheet" href="/sp/common/css/menu.css"><link rel="stylesheet" href="/common/css/sp.css" media="screen and (max-width: 768px)"><!--[if lt IE 9]><script src="/common/js/html5shiv.min.js"></script><![endif]--><!-- facebook ogタグ--><meta property="og:title" content="カーシェアリングのタイムズカープラス" /><meta property="og:description" content="タイムズから乗るカーシェアリング！タイムズカープラス。必要な時に自由にクルマを使えます！" /><meta property="og:type" content="website" /><meta property="og:url" content="https://plus.timescar.jp/" /><meta property="og:image" content="http://plus.timescar.jp/common/images/logo.gif" /><meta property="og:site_name" content="カーシェアリングのタイムズカープラス" /><meta property="fb:app_id" content="" /><!-- sns_head --><!-- google + --><script type="text/javascript">  window.___gcfg = {lang: 'ja'};  (function() {    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;    po.src = 'https://apis.google.com/js/plusone.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);  })();</script><!-- twitter --><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script><script type="text/javascript">(function() {var sb = document.getElementById('srchBox');if (sb && sb.className == 'watermark') {  var si = document.getElementById('srchInput');  var f = function() { si.className = 'nomark'; };  var b = function() {    if (si.value == '') {      si.className = '';    }  };  si.onfocus = f;  si.onblur = b;  if (!/[&?]p=[^&]/.test(location.search)) {    b();  } else {    f();  }}})();</script></head><body><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-N9MQR5"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-N9MQR5');</script><!-- End Google Tag Manager --><div id="contentsWrap" class="OffMenu"><div id="d_page"><!-- header start --><div class="sp_pc"><header class="header">  <div class="tag_bg">    <div class="tagline">      <div class="tag_right">        <ul>          <span id="loginName" style="display: none;" class="s_login">          <li class="border_n"> <span id="memberName" class="tx-b"></span>さん <span id="regularMember" style="display:none;"> <span style="display:none" class="s_regularMember_any">（</span> <span id="tcPremium" style="display:none;">タイムズクラブ[hrefx][hrefx]</span> <span style="display:none" class="s_regularMember_any">）</span> </span> </li>          <li>[hrefx][hrefx]</li>          </span> <span id="notLoginName" style="display:none;" class="s_logout">          <li id="welcome" class="border_n">ようこそ<span class="tx-b">ゲスト</span>さん</li>          </span>        </ul>      </div>    </div>  </div>  <div class="top_navi">    <div>      <hgroup>        <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>      </hgroup>      <ul>        <li>          <p><img src="/common/images/common_ic004.gif" alt="よくあるご質問" width="13" height="20"></p>          <p>[hrefx][hrefx][hrefx][hrefx][hrefx]</p>        </li>        <li>          <p><img src="/common/images/common_ic005.gif" alt="個人入会" width="17" height="21"></p>          <p>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>        </li>        <li>          <p><img src="/common/images/common_ic006.gif" alt="法人入会" width="15" height="20"></p>          <p>[hrefx][hrefx]</p>        </li>        <li class="pr0">          <p id="logout" style="display:none;" class="btn s_logout">[hrefx][hrefx]</p>          <p id="login" style="display:none;" class="btn s_login">[hrefx][hrefx]</p>        </li>      </ul>    </div>  </div>    <nav class="nav">    <ul>      <li class="nav-item gnav01">[hrefx][hrefx]</li>      <li class="nav-item gnav02">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li class="nav-item gnav03">[hrefx][hrefx][hrefx][hrefx]</li>      <li class="nav-item gnav04">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li class="nav-item gnav05">[hrefx][hrefx]</li>      <li class="srchnav">       <!-- ここから検索窓のソースコード -->        <div id="srchBox">            <form action="/search.html" method="get" id="srch">              <p id="srchForm">                <input type="text" name="p" id="srchInput">                <input type="image" src="/common/images/common_ic013.png" value="検索" id="srchBtn" onclick="document.getElementById('srchInput').focus();" class="alpha">                <input type="hidden" id="fr" name="fr" value="cse">                <input type="hidden" id="ei" name="ei" value="UTF-8">                <input type="hidden" id="csid" name="csid" value="Vx_sIEhGL5uUfDiZkYtEy1B17gGCGLxbuNfJ">              </p>              <input type="hidden" name="vs" value="plus.timescar.jp" id="yjInsite">            </form>            <img src="//custom.search.yahoo.co.jp/images/window/Vx_sIEhGL5uUfDiZkYtEy1B17gGCGLxbuNfJ.gif">          </div>        <!-- /ここまで検索窓のソースコード -->       </li>    </ul>  </nav></header></div><!--sp--><div class="sp_sp"><header>  <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>  <div id="logout" style="display:none;" class="s_logout">    <ul>      <li style="display:none;" class="loginBtn s_alive">[hrefx][hrefx]</li>      <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li class="menuBtn">[hrefx][hrefx]</li>     </ul>  </div>  <div id="login" style="display:none;" class="s_login">    <ul>      <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>      <li class="menuBtn">[hrefx][hrefx]</li>    </ul>  </div></header></div><!-- header end --><nav class="breadcrumbs sp_pc">  <ol>    <li itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">      <a itemprop="url" href="/"><span itemprop="title">ホーム</span></a>    </li>    <li itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">      <a itemprop="url" href="/tcp_guide/safe-driving/"><span itemprop="title">知ってる？運転のポイント</span></a>    </li>    <li itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">      <span itemprop="title">おすすめ！乗りやすいクルマ</span>    </li>  </ol></nav>  <div class="contents">    <section class="under-title">      <p class="index-title"><i class="icon-safety"></i>知ってる？運転のポイント</p>      <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>    </section>        <section class="lead">       <p>タイムズカープラスでは運転が苦手な方でも「乗りやすい」と思える軽自動車・コンパクトカーを<br class="sp_pc">       全国に多数配備しております。その中でも特に乗りやすいおすすめの車をご紹介いたします。</p>    </section>        <section class="box easy-ride">      <h2>[H2]</h2>            <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>            <article class="select-car">        <h4>ハスラー<span>（SUZUKI）</span></h4>        <div class="car-detail">          <figure  class="car-photo"><img src="images/easy-ride_il001.png"></figure>          <div class="spec">            <p>デュアルカメラブレーキサポート搭載車両。2つのカメラで人もクルマもとらえ、衝突回避をサポートします。車高が高いため視点が高く運転がしやすいクルマです。</p>            <dl>              <dt>搭載安全装備<span class="notes">※</span></dt>              <dd>バックモニター、ブレーキサポート</dd>            </dl>            <div class="bt">              <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=K1258">ステーション検索<i class="ic_arrow"></i></a></p>              <!--                    -->              <p class="move-btn"><a class="alpha" href="/car/hustler.html">車種詳細<i class="ic_arrow"></i></a></p>            </div>          </div>        </div>      </article>            <div  class="select-under">        <div class="select-second">          <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>            <article class="select-car">          <h4>N-BOX<span>（Honda）</span></h4>            <div class="car-detail">              <figure  class="car-photo"><img src="images/easy-ride_il002.png"></figure>              <div class="spec">                <p>最小回転半径が4.5ｍ。小さな車体で小回りがきき、運転がしやすいクルマです。</p>                <dl>                  <dt>搭載安全装備<span class="notes">※</span></dt>                  <dd>バックモニター</dd>                </dl>                <div class="bt">                  <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=K1243">ステーション検索<i class="ic_arrow"></i></a></p>                  <!--                        -->                  <p class="move-btn"><a class="alpha" href="/car/n-box.html">車種詳細<i class="ic_arrow"></i></a></p>                </div>              </div>            </div>            </article>          </div>                    <div class="select-second">          <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>                      <article class="select-car">          <h4>ウェイク<span>（DAIHATSU）</span></h4>            <div class="car-detail">              <figure  class="car-photo"><img src="images/easy-ride_il003.png"></figure>              <div class="spec">                <p>衝突回避支援ブレーキや車線逸脱警報など、多数の機能を搭載。さまざまな機能でお客様の安全を守ります。</p>                <dl>                  <dt>搭載安全装備<span class="notes">※</span></dt>                  <dd>バックモニター、ブレーキサポート</dd>                </dl>                <div class="bt">                  <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=K1263">ステーション検索<i class="ic_arrow"></i></a></p>                  <!--                        -->                  <p class="move-btn"><a class="alpha" href="/car/wake.html">車種詳細<i class="ic_arrow"></i></a></p>                </div>              </div>            </div>            </article>          </div>        </div>                <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>                <article class="select-car">          <h4>ソリオ <span>（SUZUKI）</span></h4>          <div class="car-detail">            <figure  class="car-photo"><img src="images/easy-ride_il004.png"></figure>            <div class="spec">              <p>コンパクトカーの中でも特に全長・全幅が小さいクルマです。コンパクトな上に車高が高いため、視点を高く保持でき周囲が見やすく、非常に運転がしやすいクルマです。</p>              <dl>                <dt>搭載安全装備<span class="notes">※</span></dt>                <dd>バックモニター、コーナーセンサー</dd>              </dl>              <div class="bt">                <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=C1219">ステーション検索<i class="ic_arrow"></i></a></p>                <!--                      -->                <p class="move-btn"><a class="alpha" href="/car/solio.html">車種詳細<i class="ic_arrow"></i></a></p>              </div>            </div>          </div>        </article>              <div class="select-under">          <div class="select-second">            <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>                          <article class="select-car">            <h4>ノート<span>（NISSAN）</span></h4>              <div class="car-detail">                <figure  class="car-photo"><img src="images/easy-ride_il005.png"></figure>                <div class="spec">                  <p>最新技術のアラウンドビューモニターを搭載。コンパクトで運転しやすいだけでなく、最新の技術も体験できます。</p>                  <dl>                    <dt>搭載安全装備<span class="notes">※</span></dt>                    <dd>アラウンドビューモニター、<br>  ブレーキサポート、車線逸脱警報</dd>                  </dl>                  <div class="bt">                    <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=C2210">ステーション検索<i class="ic_arrow"></i></a></p>                    <!--                          -->                    <p class="move-btn"><a class="alpha" href="/car/note.html">車種詳細<i class="ic_arrow"></i></a></p>                  </div>                </div>              </div>              </article>            </div>                        <div class="select-second">            <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>                          <article class="select-car">            <h4>フィット<span>（Honda）</span></h4>              <div class="car-detail">                <figure  class="car-photo"><img src="images/easy-ride_il006.png"></figure>                <div class="spec">                  <p>前方はワイパーなどが視界に入らないように、左右は曲がる際に死角ができないようにミラーの位置も調整されており、視野が広く保ちやすくなっています。</p>                  <dl>                    <dt>搭載安全装備<span class="notes">※</span></dt>                    <dd>バックモニター、ブレーキサポート、<br>  コーナーセンサー（リアのみ）</dd>                  </dl>                  <div class="bt">                    <p class="station-btn"><a class="sp_link alpha" href="/view/station/list.jsp?searchKbn=3&carModel=C1208">ステーション検索<i class="ic_arrow"></i></a></p>                    <!--                          -->                    <p class="move-btn"><a class="alpha" href="/car/fit.html">車種詳細<i class="ic_arrow"></i></a></p>                  </div>                </div>              </div>              </article>            </div>          </div>          <p class="annotation">※同一車種でも車両により装備が異なる場合があります。ご利用前に予約画面でご確認ください。</p>    </section>        <section class="box odd content-navi">  <h4 class="sp_pc">知ってる？運転のポイント</h4>  <ul class="content-navi-list">	<li>	  <div class="navi-img">		[hrefx][hrefx][hrefx][hrefx]	  </div>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	</li>	<li>	  <div class="navi-img">		[hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	</li>	<li>	  <div class="navi-img">		[hrefx][hrefx][hrefx][hrefx]	  </div>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	</li>	<li>	  <div class="navi-img">		[hrefx][hrefx][h[hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx]	  </div>	</li>	<li>	  <div class="navi-img">		[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx][hrefx]	  </div>	</li>	<li>	  <div class="navi-txt">		[hrefx][hrefx][hrefx][hrefx]	  </div>	</li>  </ul></section>        <div class="bgarea sp_sp">	  <div class="admission">  <p class="admission01">[hrefx][hrefx][hrefx][hrefx]</p>  <p class="admission02">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p></div>    </div>      <!--PC footer/ -->  <div class="sp_pc"><p id="pagetop">[hrefx][hrefx]</p><!-- フッタ --><footer>  <div class="linkarea">  <dl class="place" style="height: 220px;">    <dt>[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>      </ul>    </dd>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>            <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>                 <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                 <li>[hrefx][hrefx]</li>      </ul>    </dd>  </dl>  <dl class="use" style="height: 220px;">    <dt>[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>				<li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>      </ul>    </dd>  </dl>  <dl class="car" style="height: 220px;">    <dt>[hrefx][hrefx]</dt>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>		<li>[hrefx][hrefx]</li>      </ul>    </dd>  </dl>  <dl class="f-news" style="height: 220px;">    <dt>[hrefx][hrefx]</dt>    <dt class="mt10">[hrefx][hrefx]</dt>    <dt class="mt10">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</dt>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      </ul>    </dd>  </dl>  <dl class="regist" style="height: 220px;">    <dt>[hrefx][hrefx]</dt>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>      </ul>    </dd>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>      </ul>    </dd>    <dt class="mt10">[hrefx][hrefx]</dt>    <dd>      <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>      </ul>    </dd>  </dl>  </div>  <ul class="footer_navi">    <li>[hrefx][hrefx][hrefx][hrefx]</li>	     <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx]</li>    <li>[hrefx][hrefx]</li>    <li class="border_n">[hrefx][hrefx]</li>  </ul>  <!-- copyright start -->  <div class="copyright">    <div class="copyright_inner">      <p>[hrefx][hrefx]</p>      <p>タイムズカープラスは、パーク２４グループのタイムズ２４株式会社が運営するカーシェアリングサービスです。<br />      ©Times24 Co., Ltd. All Rights Reserved.</p>    </div>  </div>  <!-- copyright end --></footer></div>  <!--SP footer/ -->  <div class="sp_sp">    <span id="footerSpMenu" style="display:none;" class="s_login">    <div class="sp_subnavi">      <ul>        <li><a id="#" href="https://plus.timescar.jp/view/sp/member/mypage.jsp#stationReserve" rel="external" class="arrow_o">簡単予約</a></li>        <li><a id="#" href="http://plus.timescar.jp/view/sp/station/search.jsp" rel="external" class="arrow_o">ステーション検索</a></li>      </ul>      <div class="footer_navi">       <p>[hrefx][hrefx]</p>      </div>    </div>    </span>        <nav class="footer_link">      <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      </ul>       <ul>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx]</li>      </ul>       <ul>          <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>      </ul>       <ul>        <li>[hrefx][hrefx]</li>        <li>[hrefx][hrefx]</li>      </ul>    </nav>        <div class="base">      <div>         <p class="copyright">(C) Times24 Co., Ltd. All Rights Reserved.</p>      </div>    </div>   </div>     </div>  </div><!-- コンテンツ end -->  </div><!--contentsWrap--><script language="JavaScript" type="text/javascript" src="../../common/js/jquery.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/jquery.cookie.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/common.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/mouseover.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/url.js"></script><script language="JavaScript" type="text/javascript" src="../../view/teedaExtension/org/seasar/teeda/ajax/js/ajax.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/errorHandler.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/ajaxCustomize.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/ajaxCommon.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/header.js"></script><script language="JavaScript" type="text/javascript" src="../../common/js/pagetop.js"></script><script language="JavaScript" type="text/javascript" src="js/safe-driving.js"></script><script language="JavaScript" type="text/javascript" src="/sp/common/js/accordion_sp.js"></script><!-- menu --><div class="sp_sp"><!-- menu --><nav id="hmenu" selected="false" style="">  <div class="header">    <p class="menu-home">[hrefx][hrefx]</p>    <p class="m_h1">メニュー</p>    <p class="menuClose"><a onclick="slideDownMenu();" href="javascript:void(0)"><i class="ic-close"></i>閉じる</a></p>  </div>  <!-- login -->  <ul class="change_in" style="display:none">  </ul>  <!-- //login -->   <!-- logout -->  <ul class="change_out" style="">    <li>[hrefx][hrefx]</li>    <dl class="accordion">      <dt class=" accordionMenu01" style="cursor: pointer;"><span class="icon "></span><span>ステーション検索</span></dt>      <dd class=" accordionMenu01" style="display: none;">        <ul class="middle clearfix border-none">          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>        </ul>      </dd>      <dt class=" accordionMenu02" style="cursor: pointer;"><span class="icon"></span><span>料金</span></dt>      <dd class=" accordionMenu02" style="display: none;">        <ul class="middle clearfix border-none">          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>        </ul>      </dd>      <dt class=" accordionMenu03" style="cursor: pointer;"><span class="icon"></span><span>利用方法</span></dt>      <dd class=" accordionMenu03" style="display: none;">        <ul class="middle clearfix border-none">          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>					<li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>        </ul>      </dd>    </dl>    <li>[hrefx][hrefx]</li>    <dl class="accordion">      <dt class=" accordionMenu04" style="cursor: pointer;"><span class="icon "></span><span>各種サービスのご案内</span></dt>      <dd class=" accordionMenu04" style="display: none;">        <ul class="middle clearfix border-none">          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>        </ul>      </dd>    </dl>    <li>[hrefx][hrefx]</li>    <dl class="accordion">      <dt class=" accordionMenu05" style="cursor: pointer;"><span class="icon "></span><span>おすすめコンテンツ</span></dt>      <dd class=" accordionMenu05" style="display: none;">        <ul class="middle clearfix border-none">          <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx[hrefx][hrefx][hrefx][hrefx][hrefx]hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>          <li>[hrefx][hrefx]</li>        </ul>      </dd>    </dl>  </ul>  <div class="bgarea">    <div class="admission">      <p class="admission01">[hrefx][hrefx]</p>      <p class="admission02">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</p>    </div>  </div>  <div class="header">    <p class="menuClose"><a onclick="slideDownMenu2();" href="javascript:void(0)"><i class="ic-close"></i>閉じる</a></p>  </div>  <!-- //logout --> </nav></div><script src="/common/js/menu_sp.js"></script><!-- /menu --><!-- User Insight Code  --><!-- User Insight PCDF Code Start : timescar.jp --><script type="text/javascript"><!--var _uic = _uic ||{}; var _uih = _uih ||{};_uih['id'] = 31449;_uih['lg_id'] = '';_uih['fb_id'] = '';_uih['tw_id'] = '';_uih['uigr_1'] = 'TCP_ALL'; _uih['uigr_2'] = 'TCP_PC'; _uih['uigr_3'] = ''; _uih['uigr_4'] = ''; _uih['uigr_5'] = '';_uih['uigr_6'] = ''; _uih['uigr_7'] = ''; _uih['uigr_8'] = ''; _uih['uigr_9'] = ''; _uih['uigr_10'] = '';/* DO NOT ALTER BELOW THIS LINE *//* WITH FIRST PARTY COOKIE */(function() {var bi = document.createElement('scri'+'pt');bi.type = 'text/javascript'; bi.async = true;bi.src = ('https:' == document.location.protocol ? 'https://bs' : 'http://c') + '.nakanohito.jp/b3/bi.js';var s = document.getElementsByTagName('scri'+'pt')[0];s.parentNode.insertBefore(bi, s);})();//--></script><!-- User Insight PCDF Code End : timescar.jp --><!-- /User Insight Code  --><!-- Yahoo Tag Manager --><script type="text/javascript">  (function () {    var tagjs = document.createElement("script");    var s = document.getElementsByTagName("script")[0];    tagjs.async = true;    tagjs.src = "//s.yjtag.jp/tag.js#site=UirPDbP";    s.parentNode.insertBefore(tagjs, s);  }());</script><noscript>  <iframe src="//b.yjtag.jp/iframe?c=UirPDbP" width="1" height="1" frameborder="0" scrolling="no" marginheight="0" marginwidth="0"></iframe></noscript><!-- End Yahoo Tag Manager --></body></html>