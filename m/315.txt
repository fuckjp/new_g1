﻿<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><!-- P3-WEB-03, 36ms --><html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://opengraphprotocol.org/schema/" xmlns:fb="http://www.facebook.com/2008/fbml" lang="jp" xml:lang="ja-JP"><head id="ctl00_Head1"><title>[metatags_title]</title><meta property="og:title" content="[metatags_description]" /><meta property="og:type" content="article" /><meta property="og:description" content="[metatags_description]" /><meta property="og:url" content="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" /><meta property="og:image" content="http://www.greenpeace.org/japan/Global/japan/images/press_release/136770_244298.jpg" /><meta property="twitter:card" content="summary" /><meta property="twitter:site" content="@greenpeace" /><meta property="og:site_name" content="国際環境NGOグリーンピース" /><meta property="fb:admins" content="783345530" /><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><meta name="description" content="[metatags_description]" /><meta name="keywords" content="[metatags_description],プレスリリース, 自然エネルギー, iSwitch関西" /><meta name="content-language" content="ja" /><meta name="robots" content="all" /><meta property="fb:app_id" content="215902881852903" />    <meta http-equiv="Content-Type" charset="UTF-8" /><meta name="google-site-verification" content="kgucJapFQWy3xoM6jIndKQKQecU56QRtBl5bctyiLRs" /><meta name="referrer" content="origin" /><script type="text/javascript" src="http://www.googleadservices.com/pagead/conversion.js"></script><noscript><div style="display:inline;"><img height="1" width="1" style="border-style:none;" alt="" src="http://www.googleadservices.com/pagead/conversion/1015956239/?label=GQe9CJm6tAIQj4a55AM&amp;guid=ON&amp;script=0" /></div></noscript>    <link rel="shortcut icon" type="image/ico" href="/japan/Templates/Planet3/Styles/Images/Icons/favicon.ico" />    <link rel="stylesheet" type="text/css" href="/japan/Templates/Planet3/Styles/all.css?v=3.867" />    <!--[if lt IE 7]>    <link rel="stylesheet" type="text/css" href="/japan/Templates/Planet3/Styles/ie7.css" media="screen"/>    <![endif]-->    <!--[if lt IE 8]>    <link rel="stylesheet" type="text/css" href="/japan/Templates/Planet3/Styles/lt8.css" media="screen"/>    <![endif]-->    <link rel="stylesheet" media="print" href="/japan/Templates/Planet3/Styles/print.css?v=3.867" type="text/css" />    <script type="text/javascript">        /*! @license magnet:?xt=urn:btih:1f739d935676111cfff4b4693e3816e664797050&dn=gpl-3.0.txt GPL-v3-or-Later */        /* <![CDATA[ */        document.write('<link rel="stylesheet" type="text/css" href="/japan/Templates/Planet3/Styles/hasscript.css" />');        /* ]]> */        /*! @license-end */    </script>    <script src="/japan/Templates/Planet3/Javascripts/js-resources.ashx?epslanguage=ja-JP&amp;uiculture=ja-JP&amp;v=3.867" type="text/javascript"></script>    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" type="text/javascript"></script>    <script src="/japan/Templates/Planet3/Javascripts/jquery/jquery-ui-1.8.8.effect.highlight.min.js" type="text/javascript"></script>    <script src="/japan/Templates/Planet3/Javascripts/jquery/jquery.ba-resize.min.js" type="text/javascript"></script>     <script src="/japan/Templates/Planet3/JavaScripts/jquery/jquery.query-2.1.7.js" type="text/javascript"></script>     <script src="/japan/Templates/Planet3/Javascripts/jquery/jquery.ba-hashchange.min.js" type="text/javascript"></script>     <script src="/japan/Templates/Planet3/Javascripts/main.js?v=3.867" type="text/javascript"></script>    <script src="/japan/Templates/Planet3/Javascripts/generic/lightbox.js?v=3.867" type="text/javascript"></script>    <script src="//ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js" type="text/javascript"></script>    <script src="/japan/Templates/Planet3/Javascripts/cross-domain-ga-tracking.js" type="text/javascript"></script>     <script type="text/javascript" src="/international/Templates/Planet3/javascripts/trackdownloads.js"></script><script type="text/javascript" src="/japan/Global/japan/code/js/universal_analytics_snippet_gpjapan.js"></script><script type="text/javascript" src="/Global/social_tracking.js"></script><script type="text/javascript" src="//cdn.optimizely.com/js/792264988.js"></script><link type="text/css" rel="stylesheet" href="/japan/ja/stylesheet/" media="screen" /><script type="text/javascript">setTimeout('_gaq.push([\'_trackEvent\',\'NoBounce\', \'Over 60seconds\'])',60000);<!-- Facebook Pixel Code --><script>!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,document,'script','https://connect.facebook.net/en_US/fbevents.js');fbq('init', '1683752908511909');fbq('track', "PageView");</script><noscript><img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=1683752908511909&amp;ev=PageView&amp;noscript=1" /></noscript><!-- End Facebook Pixel Code --><!-- User Heat Tag --><script type="text/javascript">(function(add, cla){window['UserHeatTag']=cla;window[cla]=window[cla]||function(){(window[cla].q=window[cla].q||[]).push(arguments)},window[cla].l=1*new Date();var ul=document.createElement('script');var tag = document.getElementsByTagName('script')[0];ul.async=1;ul.src=add;tag.parentNode.insertBefore(ul,tag);})('//uh.nakanohito.jp/uhj2/uh.js', '_uhtracker');_uhtracker({id:'uhpXvLRc49'});</script><!-- End User Heat Tag --><style type="text/css">.middle-banner {    width: 593px;    height: 160px;    margin: 0px auto 0px auto;    padding: 20px 0px 0px 0px;    padding: 20px 0px 0px 0px;    float: none;    clear: both;    list-style-type: none;}.middle-banner li {    height: 160px;    background-repeat: no-repeat;    background-position: 0px 0px;    float: left;    margin: 0px;    padding: 0px;}</style><link rel="image_src" href="http://www.greenpeace.org/japan/Global/japan/images/press_release/136770_244298.jpg" /><link rel="canonical" href="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" /><script type="text/javascript" src="//s7.addthis.com/js/250/addthis_widget.js?pub=xa-4b9792c5021867c3"></script><script type="text/javascript" src="/japan/Templates/Planet3/Javascripts/generic/validator.js"></script>   <script src="/japan/Templates/Planet3/Javascripts/pages/detail.js" type="text/javascript"></script></head><body class="article"><span id="loadTime" style="float:left"></span>        <form name="aspnetForm" method="post" action="/japan/ja/news/press/2017/pr20170628/" id="aspnetForm"><div><input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="" /><input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="" /><input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwUKMTY4MjM1ODQzMWQYBAUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgQFM2N0bDAwJHVjQ29tbWVudHMkUG9zdENvbW1lbnQkY3RsMDIkYnRuRmFjZWJvb2tMb2dpbgUxY3RsMDAkdWNDb21tZW50cyRQb3N0Q29tbWVudCRjdGwwMiRidG5Hb29nbGVMb2dpbgUzY3RsMDAkdWNDb21tZW50cyRQb3N0Q29tbWVudCRjdGwxMCRidG5GYWNlYm9va0xvZ2luBTFjdGwwMCR1Y0NvbW1lbnRzJFBvc3RDb21tZW50JGN0bDEwJGJ0bkdvb2dsZUxvZ2luBSljdGwwMCR1Y0NvbW1lbnRzJFBvc3RDb21tZW50JG12QWRkQ29tbWVudA8PZGZkBSljdGwwMCRjcGhDb250ZW50QXJlYSRzaGFyZUJhciRtdlNoYXJlQmFycw8PZGZkBQxjdGwwMCRtdk1lbnUPD2RmZEa8PBTFZmLsMjC2pDsCM9tocU3i" /></div><script type="text/javascript">//<![CDATA[var theForm = document.forms['aspnetForm'];if (!theForm) {    theForm = document.aspnetForm;}function __doPostBack(eventTarget, eventArgument) {    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {        theForm.__EVENTTARGET.value = eventTarget;        theForm.__EVENTARGUMENT.value = eventArgument;        theForm.submit();    }}//]]></script><script src="/japan/WebResource.axd?d=sfUkmaqRPQn_r89OB1kOBYbllHUxGAvpdOwyyyJdF2AIqDbe_323PKHf3UGXIu6ibH5dWuEJfm8M7JmkcjfYgxxPRvk1&amp;t=636283832160000000" type="text/javascript"></script><div>	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="540C17F0" /></div>        <!-- Page start -->    <div class="page">        <!-- Header used for print media -->        <div class="print-only">            This field is mandatory!</div>        <!-- Header start -->        <div id="header">            <!-- logo -->            <span class="logo"><a href="/japan/ja/" title="Greenpeace">                Greenpeace</a></span>            <div class="heading">                <div class="international">                    <fieldset>                        <div class="selectArea country hide" id="sarea1">                            <span class="center">                                国際環境NGOグリーンピース</span> <a href="javascript:void(0)" class="selectButton" title="select"></a>                        </div>                        <select name="ctl00$ddlSites" id="ctl00_ddlSites">	<option value="">Webサイトを選択</option>	<option value="http://www.greenpeace.org/international">International (English)</option>	<option value="">-----------</option>	<option value="http://www.greenpeace.org/afrique/">Africa - Congo (Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/afrique/">Africa - Senegal (Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/africa/">Africa - South Africa (English)</option>	<option value="http://www.greenpeacearabic.org">Arabic (العربية)</option>	<option value="http://www.greenpeace.org/argentina/">Argentina (Espa&#241;ol)</option>	<option value="http://www.greenpeace.org/australia/">Australia (English)</option>	<option value="http://www.greenpeace.org/austria/">Austria (Deutsch)</option>	<option value="http://www.greenpeace.org/belgium/">Belgium (Nederlands/Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/brasil/">Brazil (Portugu&#234;s)</option>	<option value="http://www.greenpeace.org/bulgaria/">Bulgaria (български)</option>	<option value="http://www.greenpeace.org/canada/">Canada (English/Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/chile/">Chile (Espa&#241;ol)</option>	<option value="http://www.greenpeace.org.cn">China Mainland (简体中文)</option>	<option value="http://www.greenpeace.org/colombia/">Colombia (Espa&#241;ol)</option>	<option value="http://www.greenpeace.org/croatia">Croatia (Hrvatski)</option>	<option value="http://www.greenpeace.cz">Czech Republic (Česky)</option>	<option value="http://www.greenpeace.dk">Denmark (Dansk)</option>	<option value="http://www.greenpeace.org/eastasia/">East Asia (English)</option>	<option value="http://www.greenpeace.org/eu-unit">European Union (English)</option>	<option value="http://www.greenpeace.org/australia">Fiji (English)</option>	<option value="http://www.greenpeace.org/finland">Finland (Suomea)</option>	<option value="http://www.greenpeace.org/france">France (Fran&#231;ais)</option>	<option value="http://www.greenpeace.de">Germany (Deutsch)</option>	<option value="http://www.greenpeace.gr">Greece (Ελληνικά)</option>	<option value="http://www.greenpeace.org/greenland/">Greenland (Kalaallisut/Dansk)</option>	<option value="http://www.greenpeace.org/hk/">Hong Kong (繁體中文)</option>	<option value="http://www.greenpeace.hu">Hungary (Magyar)</option>	<option value="http://www.greenpeace.org/india/">India (English/Hindi)</option>	<option value="http://www.greenpeace.org/seasia/id/">Indonesia (Indonesia)</option>	<option value="http://www.greenpeace.org/israel/">Israel (עברית)</option>	<option value="http://www.greenpeace.org/italy/">Italy (Italiano)</option>	<option value="http://www.greenpeace.org/japan/">Japan (日本語)</option>	<option value="http://www.greenpeace.org/korea/">Korea (한국어)</option>	<option value="http://www.greenpeace.lu">Luxembourg (Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/mediterranean/">Malta (English)</option>	<option value="http://www.greenpeace.org/mexico/">Mexico (Espa&#241;ol)</option>	<option value="http://www.greenpeace.nl">Netherlands (Nederlands)</option>	<option value="http://www.greenpeace.org.nz">New Zealand (English)</option>	<option value="http://www.greenpeace.no">Norway (Norsk)</option>	<option value="http://www.greenpeace.org.au">Papua New Guinea (English)</option>	<option value="http://www.greenpeace.org/peru/">Per&#250; (Espa&#241;ol)</option>	<option value="http://www.greenpeace.org/seasia/ph/">Philippines (English)</option>	<option value="http://www.greenpeace.pl">Poland (Polska)</option>	<option value="http://www.greenpeace.org/portugal/">Portugal (Portugu&#234;s)</option>	<option value="http://www.greenpeace.ro">Romania (Rom&#226;n)</option>	<option value="http://www.greenpeace.org/russia/ru/">Russia (Русский)</option>	<option value="http://www.greenpeace.sk">Slovakia (Slovenčina)</option>	<option value="http://www.greenpeace.org/slovenia/">Slovenia (Slovenjia)</option>	<option value="http://www.greenpeace.org/seasia/">Southeast Asia (English)</option>	<option value="http://www.greenpeace.org/espana/">Spain (Espa&#241;ol)</option>	<option value="http://www.greenpeace.se">Sweden (Svenska)</option>	<option value="http://www.greenpeace.org/switzerland/de/">Switzerland (Deutsch)</option>	<option value="http://www.greenpeace.org/switzerland/fr/">Switzerland (Fran&#231;ais)</option>	<option value="http://www.greenpeace.org/taiwan/">Taiwan (正體中文)</option>	<option value="http://www.greenpeace.org/seasia/th/">Thailand (ไทย)</option>	<option value="http://www.greenpeace.org/turkey/">Turkey (T&#252;rk)</option>	<option value="http://www.greenpeace.org.uk">United Kingdom (English)</option>	<option value="http://www.greenpeace.org/usa/">USA (English)</option></select>                        <input type="submit" name="ctl00$btnSiteSubmit" value="Go" onclick="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$btnSiteSubmit&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, false))" id="ctl00_btnSiteSubmit" />                    </fieldset>                </div>                <div class="tools">                    <div class="tools-inner">                                                <ul class="add-nav"><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul>                    </div>                                            <div class="search-form" id="SearchBox">                            <input name="ctl00$txtSearch" type="text" value="検索" id="ctl00_txtSearch" class="text" /><input type="submit" name="ctl00$btnSearchSubmit" value="" onclick="javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions(&quot;ctl00$btnSearchSubmit&quot;, &quot;&quot;, true, &quot;&quot;, &quot;&quot;, false, false))" id="ctl00_btnSearchSubmit" class="btn-search" />                        </div>                                    </div>            </div>            <div class="navigation">                                    <ul id="nav" class="navigation">        <li>            [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>        <li>            [hrefx][hrefx][hrefx][hrefx]            [hrefx]            <div class="drop-holder">	            <div class="drop-content">	                    		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                            </ul>                                        </div>            </div>                    </li>        <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                        <div class="drop-holder">	            <div class="drop-content">	                    		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][[hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                        		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                            </ul>                                </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                        		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                            </ul>                                </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                            </ul>                                        </div>            </div>                    </li>        <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                        <div class="drop-holder">	            <div class="drop-content">	                    		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                        		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx]                                            </li>                            </ul>                                </li>                                <li>                        [hrefx][hrefx]                                            </li>                            </ul>                                        </div>            </div>                    </li>        <li>            [hrefx][hrefx]                        <div class="drop-holder">	            <div class="drop-content">	                    		        <ul>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx]                                            </li>                            </ul>                                        </div>            </div>                    </li>        <li>            [hrefx][hrefx]                        <div class="drop-holder">	            <div class="drop-content">	                    		        <ul>                                <li>                        [hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                                <li>                        [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>                            </ul>                                        </div>            </div>                    </li>        <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>        <li>            [hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]                                            </li>        <li>            [hrefx][hrefx]                                            </li>    </ul>                                                    <div class="sign-wrapper">                        <ul class="sign">                                                            <li><a href="/japan/ja/My/login/?returnUrl=%2fjapan%2fja%2fnews%2fpress%2f2017%2fpr20170628%2f" title="sign in">                                    sign in</a></li>                                                            <li>                                                                        <a href="/japan/ja/My/Signup/" title="">                                        </a></li>                                                    </ul>                    </div>                                            </div>        </div>        <!-- Header end -->        <!-- Wrapper start -->        <div id="wrapper">            <!-- BEGIN open space -->                                    <!-- END open space -->            <!-- main start -->            <div id="main">                <div id="content">				    			        <!-- bread crumbs -->					    <ul class="breadcrumbs">                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li>                                    <li>[hrefx][hrefx][hrefx][hrefx]</li>                                            <li>[metatags_description]</li>                    </ul>															<!-- contents -->					    <div id="fb-root"></div>    <script>        window.fbAsyncInit = function() {        FB.init({ appId: '215902881852903', status: true, cookie: true,                xfbml: true            });            $(document).trigger('facebook:ready');        };        // Load the SDK Asynchronously        (function (d) {            var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];            if (d.getElementById(id)) { return; }            js = d.createElement('script'); js.id = id; js.async = true;            js.src = "//connect.facebook.net/en_US/all.js";            ref.parentNode.insertBefore(js, ref);        } (document));    </script>                       <div class="share_top">&nbsp;</div>        <div id="share_rail" style="visibility: hidden">            <div id="share_pos" class="share_sidebar">                <div class="paper">                    <div class="paper-content">                                                    <div class="sbutton vertical">                                <div class="fb-like" data-href="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" data-layout="box_count" data-colorscheme="light" show_faces="false"></div>                            </div>                            <div class="sbutton horizontal">                                <div class="fb-like" data-href="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" data-layout="button_count" data-colorscheme="light" show_faces="false"></div>                            </div>                                                                            <div class="sbutton vertical">                                [hrefx][hrefx]                            </div>                            <div class="sbutton horizontal">                                [hrefx][hrefx]                            </div>                            <!-- Load Twitter JS-API asynchronously -->                            <script type="text/javascript">                                (function () {                                    // NOTE: Prevent crawlers trying to crawl the handler url and creating 404 error entry in log table                                    var handlerUrl = resources.base_url + 'templates/' + 'planet3/handlers' + '/urlshortenerhandler' + '.as' + 'hx';                                    $.ajax(                                    {                                        url: handlerUrl,                                        data: 'url=http%3a%2f%2fwww.greenpeace.org%2fjapan%2fja%2fnews%2fpress%2f2017%2fpr20170628%2f&guid=a5722311c5b3d08a7a5e824398adae00',                                    success: function (data, status) {                                        var shareUrl = $('#share_rail .twitter-share-button').attr('data-url');                                        $('#share_rail .twitter-share-button').attr('data-counturl', shareUrl);                                        $('#share_rail .twitter-share-button').attr('data-url', data);                                        loadTwitter();                                    },                                    error: function (data, status, e) {                                        loadTwitter();                                    }                                });                            })();                            function loadTwitter() {                                var twitterWidgets = document.createElement('script');                                twitterWidgets.type = 'text/javascript';                                twitterWidgets.async = true;                                twitterWidgets.src = '//platform.twitter.com/widgets.js';                                // Setup a callback to track once the script loads.                                twitterWidgets.onload = function () { $(document).trigger('twitter:ready'); };                                document.getElementsByTagName('head')[0].appendChild(twitterWidgets);                            }                            </script>                                                                            <div class="sbutton">                                <a class="email addthis_button_email no-obfus" addthis:url="http%3a%2f%2fwww.greenpeace.org%2fjapan%2fja%2fnews%2fpress%2f2017%2fpr20170628%2f" href="javascript:void(0)" title="Email">                                    <span class="btn-left"></span>                                        <span class="icon"></span>Email<span class="btn-right">                                    </span>                                </a>                            </div>                            <div class="sbutton">                                <a class="sharesimple addthis_button_compact no-obfus" addthis:url="http%3a%2f%2fwww.greenpeace.org%2fjapan%2fja%2fnews%2fpress%2f2017%2fpr20170628%2f" ref="http://www.addthis.com/bookmark.php?v=250&amp;pub=xa-4b9792c5021867c3" title="フォロー" addthis:title="">                                    <span class="btn-left"></span><span class="icon"></span>                                        フォロー                                    <span class="btn-right"></span>                                </a>                            </div>                                                                                                                                                    <div class="sbutton vertical no-obfus">                                <g:plusone size="tall" href="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" callback="plusoneClick"></g:plusone>                            </div>                            <div class="sbutton horizontal no-obfus">                                <g:plusone size="medium" href="http://www.greenpeace.org/japan/ja/news/press/2017/pr20170628/" callback="plusoneClick"></g:plusone>                            </div>                            <script type="text/javascript">                                // trigger plusone callback                                function plusoneClick(obj) {                                    $(document).trigger("googleplus:plusoneClick", obj);                                }                                // add googleplus script                                (function () {                                    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;                                    po.src = 'https://apis.google.com/js/plusone.js';                                    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);                                })();                            </script>                                                                                                <div style="clear: both"></div>                    </div>                    <div class="top-left"></div>                    <div class="top-right"></div>                    <div class="paper-bottom">                        <div class="bottom-left"></div>                        <div class="bottom-middle"></div>                        <div class="bottom-right"></div>                    </div>                </div>            </div>            <div style="clear: both"></div>        </div>    	<div class="happen-box article">	    <!-- title -->	    <h1>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h1>	    <!-- subtitle -->	    	    	    <div class="happen-content article-content">	    	        <div class="on-page">	            		        		        		        <span class="title" style="display:none">このページでは</span>		        <div id="onthispage" class="onthispage" style="display:none">		        </div>	        </div>	    	        <!-- author and date -->	        <div class="text">	            <span class="author">プレスリリース - 2017-06-28</span>				<!-- leader -->				<div class="leader"><div>	国際環境NGOグリーンピース・ジャパン（東京都新宿区、以下グリーンピース）は、本日6月28日、スマホなどIT製品の修理のしやすさを評価した「修理しやすい製品ガイド」（注1）を発表しました。</div></div>	        	        	        <!-- body -->[metatags_descriptionx]<!-- download link -->[metatags_descriptionx]	        <!-- topics -->	            <div class="tags">        <strong class="title">トピックス</strong>        <ul>            <li>[hrefx][hrefx]</li>        </ul>    </div>	        	        <!-- tags -->	            <div class="tags">        <strong class="title">タグ</strong>        <ul>            <li>[hrefx][hrefx],</li>            <li>[hrefx][hrefx],</li>            <li>[hrefx][hrefx]</li>        </ul>    </div>	                		    </div>	    	</div>	<div class="paginator pager">		<a id="ctl00_cphContentArea_hlNextEntry" title="次へ" class="next" href="/japan/ja/news/press/2017/pr201706231/">次へ</a>  	    <a id="ctl00_cphContentArea_hlPrevEntry" title="前へ" class="prev" href="/japan/ja/news/press/2017/pr20170630/">前へ</a>	</div>							<!-- comments -->					 					            </div>                            <!-- sidebar start -->                <div id="sidebar">                        <div class="h-openspaces">	<!--Planet3 のバグで余計なタグ　<p>&nbsp;</p>　が自動的に入り余分なスペースが出来てしまうので、必ず全て消してから「Update」ボタンを押してください--><p>&nbsp;</p><p><iframe frameborder="0" height="305" name="wantedly_project_widget_106524" scrolling="no" src="https://www.wantedly.com/projects/106524/widget" style="border: none; max-width: 100%; min-width: 240px; width: 540px;" width="320"></iframe></p><p>　</p><p>[hrefx][hrefx]</p><p>　</p><p>[hrefx][hrefx]</p><p>　</p><!--//shirubeku--><p>[hrefx][hrefx]</p><!--SNS buttons--><ul class="social_btn_ref"><li class="twitter">[hrefx][hrefx]</li><li class="facebook">[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="youtube">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="pinterest">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="ustream">[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li class="rss">[hrefx][hrefx]</li></ul><!--//SNS buttons--><ul id="action_jp"><li class="donate">[hrefx][hrefx]</li><li class="volunteer">[hrefx][hrefx]</li><li class="magazine">[hrefx][hrefx]</li><li class="event">[hrefx][hrefx]</li></ul><p>&nbsp;</p><!--<p class="dblog">[hrefx][hrefx]</p>--><p>&nbsp;</p><!--latest--><p></p><div class="csn listings items multy-border">    <input class="hidAjaxInput" type="hidden" value="pid=493553&amp;ti=最新アップデート&amp;s=0&amp;te=0&amp;f=1&amp;mi=5&amp;mt=&amp;mu=&amp;ct=11111111111110" />    <h3>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h3>                          <div class="">            <ul>                    <li class="flexible-height">    <a title="「地域の宝探しを支援する」国際協力" href="/japan/ja/news/blog/staff/blog/60006/">            <span>	            <img title="「地域の宝探しを支援する」国際協力" src="/japan/community_images/92/187492/137631_246378.jpg" alt="「地域の宝探しを支援する」国際協力" style="border-width:0px;" /> 		        	        </span>	    「地域の宝探しを支援する」国際協力</a>	            <p class="contenttype">ブログ</p>    </li>                    <li class="flexible-height">    <a title="できることなんて何もないじゃないか！と絶望している人へ" href="/japan/ja/news/blog/staff/blog/60004/">            <span>	            <img title="できることなんて何もないじゃないか！と絶望している人へ" src="/japan/community_images/92/187492/137619_246351.jpg" alt="できることなんて何もないじゃないか！と絶望している人へ" style="border-width:0px;" /> 		        	        </span>	    できることなんて何もないじゃないか！と絶望している人へ</a>	            <p class="contenttype">ブログ</p>    </li>                    <li class="flexible-height">    <a title="広島デーによせて。核兵器禁止条約採択をいつか、心から喜びたい" href="/japan/ja/news/blog/dblog/blog/59966/">            <span>	            <img title="広島デーによせて。核兵器禁止条約採択をいつか、心から喜びたい" src="/japan/community_images/67/406067/137485_246037.jpg" alt="広島デーによせて。核兵器禁止条約採択をいつか、心から喜びたい" style="border-width:0px;" /> 		        	        </span>	    広島デーによせて。核兵器禁止条約採択をいつか、心から喜びたい</a>	            <p class="contenttype">ブログ</p>    </li>                    <li class="flexible-height">    <a title="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告後篇" href="/japan/ja/news/blog/staff/-/blog/59962/">            <span>	            <img title="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告後篇" src="/japan/community_images/92/187492/137429_245911.jpg" alt="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告後篇" style="border-width:0px;" /> 		        	        </span>	    韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告後篇</a>	            <p class="contenttype">ブログ</p>    </li>                    <li class="flexible-height">    <a title="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告前篇" href="/japan/ja/news/blog/staff/-/blog/59961/">            <span>	            <img title="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告前篇" src="/japan/community_images/92/187492/137450_245953.jpg" alt="韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告前篇" style="border-width:0px;" /> 		        	        </span>	    韓国の脱原発は市民の行動の成果--「韓国もエネルギーシフト　現地からの報告」報告前篇</a>	            <p class="contenttype">ブログ</p>    </li>                    </ul>            </div>                </div><!-- END DYNAMIC CONTENT --><p>&nbsp;</p><!--//latest--><p>&nbsp;</p><!--twitter--><div>		<!--twitter--><div class="twitter"><script type="text/javascript" src="http://widgets.twimg.com/j/2/widget.js"></script><script type="text/javascript">// <![CDATA[// <![CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[// [CDATA[new TWTR.Widget({  version: 2,  type: 'profile',  rpp: 4,  interval: 6000,  width: 250,  height: 300,  theme: {    shell: {      background: '#66cc00',      color: '#003300'    },    tweets: {      background: '#ffffff',      color: '#003300',      links: '#100dba'    }  },  features: {    scrollbar: true,    loop: false,    live: false,    hashtags: true,    timestamp: true,    avatars: false,    behavior: 'all'  }}).render().setUser('gpjTweet').start();// <![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;// <![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[<![CDATA[]]// --&gt;<![CDATA[// ]]></script></div><!--end of twitter-->	</div><!--//twitter--><p>&nbsp;</p><!--menu--><p><!-- START DYNAMIC CONTENT --></p><p></p><ul class="accordion">    <li>        <a id="ctl00_cphSideBar_Sidebar_InheritedSidebar_ctl00_ctl18_hlTopParent" title="NEWS" href="/japan/ja/news/">NEWS</a>                    <ul>                        <li>[hrefx][hrefx]                                    </li>                        <li>[hrefx][hrefx]                                    </li>                        <li>[hrefx][hrefx]                                    </li>                        <li>[hrefx][hrefx]                                    </li>                    </ul>            </li></ul><p><!-- END DYNAMIC CONTENT --></p><!--//menu--><p><span style="border-radius: 2px; text-indent: 20px; width: auto; padding: 0px 4px 0px 0px; text-align: center; font: bold 11px/20px &#39;Helvetica Neue&#39;,Helvetica,sans-serif; color: #ffffff; background: url(&#39;data:image/svg+xml;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzBweCIgd2lkdGg9IjMwcHgiIHZpZXdCb3g9Ii0xIC0xIDMxIDMxIj48Zz48cGF0aCBkPSJNMjkuNDQ5LDE0LjY2MiBDMjkuNDQ5LDIyLjcyMiAyMi44NjgsMjkuMjU2IDE0Ljc1LDI5LjI1NiBDNi42MzIsMjkuMjU2IDAuMDUxLDIyLjcyMiAwLjA1MSwxNC42NjIgQzAuMDUxLDYuNjAxIDYuNjMyLDAuMDY3IDE0Ljc1LDAuMDY3IEMyMi44NjgsMC4wNjcgMjkuNDQ5LDYuNjAxIDI5LjQ0OSwxNC42NjIiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2ZmZiIgc3Ryb2tlLXdpZHRoPSIxIj48L3BhdGg+PHBhdGggZD0iTTE0LjczMywxLjY4NiBDNy41MTYsMS42ODYgMS42NjUsNy40OTUgMS42NjUsMTQuNjYyIEMxLjY2NSwyMC4xNTkgNS4xMDksMjQuODU0IDkuOTcsMjYuNzQ0IEM5Ljg1NiwyNS43MTggOS43NTMsMjQuMTQzIDEwLjAxNiwyMy4wMjIgQzEwLjI1MywyMi4wMSAxMS41NDgsMTYuNTcyIDExLjU0OCwxNi41NzIgQzExLjU0OCwxNi41NzIgMTEuMTU3LDE1Ljc5NSAxMS4xNTcsMTQuNjQ2IEMxMS4xNTcsMTIuODQyIDEyLjIxMSwxMS40OTUgMTMuNTIyLDExLjQ5NSBDMTQuNjM3LDExLjQ5NSAxNS4xNzUsMTIuMzI2IDE1LjE3NSwxMy4zMjMgQzE1LjE3NSwxNC40MzYgMTQuNDYyLDE2LjEgMTQuMDkzLDE3LjY0MyBDMTMuNzg1LDE4LjkzNSAxNC43NDUsMTkuOTg4IDE2LjAyOCwxOS45ODggQzE4LjM1MSwxOS45ODggMjAuMTM2LDE3LjU1NiAyMC4xMzYsMTQuMDQ2IEMyMC4xMzYsMTAuOTM5IDE3Ljg4OCw4Ljc2NyAxNC42NzgsOC43NjcgQzEwLjk1OSw4Ljc2NyA4Ljc3NywxMS41MzYgOC43NzcsMTQuMzk4IEM4Ljc3NywxNS41MTMgOS4yMSwxNi43MDkgOS43NDksMTcuMzU5IEM5Ljg1NiwxNy40ODggOS44NzIsMTcuNiA5Ljg0LDE3LjczMSBDOS43NDEsMTguMTQxIDkuNTIsMTkuMDIzIDkuNDc3LDE5LjIwMyBDOS40MiwxOS40NCA5LjI4OCwxOS40OTEgOS4wNCwxOS4zNzYgQzcuNDA4LDE4LjYyMiA2LjM4NywxNi4yNTIgNi4zODcsMTQuMzQ5IEM2LjM4NywxMC4yNTYgOS4zODMsNi40OTcgMTUuMDIyLDYuNDk3IEMxOS41NTUsNi40OTcgMjMuMDc4LDkuNzA1IDIzLjA3OCwxMy45OTEgQzIzLjA3OCwxOC40NjMgMjAuMjM5LDIyLjA2MiAxNi4yOTcsMjIuMDYyIEMxNC45NzMsMjIuMDYyIDEzLjcyOCwyMS4zNzkgMTMuMzAyLDIwLjU3MiBDMTMuMzAyLDIwLjU3MiAxMi42NDcsMjMuMDUgMTIuNDg4LDIzLjY1NyBDMTIuMTkzLDI0Ljc4NCAxMS4zOTYsMjYuMTk2IDEwLjg2MywyNy4wNTggQzEyLjA4NiwyNy40MzQgMTMuMzg2LDI3LjYzNyAxNC43MzMsMjcuNjM3IEMyMS45NSwyNy42MzcgMjcuODAxLDIxLjgyOCAyNy44MDEsMTQuNjYyIEMyNy44MDEsNy40OTUgMjEuOTUsMS42ODYgMTQuNzMzLDEuNjg2IiBmaWxsPSIjYmQwODFjIj48L3BhdGg+PC9nPjwvc3ZnPg==&#39;) no-repeat scroll 3px 50% / 14px 14px #bd081c; position: absolute; opacity: 1; z-index: 8675309; display: none; cursor: pointer;">保存</span></p><p><span style="border-radius: 2px; text-indent: 20px; width: auto; padding: 0px 4px 0px 0px; text-align: center; font: bold 11px/20px &#39;Helvetica Neue&#39;,Helvetica,sans-serif; color: #ffffff; background: url(&#39;data:image/svg+xml;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzBweCIgd2lkdGg9IjMwcHgiIHZpZXdCb3g9Ii0xIC0xIDMxIDMxIj48Zz48cGF0aCBkPSJNMjkuNDQ5LDE0LjY2MiBDMjkuNDQ5LDIyLjcyMiAyMi44NjgsMjkuMjU2IDE0Ljc1LDI5LjI1NiBDNi42MzIsMjkuMjU2IDAuMDUxLDIyLjcyMiAwLjA1MSwxNC42NjIgQzAuMDUxLDYuNjAxIDYuNjMyLDAuMDY3IDE0Ljc1LDAuMDY3IEMyMi44NjgsMC4wNjcgMjkuNDQ5LDYuNjAxIDI5LjQ0OSwxNC42NjIiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2ZmZiIgc3Ryb2tlLXdpZHRoPSIxIj48L3BhdGg+PHBhdGggZD0iTTE0LjczMywxLjY4NiBDNy41MTYsMS42ODYgMS42NjUsNy40OTUgMS42NjUsMTQuNjYyIEMxLjY2NSwyMC4xNTkgNS4xMDksMjQuODU0IDkuOTcsMjYuNzQ0IEM5Ljg1NiwyNS43MTggOS43NTMsMjQuMTQzIDEwLjAxNiwyMy4wMjIgQzEwLjI1MywyMi4wMSAxMS41NDgsMTYuNTcyIDExLjU0OCwxNi41NzIgQzExLjU0OCwxNi41NzIgMTEuMTU3LDE1Ljc5NSAxMS4xNTcsMTQuNjQ2IEMxMS4xNTcsMTIuODQyIDEyLjIxMSwxMS40OTUgMTMuNTIyLDExLjQ5NSBDMTQuNjM3LDExLjQ5NSAxNS4xNzUsMTIuMzI2IDE1LjE3NSwxMy4zMjMgQzE1LjE3NSwxNC40MzYgMTQuNDYyLDE2LjEgMTQuMDkzLDE3LjY0MyBDMTMuNzg1LDE4LjkzNSAxNC43NDUsMTkuOTg4IDE2LjAyOCwxOS45ODggQzE4LjM1MSwxOS45ODggMjAuMTM2LDE3LjU1NiAyMC4xMzYsMTQuMDQ2IEMyMC4xMzYsMTAuOTM5IDE3Ljg4OCw4Ljc2NyAxNC42NzgsOC43NjcgQzEwLjk1OSw4Ljc2NyA4Ljc3NywxMS41MzYgOC43NzcsMTQuMzk4IEM4Ljc3NywxNS41MTMgOS4yMSwxNi43MDkgOS43NDksMTcuMzU5IEM5Ljg1NiwxNy40ODggOS44NzIsMTcuNiA5Ljg0LDE3LjczMSBDOS43NDEsMTguMTQxIDkuNTIsMTkuMDIzIDkuNDc3LDE5LjIwMyBDOS40MiwxOS40NCA5LjI4OCwxOS40OTEgOS4wNCwxOS4zNzYgQzcuNDA4LDE4LjYyMiA2LjM4NywxNi4yNTIgNi4zODcsMTQuMzQ5IEM2LjM4NywxMC4yNTYgOS4zODMsNi40OTcgMTUuMDIyLDYuNDk3IEMxOS41NTUsNi40OTcgMjMuMDc4LDkuNzA1IDIzLjA3OCwxMy45OTEgQzIzLjA3OCwxOC40NjMgMjAuMjM5LDIyLjA2MiAxNi4yOTcsMjIuMDYyIEMxNC45NzMsMjIuMDYyIDEzLjcyOCwyMS4zNzkgMTMuMzAyLDIwLjU3MiBDMTMuMzAyLDIwLjU3MiAxMi42NDcsMjMuMDUgMTIuNDg4LDIzLjY1NyBDMTIuMTkzLDI0Ljc4NCAxMS4zOTYsMjYuMTk2IDEwLjg2MywyNy4wNTggQzEyLjA4NiwyNy40MzQgMTMuMzg2LDI3LjYzNyAxNC43MzMsMjcuNjM3IEMyMS45NSwyNy42MzcgMjcuODAxLDIxLjgyOCAyNy44MDEsMTQuNjYyIEMyNy44MDEsNy40OTUgMjEuOTUsMS42ODYgMTQuNzMzLDEuNjg2IiBmaWxsPSIjYmQwODFjIj48L3BhdGg+PC9nPjwvc3ZnPg==&#39;) no-repeat scroll 3px 50% / 14px 14px #bd081c; position: absolute; opacity: 1; z-index: 8675309; display: none; cursor: pointer;">保存</span></p></div>                </div>                <!-- sidebar end -->                    </div>    </div>    <!-- Wrapper end -->    </div>    <!-- Page end -->    <!-- footer start -->    <div class="pin-footer-to-bottom-page">        <div class="footer-holder"><div class="page"><div class="w1"><div class="w2"><div id="footer"><ul class="events"><!--li>[hrefx][hrefx]</span> </li><li>[hrefx][hrefx]</span> </li><li>[hrefx][hrefx]</span> </li><li>[hrefx][hrefx]</span> </li--></ul><div class="footer-content"><ul><li><h4>グリーンピースの活動</h4><ul><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li></ul></li><li><h4>グリーンピースについて</h4><ul><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li></ul></li><li><h4>ソーシャルメディア<br />RSS</h4><ul class="footer_sns"><li class="icon_twitter">[hrefx][hrefx]</li><li class="icon_facebook">[hrefx][hrefx]</li><li class="icon_youtube">[hrefx][hrefx]</li><li class="icon_ustream">[hrefx][hrefx]</li><li class="icon_rss"><a title="RSS" href="/japan/ja/rss/gpj/116/" target="_blank">rss</a></li></ul></li><li><h4>National and regional<br />websites in English</h4><ul><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]</li></ul></li><li class="visit-us"><div class="intpage"><ul><li>[hrefx][hrefx]</li></ul></div></li></ul><div class="facts-box"><strong>グリーンピース早わかり</strong><div class="col"><ul><li>1971年活動開始</li><li>船3隻</li><li>世界40か国に事務所</li><li>サポーターは世界中に</li></ul><a title="donate" href="/japan/ja/donate/">あなたも今すぐ世界のサポーターの仲間に！&nbsp;&gt;&gt;</a></div><div class="col"><ul class="boat"><li><span>虹の戦士号（Rainbow Warrior）</span>帆船・2011年就航</li><li><span>アークティック・サンライズ号<br />（Arctic Sunrise）</span>砕氷船・1997年就航</li><li><span>エスペランサ号（Esperanza)</span>「希望」という意味・2002年就航</li></ul></div></div></div><div class="copy-box"><p><span>©</span>&nbsp;<strong>GREENPEACE</strong>&nbsp;&nbsp;<span>2011-2016</span></p><ul class="privacy"><li>[hrefx][hrefx]</li><li><a title="copyright policy" href="/japan/ja/info/copyright/">著作権について</a></li></ul><ul class="bottom-menu"><li>[hrefx][hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx][hrefx][hrefx]</li><li>[hrefx][hrefx]</li></ul></div></div></div></div></div></div>    </div>    <!-- footer end -->    <input type="hidden" name="ctl00$hidCurrentPageID" id="ctl00_hidCurrentPageID" value="493553" />    <span class="javascript-enabled hide">        <input type="hidden" name="ctl00$hidJavascriptEnabled" id="ctl00_hidJavascriptEnabled" value="0" />    </span>    <input type="hidden" name="ctl00$hidDomainsEnabledForGoogleAnalytics" id="ctl00_hidDomainsEnabledForGoogleAnalytics" />     </form>    <script type='text/javascript'>// <![CDATA[// <![CDATA[/* [CDATA[ */var google_conversion_id = 1015956239;var google_conversion_language = "en";var google_conversion_format = "3";var google_conversion_color = "666666";var google_conversion_label = "GQe9CJm6tAIQj4a55AM";var google_conversion_value = 0;/* ]] */// --&gt;// <![CDATA[// ]]><!-- Google Tag Manager --><noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-PTQSTF"height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src='//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);})(window,document,'script','dataLayer','GTM-PTQSTF');ga('create', 'UA-XXXXXXXX-X', 'auto', {'allowLinker': true});ga('require', 'linker');ga('linker:autoLink', ['aaa.jp','bbb.com']);ga('send', 'pageview');</script><!-- End Google Tag Manager -->    </body></html>