<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" lang="jp"> <head>   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   <meta http-equiv="X-UA-Compatible" content="IE=edge" />   <meta http-equiv="Content-Language" content="ja" />   <meta http-equiv="Content-Script-Type" content="text/javascript" />   <meta http-equiv="Content-Style-Type" content="text/css" />   <meta name="copyright" content="Copyright JIJI PRESSLTD Ltd. All Rights Reserved." />   <meta name="keywords" content="[metatags_keywords]" />   <meta name="description" content="[metatags_description]" />   <meta name="title" content="[metatags_title]" />   <meta name="robots" content="noarchive" />   <meta name="mixi-check-robots" content="noimage" />   <meta property="twitter:account_id" content="4503599627439296" />   <meta name="twitter:site" content="@jijicom" />   <meta name="twitter:card" content="summary" />   <meta name="twitter:title" content="[metatags_title]" />   <meta name="twitter:description" content="[metatags_description]" />   <meta name="twitter:image" content="http://www.jiji.com/img/sns-logo.jpg?20160406" />   <meta name="twitter:url" content="http://www.jiji.com/jc/article?k=2017072800822&amp;g=prk" />   <meta property="og:title" content="[metatags_title]" />   <meta property="og:description" content="[metatags_description]" />   <meta property="og:url" content="http://www.jiji.com/jc/article?k=2017072800822&amp;g=prk" />   <meta name="viewport" content="width=1100, minimum-scale=0.1" />   <title>[metatags_title]</title>   <link href="/news2/common/css/html5reset-1.6.1.css" type="text/css" rel="stylesheet" />   <!--&#91;if lt IE 9&#93;> <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script> <!&#91;endif&#93;-->   <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>   <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>   <script src="/news2/common/js/article.js"></script>   <!--タブ切替-->   <script src="/news2/common/js/tabs.js"></script>   <!--タブ切替-->   <!--タブリスト-->   <script src="/news2/common/js/tablist.js"></script>   <!--タブリスト-->   <!--ヘッダー-->   <script src="/news2/common/js/header.js"></script>   <!--ヘッダー-->   <!--webフォント-->   <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css" />   <!--webフォント-->   <!--フェードイン-->   <script src="/news2/common/js/fadein.js"></script>   <!--フェードイン-->   <!--cookie-->   <script src="/news/common/js/jquery.cookie.js" type="text/javascript"></script>   <!--jc_common_1-->   <script src="/news2/common/js/jc_common_1.js" type="text/javascript"></script>   <link media="all, projection, print" href="/news2/common/css/common.css" type="text/css" rel="stylesheet" />   <link rel="stylesheet" href="/news2/common/css/switch.css" type="text/css" />   <!-- Cxense script begin -->   <meta name="cXenseParse:jij-articletype" content="article" />   <meta name="cXenseParse:jij-genre" content="int" />   <meta name="cXenseParse:recs:publishtime" content="2017-07-28T14:59:00+09:00" />   <meta property="article:modified_time" content="2017-07-28T14:59:00+09:00" />   <meta name="cXenseParse:jij-title" content="北朝鮮核施設、待機状態か＝新たな活動ほぼなし－米研究所" />   <script type="text/javascript"> 	var cX = cX || {}; cX.callQueue = cX.callQueue || []; 	cX.callQueue.push(['setSiteId', '1140702777523767808']);  	var strTitle = (function() {/*北朝鮮核施設、待機状態か＝新たな活動ほぼなし－米研究所*/}).toString().replace(/\n|\r/g,'').split('*')[1];  	cX.callQueue.push(['setCustomParameters',{'title':strTitle}]);  	cX.callQueue.push(['setCustomParameters', {'traffic':'pc'}]); 	cX.callQueue.push(['invoke', function() { 	    if (!cX.getUserId(false)){ 			cX.setCustomParameters({'newuser':'true'}); 			cX.startSessionAnnotation({'newusersession': 'true'});         }  		var urlArgs = cX.parseUrlArgs(); 		var path = location.pathname; 		var channel; 		if ((path == "/") || (path == "/index.html") || (path == "/office.html")){ 			channel = "home"; 		}else if(path.indexOf("jc") > -1){ 			channel = path.replace("/jc/", ""); 			if ((channel == "c") || (channel == "list") || (channel == "article")){ 				if (urlArgs.g){ 					channel = channel + ":" + urlArgs.g; 				} 			} 		}else{ 			channel = "other"; 		} 		cX.setCustomParameters({'jijicom-section': channel});  		if (urlArgs.a){cX.setCustomParameters({'jijicom-a': urlArgs.a});} 		if (urlArgs.c){cX.setCustomParameters({'jijicom-c': urlArgs.c});} 		if (urlArgs.cid){cX.setCustomParameters({'jijicom-cid': urlArgs.cid});} 		if (urlArgs.city){cX.setCustomParameters({'jijicom-city': urlArgs.city});} 		if (urlArgs.content){cX.setCustomParameters({'jijicom-content': urlArgs.content});} 		if (urlArgs.d){cX.setCustomParameters({'jijicom-d': urlArgs.d});} 		if (urlArgs.e){cX.setCustomParameters({'jijicom-e': urlArgs.e});} 		if (urlArgs.f){cX.setCustomParameters({'jijicom-f': urlArgs.f});} 		if (urlArgs.g){cX.setCustomParameters({'jijicom-g': urlArgs.g});} 		if (urlArgs.id){ 			var value = urlArgs.id; 			if (channel == "v2"){ 				if (value.match(/_[0-9]{2}photo$/)) { 					value = value.replace(/_[0-9]{2}photo$/,""); 				} 				if (value.match(/_[0-9]{2}$/)) { 					value = value.replace(/_[0-9]{2}$/,""); 				} 			}else if (channel == "v4") { 				if (value.match(/[0-9]{4}$/)) { 					value = value.replace(/[0-9]{4}$/,""); 				} 			}else if ((channel == "v6") || (channel == "car")){ 				if (value.match(/[0-9]{2}$/)) { 					value = value.replace(/[0-9]{2}$/,""); 				} 			} 			cX.setCustomParameters({'jijicom-id': value}); 		} 		if (urlArgs.k){cX.setCustomParameters({'jijicom-k': urlArgs.k});} 		if (urlArgs.key){cX.setCustomParameters({'jijicom-key': urlArgs.key});} 		if (urlArgs.l){cX.setCustomParameters({'jijicom-l': urlArgs.l});} 		if (urlArgs.m){cX.setCustomParameters({'jijicom-m': urlArgs.m});} 		if (urlArgs.mode){cX.setCustomParameters({'jijicom-mode': urlArgs.mode});} 		if (urlArgs.p){ 			if ((channel == "d2") || (channel == "d4") || (channel == "d5") || (channel == "d6")){ 				if (urlArgs.p.split('-')[0]){ 					cX.setCustomParameters({'jijicom-p': urlArgs.p.split('-')[0]}); 				} 			}else{ 				cX.setCustomParameters({'jijicom-p': urlArgs.p}); 			}         } 		if (urlArgs.pic){cX.setCustomParameters({'jijicom-pic': urlArgs.pic});} 		if (urlArgs.pl){cX.setCustomParameters({'jijicom-pl': urlArgs.pl});} 		if (urlArgs.place){cX.setCustomParameters({'jijicom-place': urlArgs.place});} 		if (urlArgs.rel){cX.setCustomParameters({'jijicom-rel': urlArgs.rel});} 		if (urlArgs.rid){cX.setCustomParameters({'jijicom-rid': urlArgs.rid});} 		cX.setCustomParameters({'jijicom-style':'normal'}); 	}]); 	cX.callQueue.push(['sendPageViewEvent']); </script>   <script type="text/javascript"> (function(d,s,e,t){e=d.createElement(s);e.type='text/java'+s;e.async='async'; e.src='http'+('https:'===location.protocol?'s://s':'://')+'cdn.cxense.com/cx.js'; t=d.getElementsByTagName(s)[0];t.parentNode.insertBefore(e,t);})(document,'script'); </script>   <!-- Cxense script end -->   <!-- Cxense click area begin -->   <script type="text/javascript">   var cxClickAreaSend = (function() {     var _instance;     function _init(eventHandler, siteId, origin, persistedId) {       try {         if (typeof window.localStorage === 'object'  typeof window.localStorage.getItem === 'function') {           var keyName = "cx_clickedarea";           var clickedArea = JSON.parse(localStorage.getItem(keyName));           if (clickedArea) {             localStorage.removeItem(keyName);             var lastClicked = clickedArea["time"] || 0;             var now = Math.round(new Date().getTime() / 1000);             if( isFinite(lastClicked)  lastClicked  now (lastClicked > now - 30*60)) {               eventHandler(clickedArea["area"] || "none", siteId, origin, persistedId);             }           }         }       } catch (e) {}     };     return {       init: function(eventHandler, siteId, origin, persistedId) {         if (!_instance) {           _instance = _init(eventHandler, siteId, origin, persistedId);         }         return _instance;       }     };   })();   var cX = cX || {}; cX.callQueue = cX.callQueue || [];   function cxSendClicked(area, siteId, origin, persistedId) {     var title = document.title.substr(0,20);     cX.setSiteId(siteId);     cX.sendEvent('exit', {area: area, title: title},{origin: origin, persistedQueryId: persistedId});   };   cX.callQueue.push(['invoke', function() {     var cxSiteId = '1140702777523767808';     var cxOrigin = 'jij-web';     var cxPersisted = 'a9523e759c0595691bec39d42f86b5e4fe61aa9e';     cxClickAreaSend.init(cxSendClicked, cxSiteId, cxOrigin, cxPersisted);   }]); </script>   <script type="text/javascript">  //Adslot 8 declaration gptadslots[8]= googletag.defineSlot('/60445660/www/int/billboard2', [[1,1],[970,250]],'int-7').addService(googletag.pubads());  //Adslot 1 declaration gptadslots[1]= googletag.defineSlot('/60445660/www/int/1stRec', [[300, 250], [300, 500], [300, 600]],'int-0').addService(googletag.pubads());  //Adslot 3 declaration gptadslots[3]= googletag.defineSlot('/60445660/www/int/2ndRec',[300, 250],'int-2').addService(googletag.pubads());  //Adslot 4 declaration gptadslots[4]= googletag.defineSlot('/60445660/www/int/3rdRec', [300, 250],'int-3').addService(googletag.pubads());  //Adslot 5 declaration gptadslots[5]= googletag.defineSlot('/60445660/www/int/Fbc', [[490, 160], [640, 360], [680, 360],[300, 250]],'int-4').addService(googletag.pubads());  //Adslot 6 declaration gptadslots[6]= googletag.defineSlot('/60445660/www/int/Rakuten',[[660, 200], [680, 200],[680, 360],[660, 280],[300, 250]],'int-5').addService(googletag.pubads());  //Adslot 7 declaration gptadslots[7]= googletag.defineSlot('/60445660/www/int/Spb',[728, 90],'int-6').addService(googletag.pubads());  //Adslot 9 declaration gptadslots[9] = googletag.defineSlot('/60445660/www/int/title', [[640, 70], [680, 70]], 'int-8').addService(googletag.pubads());  //Adslot 10 declaration gptadslots[10] = googletag.defineSlot('/60445660/www/int/UA_1', [[680, 280], [300, 250], [336, 280], [250, 250]], 'int-9').addService(googletag.pubads());  //Adslot 11 declaration gptadslots[11] = googletag.defineSlot('/60445660/www/int/furusato_1', [[320, 50],[320, 80],[320, 100]], 'int-10').addService(googletag.pubads()).setCollapseEmptyDiv(true);    googletag.pubads().enableSingleRequest();   googletag.pubads().enableSyncRendering();   googletag.enableServices();  </script>   <!-- Google Advertisement header end -->   <!-- Google Advertisement header end -->   <link rel="amphtml" href="/jc/amp?k=2017072800822" />   <meta content="2017-07-28T14:59:00+09:00" itemprop="datePublished" name="pubdate" />   <meta content="int" itemprop="outbrain:category" name="outbrain:category" />   <link rel="stylesheet" href="/news2/common/css/loading.css" type="text/css" />   <link rel="stylesheet" href="/news2/common/css/article.css" type="text/css" />   <script src="/news2/common/js/jquery.inview.js"></script>  </head>  <body>   <!-- Beginning Sync AdSlot 7 for Ad unit www/int/billboard2 ### size: [[970,250]]  -->   <div id="int-7" style="text-align: center">    <script type="text/javascript"> 	googletag.cmd.push(function() { googletag.display('int-7'); }); 	</script>   </div>   <!-- End AdSlot 7 -->   <!-- header start -->   <header id="PageHeader">    <nav class="Gnav">     <div id="GnavInner">      <div class="MainNav">       <ul id="dropdownmenu" class="Nav clearfix">        <li id="NavHome">[hrefx]</li>        <li id="NavSport">[hrefx]</li>        <li id="NavPhoto">[hrefx]</li>        <li id="NavFeature">[hrefx]</li>        <li id="NavEntertainment">[hrefx]</li>        <li id="NavArea">[hrefx]</li>        <li id="NavLife">[hrefx]</li>        <li id="Navmedi">[hrefx]</li>       </ul>      </div>      <!--サブメニュー-->      <div id="sub_NavHome" class="SubDropdown">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavSport" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavPhoto" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavFeature" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavEntertainment" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavArea" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_NavLife" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <div id="sub_Navmedi" class="SubDropdown" style="display: none;">       <ul class="clearfix">        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>        <li>[hrefx]</li>       </ul>      </div>      <!--サブメニュー-->     </div>    </nav>    <div id="PageHeaderInner">     <div class="SiteLogo">      [hrefx]     </div>     <div id="SuperBanner">      <!-- Google Advertisement Spb start -->      <!-- www/int/Spb -->      <div id="int-6" style="width:728px; height:90px;">       <script type="text/javascript"> 			googletag.cmd.push(function() { googletag.display('int-6'); }); 			</script>      </div>      <!-- Google Advertisement Spb end -->     </div>     <div id="Weather">      <table cellspacing="0" cellpadding="0" border="0">       <tbody>        <tr>         <th>2017</th>        </tr>        <tr>         <td>7月28日（金）</td>        </tr>       </tbody>      </table>      <!-- Weather parts -->      <!-- Weather parts -->      <!--<div class="WeatherInner clearfix">             	<span class="WeatherIcon">[hrefx]</span>                 <div class="WeatherDate">                 	<p class="WeatherArea">[hrefx]</p>                     <p class="WeatherTemperature">                     	<span class="TemperatureHigh">23℃</span> / <span class="TemperatureLow">20℃</span>                     </p>                     <p class="WeatherPrecipitation">降水確率：100%</p>                 </div>             </div>-->     </div>    </div>   </header>   <!-- header end -->   <div id="Contents">    <div class="clearfix" id="ContentsInner">     <!--teads start-->     <script src="//a.teads.tv/page/63067/tag" async="true"></script>     <!--teads end-->     <!--フォントサイズ-->     <script src="/news2/common/js/textresizer.js" charset="utf-8"></script>     <!--フォントサイズ-->     <div id="Main">      <!--ぱんくず-->      <div class="BreadCrumbs clearfix">       <p>[hrefx]</p>       <span>&gt;</span>       <p>[hrefx]</p>       <span>&gt;</span>       <p>北朝鮮核施設、待機状態か＝新たな活動ほぼなし－米研究所</p>      </div>      <div class="Rectangle3 clearfix" align="center">       <!-- /60445660/www/int/furusato_1 -->       <div id="int-10">        <script> 				googletag.cmd.push(function() { googletag.display('int-10'); }); 			</script>       </div>      </div>      <!--ぱんくず-->      <div class="MainInner Individual">       <div class="SnsBtn">        <ul class="clearfix">         <li> [hrefx] </li>         <li> [hrefx] </li>         <li>[hrefx]</li>        </ul>       </div>       <div class="ArticleTitleButton">        <ul class="clearfix">         <li class="small">小</li>         <li class="middle current">中</li>         <li class="large">大</li>        </ul>       </div>       <!-- google_ad_section_start(name=s1) -->       <!-- cxenseparse_start -->       <div class="ArticleTitle">        <h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1>       </div>       <!--テキストAD-->       <!--cx widget end-->       <script src="/news2/common/js/relation.js" type="text/javascript"></script>       <aside class="RelationBox Pattern1">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="RelationListMain">         <ul class="LinkList">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </aside>       <div class="OUTBRAIN" data-src="DROP_PERMALINK_HERE" data-widget-id="AR_3" data-ob-template="jiji.com"></div>       <div class="OUTBRAIN" data-src="DROP_PERMALINK_HERE" data-widget-id="AR_4" data-ob-template="jiji.com"></div>       <script type="text/javascript" async="async" src="//widgets.outbrain.com/outbrain.js"></script>       <!-- おすすめ -->       <section class="RecommendUnderlayer">        <div class="Title clearfix">         <p>特集</p>        </div>        <div class="RecommendUnderlayerInner">         [imagex]         <ul>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>         </ul>        </div>       </section>       <!-- 用語 -->       <!-- Yougo Start -->       <div class="BottomArticleList">        <div class="TitleBorder clearfix">         <p>国際用語</p>        </div>        <div class="RelationWord">         <ul>          <li>[hrefx]<span>(07/22 06:39)</span></li>          <!--			<li>[hrefx]<span>(11/13 06:02)</span></li> 			<li>[hrefx]<span>(11/13 06:02)</span></li> 			<li>[hrefx]<span>(11/13 06:02)</span></li> 			<li>[hrefx]<span>(11/13 06:02)</span></li> 			<li>[hrefx]<span>(11/13 06:02)</span></li> 			<li>[hrefx]<span>(11/13 06:02)</span></li> -->         </ul>        </div>       </div>       <!-- Yougo End -->       <div class="RakutenAd">        <!-- Google Advertisement Rakuten start -->        <!-- www/int/Rakuten -->        <div id="int-5">         <script type="text/javascript"> 			googletag.cmd.push(function() { googletag.display('int-5'); }); 		</script>        </div>        <!-- Google Advertisement Rakuten end -->       </div>       <div id="Target" class="BottomArticleList">        <div class="TitleBorder clearfix">         <p>国際</p>        </div>        <div class="ArticleListMain clearfix">         <ul class="LinkList">          <li class="ThumbList">[hrefx]</li>          <div id="TitleList2"></div>          <div id="more2">           <div class="l_contain" style="margin-top: 15px;">            <div class="loader"></div>           </div>          </div>          <script>viewThumList(2);</script>         </ul>         <div class="LinkListMore">          [hrefx]         </div>        </div>       </div>       <div id="Target" class="BottomArticleList">        <div class="TitleBorder clearfix">         <p>ウォール・ストリート・ジャーナル</p>        </div>        <div class="ArticleListMain clearfix">         <ul class="LinkList">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>         <div class="LinkListMore">          [hrefx]         </div>        </div>       </div>       <!-- popIn script start-->       <script type="text/javascript" charset="UTF-8"> 	<!-- 	var _popIn_js = "https://api.popin.cc/searchbox/jiji.js"; 	document.write('<script type="text/javascript" charset="UTF-8" src="' + _popIn_js + '"></scr' + 'ipt>'); 	//--> 	</script>       <!-- popIn script end -->       <!--特集-->       <!--編集部セレクション-->       <section class="Feature BoxGenreBlock">        <div class="Title clearfix">         <p>編集部セレクション</p>        </div>        <div id="Jslider">         <ul class="slide">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>         <ul class="slide">          <li>[hrefx]</li>          <li>[hrefx] </li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>         <ul class="slide">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </section>       <!--編集部セレクション-->       <!--特集-->       <div class="ArticleAd">        <div class="BigAd">         <!-- Google Advertisement Fbc start -->         <!-- www/int/Fbc -->         <div id="int-4">          <script type="text/javascript"> 			googletag.cmd.push(function() { googletag.display('int-4'); }); 			</script>         </div>         <!-- Google Advertisement Fbc end -->        </div>       </div>      </div>      <!-- right start -->      <div id="Sub" class="Normal">       <aside class="Search clearfix">        <!-- Office cookie -->        <script language="JavaScript"> 			<!-- 			function OfficeCookieRedirect(){ 				$.cookie( "jijicom_page_style" , "office" ,{ expires: 1000 , path: '/'}); 				window.location.reload( true ); 			} 			//--> 		</script>        <!-- Office cookie --> [hrefx]       </aside>       <div class="ArticleAdSide">        <!-- Google Advertisement 1stRec start -->        <!-- www/int/1stRec -->        <div id="int-0">         <script type="text/javascript"> 				googletag.cmd.push(function() { googletag.display('int-0'); }); 			</script>        </div>        <!-- Google Advertisement 1stRec end -->        <!--criteo start-->        <script type="text/javascript" src="//static.criteo.net/js/ld/publishertag.js"></script>        <div id="753213" style="width:300px;height:600px;"></div>        <script type="text/javascript"> 			Criteo.DisplayAcceptableAdIfAdblocked({"zoneid": 753213,"containerid": "753213"}); 		</script>        <!--criteo end-->       </div>       <!--フォーカス-->       <aside class="Focus Pattern6">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="FocusInner">         <ul class="clearfix">          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </aside>       <!--フォーカス-->       <!--アクセスランキング-->       <aside class="SideRanking">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox Red">         <dl class="clearfix">          <dt class="RankingTop">           <span>1</span>          </dt>          <dd>           [hrefx]          </dd>          <dt class="RankingTop">           <span>2</span>          </dt>          <dd>           [hrefx]          </dd>          <dt class="RankingTop">           <span>3</span>          </dt>          <dd>           [hrefx]          </dd>          <dt>           <span>4</span>          </dt>          <dd>           [hrefx]          </dd>          <dt>           <span>5</span>          </dt>          <dd>           [hrefx]          </dd>         </dl>        </div>       </aside>       <!--アクセスランキング-->       <div class="ArticleAdSide">        <!-- Google Advertisement 2ndRec start -->        <!-- www/int/2ndRec -->        <div id="int-2" style="width:300px; height:250px;">         <script type="text/javascript"> 					googletag.cmd.push(function() { googletag.display('int-2'); }); 				</script>        </div>        <!-- Google Advertisement 2ndRec end -->       </div>       <!--動画-->       <aside class="Movie">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="MovieInner">         <ul class="clearfix">          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>          <li> [hrefx]</li>         </ul>        </div>       </aside>       <!--動画-->       <div class="ArticleAdSide">        <!-- Google Advertisement 3rdRec start -->        <!-- www/int/3rdRec -->        <div id="int-3" style="width:300px; height:250px;">         <script type="text/javascript"> 					googletag.cmd.push(function() { googletag.display('int-3'); }); 			</script>        </div>        <!-- Google Advertisement 3rdRec end -->       </div>       <!--編集部セレクション-->       <aside class="Selection">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox">         <ul>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </aside>       <!--編集部セレクション-->       <!--　Agrio　バナー Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!--　Agrio　バナー End -->       <!--　オウチーノ　バナー Start -->       <!-- <div class="ArticleAdSide"> 	<a href="http://www.o-uccino.jp/mansion/shinchiku/zenkoku/rank/?waad=8eTocuLO"> 	<img src="/ad/img/ouccino_20160405_300_60.png" alt="オウチーノ" width="300" border="0" height="60"></a> </div> -->       <!-- オウチーノ　バナー  End -->       <!--　医学部特集神奈川　バナー Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!--　医学部特集神奈川　バナー End -->       <!-- Dr junko Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <aside class="SubNews1">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox Blue clearfix">         <ul>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>         <div class="PhotoSubNews1">          <li>[hrefx]</li>         </div>        </div>       </aside>       <!--ふるさと納税関連ニュース-->       <!--にっぽんもぎたて便-->       <aside class="Mogitate Pattern6">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox">         <ul>          <li>[hrefx]</li>          <li>[hrefx]</li>          <li>[hrefx]</li>         </ul>        </div>       </aside>       <!--にっぽんもぎたて便-->       <!--きょうは何の日？-->       <aside class="Whatday">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox Brown">         [hrefx]        </div>       </aside>       <!--きょうは何の日？-->       <!--日本語検定-->       <aside class="Nihongokentei">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="NihongokenteiInner">         <h4>【適切な言い方は？】<br />先生は各地の民芸品を精力的に収集（　）ました。[1級]</h4>         <ol>          <li class="NihongokenteiA">[hrefx]</li>          <li class="NihongokenteiB">[hrefx]</li>          <li class="NihongokenteiC">[hrefx]</li>         </ol>        </div>       </aside>       <!--日本語検定-->       <!--pr bottom-->       <!--pr bottom-->       <!--　オウチーノ　バナー Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!-- オウチーノ　バナー  End -->       <!--　書評　バナー Start -->       <!-- <div class="ArticleAdSide"> 	[hrefx] </div> -->       <!--　書評　バナー End -->       <!--　オムニバス　バナー Start -->       <!--<div class="ArticleAdSide"> 	[hrefx] </div> -->       <!--　オムニバス　バナー End -->       <!-- 時事メディカル Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!-- 時事メディカル End -->       <!--　ふるさと納税 Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!--　ふるさと納税 End -->       <!--　教育支援サイト　バナー Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!--　教育支援サイト　バナー End -->       <!-- glam Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!-- glam End -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!-- glam End -->       <!-- glam Start -->       <!-- <div class="ArticleAdSide"> 	[hrefx] </div> -->       <!-- glam End -->       <!-- glam Start -->       <div class="ArticleAdSide">        [hrefx]       </div>       <!-- glam End -->       <aside class="SpecialBox Pattern3">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox">         <ul class="clearfix">          <li> [hrefx] </li>          <li> [hrefx] </li>         </ul>        </div>       </aside>       <aside class="SpecialBox Pattern5">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox">         <ul class="clearfix">          <li> [hrefx] </li>          <li> [hrefx] </li>         </ul>        </div>       </aside>       <aside class="SpecialBox Pattern4">        <div class="AsideTitle">         <h3>[H3]</h3>        </div>        <div class="AsideInnerBox">         <ul class="clearfix">          <li> [hrefx] </li>          <li> [hrefx] </li>         </ul>        </div>       </aside>      </div>      <!-- right end -->     </div>    </div>    <!-- footer start -->    <div id="ContentEnd">     <div class="clearfix" id="ToTop">      [hrefx]     </div>     <div id="ContentEndTop">      <div class="ContentEndTopInner clearfix">       <div class="Book">        [hrefx]       </div>       <div class="Book">        [hrefx]       </div>       <div class="Book">        [hrefx]       </div>       <div class="Book mr0">        [hrefx]       </div>       <div class="Book">        [hrefx]       </div>       <div class="Book">        [hrefx]       </div>       <div class="Book">        [hrefx]       </div>       <div class="Book mr0">        [hrefx]       </div>      </div>     </div>     <div id="ContentEndBottom">      <dl>       <dt>        時事通信の商品・サービス　ラインナップ       </dt>       <dd>        <ul class="clearfix">         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>         <li>[hrefx]</li>        </ul>       </dd>      </dl>     </div>    </div>    <!-- DISPLAY on SP ICON -->    <!-- DISPLAY on SP ICON -->    <div class="SwitchSP" style="display:none;">     [hrefx]    </div>    <footer>     <div class="FooterInner clearfix">      <div id="FooterLogo">       [hrefx]      </div>      <ul class="clearfix">       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>       <li>[hrefx]</li>      </ul>     </div>    </footer>    <!-- footer end -->    <!--slider start-->    <link rel="stylesheet" type="text/css" href="/news2/common/css/slick.css" media="screen" />    <script src="/news2/common/js/slick.min.js"></script>    <script src="/news2/common/js/slider.js"></script>    <!--slider end-->    </div> </body></html>