<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" lang="jp" xml:lang="ja"><head><meta name="viewport" content="width=1080" /><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><meta http-equiv="Content-Script-Type" content="text/javascript" /><meta http-equiv="Content-Style-Type" content="text/css" /><title>[metatags_title]</title><meta content="[metatags_description]" name="description" /><meta name="keywords" content="" /><link rel="stylesheet" type="text/css" media="all" href="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/normalize.css" /><link rel="stylesheet" type="text/css" media="all" href="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/style.css" /><link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.chiyoda-vc.com/feed" /><link rel="alternate" type="application/atom+xml" title="Atom 1.0" href="http://www.chiyoda-vc.com/feed/atom" /><link href="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/favicon.ico" rel="icon" type="image/x-icon" /><meta property="og:image" content="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/logo.png" /><script type="text/javascript">	var image_dir = 'http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/';</script><link rel='stylesheet' id='jquery.ui.theme-css'  href='http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/themes/ui-lightness/jquery-ui.css?ver=3.8.21' type='text/css' media='all' /><link rel='stylesheet' id='wp-pagenavi-css'  href='http://www.chiyoda-vc.com/wordpress/wp-content/plugins/wp-pagenavi/pagenavi-css.css?ver=2.70' type='text/css' media='all' /><script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js?ver=3.8.21'></script><script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js?ver=3.8.21'></script><script type='text/javascript' src='http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/script.js?ver=3.8.21'></script><link rel='canonical' href='http://www.chiyoda-vc.com/' /><link rel='shortlink' href='http://www.chiyoda-vc.com/?p=4' /><script type="text/javascript">  var _gaq = _gaq || [];  _gaq.push(['_setAccount', 'UA-33379857-1']);  _gaq.push(['_trackPageview']);  (function() {    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);  })();</script></head><body class="home page page-id-4 page-template-default top"><div id="Belt">	<div class="container">	<img alt="[metatags_description]" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/catchcopy.png" width="383" height="29" />	<form method="get" action="http://www.google.co.jp/search" target="_blank" id="googlesearch"><input type="text" name="q" size="31" maxlength="255" value="キーワードで検索" /><input type="submit" name="btnG" value="検索" /><input type="hidden" name="sitesearch" value="www.chiyoda-vc.com" /><input type="hidden" name="ie" value="UTF-8" /><input type="hidden" name="oe" value="UTF-8" /><input type="hidden" name="hl" value="ja" /><input type="hidden" name="domains" value="www.chiyoda-vc.com" /></form>	</div></div><div id="Page"><div id="Header"><h1>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h1><ul>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]</li>    <li>[hrefx][hrefx][hrefx][hrefx]/li></ul><dl>    <dt><img alt="社会福祉法人 社会福祉協議会[标题]" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/name_small.png" width="218" height="37" />[hrefx]</dt>    <dd>		<ul>		    <li>〒102-0074 千代田区九段南1-6-10 かがやきプラザ4階</li>		    <li><img alt="TEL" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_tel_b.png" width="44" height="19" /> <span class="number">03-6265-6522</span> <img alt="FAX" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_fax_b.png" width="45" height="19" /> <span class="number">03-3265-1902</span></li>		    <li>[開室時間] 月～金 8:30～19:00　土 8:30～17:00</li>		</ul>	</dd></dl></div><div class="container">	<ul class="banner">	    <li>[hrefx][hrefx][hrefx][hrefx]</li>	    <li>[hrefx][hrefx][hrefx][hrefx]</li>	    <li>[hrefx][hrefx][hrefx][hrefx]</li>	</ul>	<dl class="social">	    <dt>ソーシャルメディアも活用しています！<br />いいね！フォローよろしくお願いします。</dt>	    <dd>[hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]			[hrefx][hrefx][hrefx][hrefx]	</dl>    <div class="message">		<p>ちよだボラセンでは千代田区内外のNPOやボランティア団体、企業や大学などと協働し、在住、在勤、在学の人たち誰もがボランティアに参加できる仕組みを通して、皆さんといっしょによりよい地域づくりをサポートしています。お気軽に参加ください。</p><img alt="ボランティアしようカニ！" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/character_kani.png" width="170" id="kani"/>	[metatags_descriptionx]	<dl id="vlog">	<dt>[hrefx][hrefx][hrefx][hrefx]</dt>	<dd><span class="date">2017年8月9日</span><br />切手でボランティア [hrefx]</dd>	</dl><div class="wrapper"><div class="update">	<div class="header">		<h2>[metatags_titlex],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[metatags_titlex]</h2>		[metatags_descriptionx]	<div class="article">		<p>ちよだボラセンより、ボランティア募集、講座・イベント、助成金情報などのボランティア関連の最新のニュースをお届けします。</p>			<div style="margin-top:10px;">[hrefx][metatags_descriptionx][metatags_descriptionx]	 <div  class="post-19014 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span><a href="http://www.chiyoda-vc.com/event-cat/%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88" >[イベント]</a> [metatags_descriptionx]	<div class="wrapper">			 <div class="date">[metatags_descriptionx]<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>								<h3>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3>[metatags_descriptionx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-22977 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span><a href="http://www.chiyoda-vc.com/event-cat/%e8%ac%9b%e5%ba%a7" >[講座]</a>  [metatags_descriptionx]	<div class="wrapper">			 <div class="date"> 			2017年7月14日 			[metatags_descriptionx]			<h2>[[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>								<h3>[[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h3><dl class="item"><dt><img alt="日時" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_date.png" width="41" /></dt><dd>8月19日(土)13:30～15:45 8月26日(土)10:30～12:00</dd><dt><img alt="場所" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_place.png" width="40" /></dt>	     <dd>かがやきプラザ</dd><dt><img alt="内容" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_content.png" width="40" height="20" /></dt><dd class="content">&nbsp;それでも僕はあきらめない～レーシングドライバーの挑戦～【日程】８月１９日(土)　１３：３０～１５：４５【ゲスト】長屋宏和さんレース中の事故により車いす生活となるが、見事復帰を果たし、現在もレーシングドライバーとして挑戦を... [hrefx]</dd></dl></div><dl class="attachments"><dt><img width="120" height="170" src="http://www.chiyoda-vc.com/wordpress/wp-content/uploads/2017/07/7db55f88bc991c41b79045969361db29-211x300.png" class="" alt="" title="" /></dt><dd></dd></dl>		<div class="social-media"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.chiyoda-vc.com%2Fevent%2F22977&amp;layout=button_count&amp;show_faces=false&amp;width=110&amp;action=like&amp;font&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:110px; height:21px;" allowTransparency="true"></iframe>[hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-23080 volunteer type-volunteer status-publish hentry article volunteer">  <div class="category">	<span class="label">ボランティア募集</span><a href="http://www.chiyoda-vc.com/volunteer-area/chiyoda" >[千代田区内]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%af%e3%83%a9%e3%83%96%e4%bc%81%e6%a5%ad%e5%90%91" >[ボランティアクラブ(企業向)]</a>  [metatags_descriptionx]	<div class="wrapper">			 <div class="date"> 			2017年8月1日 			[metatags_descriptionx]			<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>			<dl class="item">				<dt><img alt="団体" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_association.png" width="41"  /></dt><dd>ちよだボランティアセンター</dd><dt><img alt="場所" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_place.png" width="40" /></dt>	     <dd>東京都千代田区</dd><dt><img alt="内容" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_content.png" width="40" height="20" /></dt><dd class="content">第15回福祉まつり　10月21日（土）開催決定！福祉まつりにボランティアとして参加してくださる方にむけて、おもてなしボランティア説明会を開催します。参加者大募集中です！【日時】９月５日（火）　18:30～20:30　　　　 ９月９日（土）... [hrefx]</dd></dl></div><dl class="attachments"><dt><img width="120" height="169" src="http://www.chiyoda-vc.com/wordpress/wp-content/uploads/2017/08/7a972b0fc9a8f7c5eb01642f07636b85-212x300.jpg" class="" alt="" title="" /></dt><dd></dd></dl>		<div class="social-media"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.chiyoda-vc.com%2Fvolunteer%2F23080&amp;layout=button_count&amp;show_faces=false&amp;width=110&amp;action=like&amp;font&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:110px; height:21px;" allowTransparency="true"></iframe>[hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-23089 grant type-grant status-publish hentry article grant">  <div class="category">	<span class="label">助成金情報・その他</span>[metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22750 volunteer type-volunteer status-publish hentry article volunteer">  <div class="category">	<span class="label">ボランティア募集</span><a href="http://www.chiyoda-vc.com/volunteer-area/chiyoda" >[千代田区内]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e3%82%a2%e3%83%bc%e3%83%88" >[アート]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%af%e3%83%a9%e3%83%96%e4%bc%81%e6%a5%ad%e5%90%91" >[ボランティアクラブ(企業向)]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e4%ba%ba%e6%a8%a9%e6%93%81%e8%ad%b7%e3%83%bb%e5%b9%b3%e5%92%8c" >[人権擁護・平和]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22387 grant type-grant status-publish hentry article grant">  <div class="category">	<span class="label">助成金情報・その他</span><a href="http://www.chiyoda-vc.com/grant-cat/%e5%8a%a9%e6%88%90%e9%87%91" >[助成金]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-1025 volunteer type-volunteer status-publish hentry article volunteer">  <div class="category">	<span class="label">ボランティア募集</span><a href="http://www.chiyoda-vc.com/volunteer-area/chiyoda" >[千代田区内]</a> <a href="http://www.chiyoda-vc.com/volunteer-wday/weekend" >[土・日]</a> <a href="http://www.chiyoda-vc.com/volunteer-timezone/allday" >[終日]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%af%e3%83%a9%e3%83%96%e4%bc%81%e6%a5%ad%e5%90%91" >[ボランティアクラブ(企業向)]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e4%bf%9d%e5%81%a5%e3%83%bb%e5%8c%bb%e7%99%82%e3%83%bb%e7%a6%8f%e7%a5%89%e3%81%9d%e3%81%ae%e4%bb%96" >[保健・医療・福祉(その他)]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e5%85%a8%e8%88%ac" >[全般]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-8067 volunteer type-volunteer status-publish hentry article volunteer">  <div class="category">	<span class="label">ボランティア募集</span><a href="http://www.chiyoda-vc.com/volunteer-area/chiyoda" >[千代田区内]</a> <a href="http://www.chiyoda-vc.com/volunteer-wday/weekday" >[平日]</a> <a href="http://www.chiyoda-vc.com/volunteer-timezone/pm" >[午後のみ]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%af%e3%83%a9%e3%83%96%e4%bc%81%e6%a5%ad%e5%90%91" >[ボランティアクラブ(企業向)]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e4%bf%9d%e5%81%a5%e3%83%bb%e5%8c%bb%e7%99%82%e3%83%bb%e7%a6%8f%e7%a5%89%e9%ab%98%e9%bd%a2%e8%80%85" >[保健・医療・福祉(高齢者)]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23233 grant type-grant status-publish hentry article grant">  <div class="category">	<span class="label">助成金情報・その他</span><a href="http://www.chiyoda-vc.com/grant-cat/%e5%8a%a9%e6%88%90%e9%87%91" >[助成金]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23228 volunteer type-volunteer status-publish hentry article volunteer">  <div class="category">	<span class="label">ボランティア募集</span><a href="http://www.chiyoda-vc.com/volunteer-area/chiyoda" >[千代田区内]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e5%85%a8%e8%88%ac" >[全般]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e5%9c%b0%e5%9f%9f%e5%ae%89%e5%85%a8" >[地域安全]</a> <a href="http://www.chiyoda-vc.com/volunteer-cat/%e7%a4%be%e4%bc%9a%e6%95%99%e8%82%b2" >[社会教育]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23222 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span><a href="http://www.chiyoda-vc.com/event-cat/%e8%ac%9b%e5%ba%a7" >[講座]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23210 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span><a href="http://www.chiyoda-vc.com/event-cat/%e8%ac%9b%e5%ba%a7" >[講座]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23192 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23190 grant type-grant status-publish hentry article grant">  <div class="category">	<span class="label">助成金情報・その他</span><a href="http://www.chiyoda-vc.com/grant-cat/%e5%8a%a9%e6%88%90%e9%87%91" >[助成金]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23188 grant type-grant status-publish hentry article grant">  <div class="category">	<span class="label">助成金情報・その他</span><a href="http://www.chiyoda-vc.com/grant-cat/%e5%8a%a9%e6%88%90%e9%87%91" >[助成金]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23179 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23175 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span><a href="http://www.chiyoda-vc.com/event-cat/%e3%82%a4%e3%83%99%e3%83%b3%e3%83%88" >[イベント]</a> <a href="http://www.chiyoda-vc.com/event-cat/%e8%ac%9b%e5%ba%a7" >[講座]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-23142 event type-event status-publish hentry article event">  <div class="category">	<span class="label">講座・イベント</span>[metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --> <div class="nav bottom">			[hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx][hrefx]		[metatags_descriptionx]			<div class="facebook" style="margin-top:10px;">			<div class="header">			<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>			[metatags_descriptionx]		<div class="article" style="padding:0;">				<iframe src="//www.facebook.com/plugins/likebox.php?href=https%3A%2F%2Fwww.facebook.com%2FChiyodaVolunteerCenter&amp;width=492&amp;height=590&amp;colorscheme=light&amp;show_faces=false&amp;border_color&amp;stream=true&amp;header=true" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:492px; height:590px;" allowTransparency="true"></iframe>			[metatags_descriptionx]		[metatags_descriptionx]	</div><!-- update --><div class="aside right"><div class="information">	<div class="header">		<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		<div class="nav top">			[hrefx][hrefx][hrefx][hrefx]		[metatags_descriptionx][metatags_descriptionx]<div  class="post-23146 post type-post status-publish format-standard hentry category-78 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e7%81%bd%e5%ae%b3%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e6%83%85%e5%a0%b1" >[災害ボランティア情報]</a> [metatags_descriptionx]				 <div class="date"> 			<img alt="New" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/icon_new.png" width="28" height="13" /> 2017年8月3日 			[metatags_descriptionx]			<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>			<div class="content">秋田県豪雨災害（第６報）31日 7月 2017７月２２日（土）からの記録的な大雨により、秋田県では各地で被害が発生しました。大仙市、仙... [hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-23015 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a> [metatags_descriptionx]				 <div class="date"> 			2017年7月25日 			[metatags_descriptionx]			<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>			<div class="content">＝トピックス＝第１５回福祉まつり×おもてなしボランティア募集&nbsp;■JoinUs!　○障がいのある方をサポート　○おりづるを作ろう!めざさ6万... [hrefx]</div><dl class="attachments"><dt><img width="230" height="323" src="http://www.chiyoda-vc.com/wordpress/wp-content/uploads/2017/07/37e3808047553cedb34daa9b1d7ab2a3-569x800.png" class="" alt="" title="" /></dt><dd></dd></dl>		<div class="social-media"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.chiyoda-vc.com%2F23015&amp;layout=button_count&amp;show_faces=false&amp;width=110&amp;action=like&amp;font&amp;colorscheme=light&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:110px; height:21px;" allowTransparency="true"></iframe>[hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-22931 post type-post status-publish format-standard hentry category-78 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e7%81%bd%e5%ae%b3%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e6%83%85%e5%a0%b1" >[災害ボランティア情報]</a> [metatags_descriptionx]				 <div class="date"> 			2017年7月7日 			[metatags_descriptionx]			<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>			<div class="content">九州北部豪雨災害（第１７報）31日 7月 2017       活発な梅雨前線の影響により、７月５日（水）から、福岡県や大分県を中心とした九州... [hrefx]<script type="text/javascript" src="http://platform.twitter.com/widgets.js"></script>[metatags_descriptionx]			 </div> <!-- closes the first div box --><div  class="post-18759 post type-post status-publish format-standard hentry category-42 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22864 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22240 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22184 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-3035 post type-post status-publish format-standard hentry category-42 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-16731 post type-post status-publish format-standard hentry category-42 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a> [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-16922 post type-post status-publish format-standard hentry category-42 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-10300 post type-post status-publish format-standard hentry category-42 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22652 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22415 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-17916 post type-post status-publish format-standard hentry category-42 category-78 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%8a%e7%9f%a5%e3%82%89%e3%81%9b" >[お知らせ]</a> <a href="http://www.chiyoda-vc.com/category/%e7%81%bd%e5%ae%b3%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e6%83%85%e5%a0%b1" >[災害ボランティア情報]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-22023 post type-post status-publish format-standard hentry category-66 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%81%a1%e3%82%88%e3%81%a0%e3%83%9c%e3%83%a9%e3%83%b3%e3%83%86%e3%82%a3%e3%82%a2%e3%82%bb%e3%83%b3%e3%82%bf%e3%83%bc%e6%83%85%e5%a0%b1%e8%aa%8c" >[ちよだボランティアセンター情報誌]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box --><div  class="post-21756 post type-post status-publish format-standard hentry category-81 article post">  <div class="category">	<a href="http://www.chiyoda-vc.com/category/%e3%83%a1%e3%83%bc%e3%83%ab%e3%83%9e%e3%82%ac%e3%82%b8%e3%83%b3%e3%80%8c%e5%8d%83%e4%bb%a3%e7%94%b0%e3%81%a7%e3%81%a4%e3%81%aa%e3%83%a1%e3%83%bc%e3%83%ab%e3%80%8d" >[メールマガジン「千代田でつなメール」]</a>  [metatags_descriptionx]	<h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>		 </div> <!-- closes the first div box -->	<div class="nav bottom">			[hrefx][hrefx][hrefx][hrefx]		[metatags_descriptionx][metatags_descriptionx]<div class="twitter"><div class="header"><h2>[H2]</h2>[metatags_descriptionx]<div class="article" style="padding:0;min-height:600px;"><a class="twitter-timeline" href="https://twitter.com/chiyoda_vc" data-widget-id="379421147999109121">@chiyoda_vc からのツイート</a><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>[metatags_descriptionx][metatags_descriptionx][metatags_descriptionx]<div class="aside left">	<div class="search">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[metatags_descriptionx]	<div class="article">			<p>あなたが参加できる地域、日時、分野などからボランティアを探そう！</p>			<form action="./" method="post"><dl><dt><img alt="場所" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_place.png" width="40" height="21" /></dt><dd><label ><input type="radio" value="9" name="volunteer-area" checked="checked" /> 千代田区内(90)</label><label ><input type="radio" value="10" name="volunteer-area"  /> 区外(5)</label></dd><dt><img alt="日にち" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_day.png" width="40" height="21" /></dt><dd class="searchday"><input type="text" id="startdate" name="startdate" value="" size="20" /> から<br /><input type="text" id="enddate" name="enddate" value="" size="20" /> まで<p>未記入の場合は本日以降の活動を紹介します。</p><script type="text/javascript">jQuery(function($){		$('#startdate').datepicker({			dateFormat : 'yy年mm月dd日',			 onSelect: function(dateText, inst){				if($('#enddate').val() == ''){					//$('#enddate').val(dateText);				}			}		});		$('#enddate').datepicker({			dateFormat : 'yy年mm月dd日'		});		$('form').live('reset',function(event){			$('input:checked').each(function(){				$(this).removeAttr('checked');			});			$('input:text').each(function(){				$(this).val('');			});			return false;		});});</script></dd><dt><img alt="曜日" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_wday.png" width="40" height="20" /></dt><dd><label ><input type="radio" value="7" name="volunteer-wday"  /> 平日(27)</label><label ><input type="radio" value="8" name="volunteer-wday"  /> 土・日(8)</label></dd><dt><img alt="時間帯" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_timezone.png" width="40" height="21" /></dt><dd><label ><input type="radio" value="3" name="volunteer-timezone"  /> 午前のみ(3)</label><label ><input type="radio" value="4" name="volunteer-timezone"  /> 午後のみ(11)</label><label ><input type="radio" value="6" name="volunteer-timezone"  /> 終日(11)</label><label ><input type="radio" value="5" name="volunteer-timezone"  /> 夜間(4)</label></dd><dt><img alt="分野" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_field.png" width="40" height="21" /></dt><dd><label ><input type="checkbox" value="68" name="volunteer-cat[]"  /> ボランティアクラブ(企業向)(44)</label><label ><input type="checkbox" value="121" name="volunteer-cat[]"  /> アート(8)</label><label ><input type="checkbox" value="48" name="volunteer-cat[]"  /> 保健・医療・福祉(障がい児・者)(8)</label><label ><input type="checkbox" value="47" name="volunteer-cat[]"  /> 保健・医療・福祉(高齢者)(23)</label><label ><input type="checkbox" value="46" name="volunteer-cat[]"  /> 保健・医療・福祉(子ども)(14)</label><label ><input type="checkbox" value="49" name="volunteer-cat[]"  /> 保健・医療・福祉(その他)(4)</label><label ><input type="checkbox" value="59" name="volunteer-cat[]"  /> 子ども(12)</label><label ><input type="checkbox" value="54" name="volunteer-cat[]"  /> 災害救助(4)</label><label ><input type="checkbox" value="53" name="volunteer-cat[]"  /> 環境保全(2)</label><label ><input type="checkbox" value="51" name="volunteer-cat[]"  /> まちづくり(13)</label><label ><input type="checkbox" value="50" name="volunteer-cat[]"  /> 社会教育(7)</label><label ><input type="checkbox" value="55" name="volunteer-cat[]"  /> 地域安全(15)</label><label  class="nothing"><input type="checkbox" value="62" name="volunteer-cat[]"  /> 経済(0)</label><label ><input type="checkbox" value="60" name="volunteer-cat[]"  /> 情報(3)</label><label ><input type="checkbox" value="65" name="volunteer-cat[]"  /> 団体運営(4)</label><label  class="nothing"><input type="checkbox" value="58" name="volunteer-cat[]"  /> 男女参画(0)</label><label  class="nothing"><input type="checkbox" value="63" name="volunteer-cat[]"  /> 職業・雇用(0)</label><label ><input type="checkbox" value="56" name="volunteer-cat[]"  /> 人権擁護・平和(5)</label><label  class="nothing"><input type="checkbox" value="61" name="volunteer-cat[]"  /> 科学技術(0)</label><label  class="nothing"><input type="checkbox" value="64" name="volunteer-cat[]"  /> 消費者保護(0)</label><label ><input type="checkbox" value="57" name="volunteer-cat[]"  /> 国際協力(8)</label><label ><input type="checkbox" value="52" name="volunteer-cat[]"  /> 学術・文化・芸術・スポーツ(14)</label><label ><input type="checkbox" value="77" name="volunteer-cat[]"  /> 全般(8)</label><label ><input type="checkbox" value="17" name="volunteer-cat[]"  /> その他(5)</label></dd><dd><input type="reset" value="検索条件をリセット" /></dd></dl>	<button type="submit" name="search-volunteer" value="search">条件を入れてここをクリック!<br /><img alt="ボランティア活動を探す" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/button_search-volunteer.png" width="230" height="31" /></button></form>			[metatags_descriptionx]	[metatags_descriptionx]	<div class="corporation">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[文章]		<div class="article">			<p>ちよだボラセンは区内の事業者と連携、地域のボランティア活動を推進します。</p>		<ul>		    <li>[hrefx][hrefx][hrefx][hrefx]</li>		    <li>[hrefx][hrefx][hrefx][hrefx]</li>		</ul>				[metatags_descriptionx]	[metatags_descriptionx]	<div class="npo">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[metatags_descriptionx]		<div class="article">			<p>ちよだボラセンは区内のボランティア・市民活動を支援しています</p>			<ul>			    <li>[hrefx][hrefx][hrefx][hrefx]</li>			    <li>[hrefx][hrefx][hrefx][hrefx]</li>			    <li>[hrefx][hrefx][hrefx][hrefx]</li>			    <li>[hrefx][hrefx][hrefx][hrefx]</li>			    <li>[hrefx][hrefx][hrefx][hrefx]</li>			</ul>					[metatags_descriptionx]	[metatags_descriptionx]	<div class="media">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[metatags_descriptionx]	<div class="article">		<dl>    	<dt><img alt="MailMagazine" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_mailmagazine.png" width="114" height="18" /><br />毎週火曜日発行！メルマガ『千代田でつなメール』</dt>    <dd id="mailmagazine">最新情報はメルマガで！読者募集中！[hrefx]</dd>    <dt><img alt="FreeMagazine" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_freemagazine.png" width="118" height="18" /><br />情報ステーションで無料配布中！情報マガジン『ボランティア』の発行</dt>    <dd>[hrefx]ちよだボラセンでは毎月25日に情報マガジン『ボランティア』を発行し、ボランティア団体や活動、助成金情報、参加者の声などをお届けしています。「情報誌がほしい！」「配付したい！」「情報ステーションになりたい」という方はちよだボラセンまでお気軽にお問い合せください。</dd>		</dl>	[metatags_descriptionx]	[metatags_descriptionx]	<div class="point">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[metatags_descriptionx]	<div class="article" style="padding-top:10px;text-align:center;">			[hrefx][hrefx][hrefx][hrefx]		[metatags_descriptionx][metatags_descriptionx]	<div class="network">		<div class="header"><h2>[metatags_titlex],[metatags_titlex][hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[hrefx],[hrefx][hrefx][hrefx],[metatags_titlex],[metatags_titlex],[metatags_titlex],[hrefx][hrefx],[metatags_titlex],[metatags_titlex],[hrefx][hrefx][hrefx],[metatags_titlex]</h2>[文章]		<div class="article">		<p>ちよだボラセンは様々な団体と協力し、ボランティア社会をつくっています。</p>				    	<ul>	<li class="cat-item cat-item-26">[hrefx] (3)</li>	<li class="cat-item cat-item-28">[hrefx][hrefx][hrefx][hrefx] (6)</li>	<li class="cat-item cat-item-29">[hrefx][hrefx][hrefx][hrefx] (8)</li>	<li class="cat-item cat-item-67">[hrefx][hrefx][hrefx][hrefx] (1)</li>	<li class="cat-item cat-item-30">[hrefx][hrefx][hrefx][hrefx] (24)</li>	<li class="cat-item cat-item-31">[hrefx][hrefx][hrefx][hrefx] (53)</li>	<li class="cat-item cat-item-27">[hrefx][hrefx][hrefx][hrefx] (2)</li>	<li class="cat-item cat-item-69">[hrefx][hrefx][hrefx][hrefx] (56)</li>	<li class="cat-item cat-item-70">[hrefx][hrefx][hrefx][hrefx] (31)</li>	<li class="cat-item cat-item-71">[hrefx][hrefx][hrefx][hrefx] (48)</li>	<li class="cat-item cat-item-72">[hrefx][hrefx][hrefx][hrefx] (19)</li>	<li class="cat-item cat-item-73">[hrefx][hrefx][hrefx][hrefx](35)</li>	<li class="cat-item cat-item-74">[hrefx][hrefx][hrefx][hrefx] (21)</li>	<li class="cat-item cat-item-75">[hrefx][hrefx][hrefx][hrefx] (13)</li>		<li>[hrefx][hrefx][hrefx][hrefx]</li></ul>						[metatags_descriptionx]	[metatags_descriptionx]<ul id="banner"><!--	<li>[hrefx]</li> -->	<li>[hrefx][hrefx][hrefx][hrefx]</li>          <li>[hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx]</li>	<li>[hrefx][hrefx][hrefx][hrefx]/li>	</ul>[metatags_descriptionx][metatags_descriptionx][metatags_descriptionx]<!-- end of container -->[metatags_descriptionx]<!-- end of Page --><div id="Footer">	<div class="container">		<dl>		    <dt>[hrefx][hrefx][hrefx][hrefx]<img alt="社会福祉法人 社会福祉協議会[标题]" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/name_big.png" width="377" height="64" /></dt>		    <dd>				<ul>				    <li>〒102-0074 千代田区九段南1-6-10 かがやきプラザ4階</li>				    <li><img alt="TEL" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_tel_b.png" width="44" height="19" /> <span class="number">03-6265-6522</span> <img alt="FAX" src="http://www.chiyoda-vc.com/wordpress/wp-content/themes/default/images/label_fax_b.png" width="45" height="19" /> <span class="number">03-3265-1902</span></li>				    <li>[開室時間] 月～金 8:30～19:00　土 8:30～17:00</li>				</ul>			</dd>		</dl>		<div id="totop">[hrefx][metatags_descriptionx]		<div id="copyright">&copy; 2017 chiyoda volunteer center.<br />All Rights Reserved.[metatags_descriptionx]	[metatags_descriptionx][metatags_descriptionx]<!-- end of Footer --><script type='text/javascript' src='http://www.chiyoda-vc.com/wordpress/wp-includes/js/jquery/ui/jquery.ui.datepicker.min.js?ver=1.10.3'></script></body></html>